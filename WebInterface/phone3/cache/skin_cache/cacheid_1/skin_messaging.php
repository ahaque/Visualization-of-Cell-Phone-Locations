<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 1               */
/* CACHE FILE: Generated: Sun, 06 Sep 2009 04:32:03 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_messaging_1 {

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	/* Make object */
	$this->registry   =  $registry;
	$this->DB         =  $this->registry->DB();
	$this->settings   =& $this->registry->fetchSettings();
	$this->request    =& $this->registry->fetchRequest();
	$this->lang       =  $this->registry->getClass('class_localization');
	$this->member     =  $this->registry->member();
	$this->memberData =& $this->registry->member()->fetchMemberData();
	$this->cache      =  $this->registry->cache();
	$this->caches     =& $this->registry->cache()->fetchCaches();
}
	/* -- messengerTemplate --*/
function messengerTemplate($html, $jumpmenu, $dirData, $totalData=array(), $topicParticipants=array(), $inlineError='', $deletedTopic=0) {
$IPBHTML = "";

$this->registry->templateStriping['participants'] = array( FALSE, "row1","row2");
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("messenger", "0" ) . "
<h2>{$this->lang->words['m_messenger']}</h2>
<div id='messenger_utilities' class='left'>
	<!-- Show topic participants -->
	" . ((is_array( $topicParticipants ) and count( $topicParticipants )) ? ("<div class='general_box alt' id='participants'>
			<h3 class='bar'>{$this->lang->words['participants']}</h3>
						<ul id='participants_list'>
				".$this->__f__a1bbb8dfab907365e3a67bb7c366c537($html,$jumpmenu,$dirData,$totalData,$topicParticipants,$inlineError,$deletedTopic)."					
			</ul>
			<ul class='post_controls'>
				<li>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=toggleNotifications&amp;topicID={$this->request['topicID']}&amp;authKey={$this->member->form_hash}", 'publicWithApp','' ), "", "" ) . "' title='{$this->lang->words['toggle_noti_title']}'>
					" . (($topicParticipants[ $this->memberData['member_id'] ]['map_ignore_notification']) ? ("
						" . $this->registry->getClass('output')->getReplacement("msg_notify_on") . " {$this->lang->words['turn_noti_on']}
					") : ("
						" . $this->registry->getClass('output')->getReplacement("msg_notify_on") . " {$this->lang->words['turn_noti_off']}
					")) . "
					</a>
				</li>
			</ul>
		</div>
		" . (($this->memberData['g_max_mass_pm'] && count( $topicParticipants ) < $this->memberData['g_max_mass_pm'] && ! $deletedTopic) ? ("<div id='invite_more' class='general_box alt'>
				<h3>{$this->lang->words['invite_part']}</h3>
				<div id='invite_more_dialogue'>
					<form method='post' action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=addParticipants", 'public','' ), "", "" ) . "'>
					<input type='hidden' name='authKey' value='{$this->member->form_hash}' />
					<input type='hidden' name='topicID' value='{$this->request['topicID']}' />
					<input type='hidden' name='st' value='{$this->request['st']}' />
					<ul><li><label for='invite_more_autocomplete'>{$this->lang->words['enter_member_names']}</label> 
					<input type='text' class='input_text' name='inviteNames' id='invite_more_autocomplete' value='{$this->request['inviteNames']}' size='38' /> 
					<br /><span class='desc'>[x]{$this->lang->words['separated_with_commas']}</span> 
					</li></ul><fieldset class='submit'><input type='submit' class='input_submit' value='{$this->lang->words['part_add']}' />  
					{$this->lang->words['or']} <a href='#' id='invite_more_cancel' class='cancel' title='{$this->lang->words['cancel']}'>{$this->lang->words['cancel']}</a></fieldset></form>
				</div>
				<div id='invite_more_default'>
					" . (($this->memberData['g_max_mass_pm'] == 0) ? ("
						<p class='desc'>{$this->lang->words['can_invite_unlimited']}</p>
						<script type='text/javascript'>
							ipb.messenger.invitesLeft = parseInt( 0 );
							ipb.messenger.nameText = ipb.lang['enter_unlimited_names'];
						</script>
					") : ("
						<p class='desc'>{$this->lang->words['may_invite_upto']} <strong>" . ( $this->memberData['g_max_mass_pm'] - count( $topicParticipants ) ) . "</strong> {$this->lang->words['more_members']}</p>
						<script type='text/javascript'>
							ipb.messenger.invitesLeft = parseInt( " . ( $this->memberData['g_max_mass_pm'] - count( $topicParticipants ) ) . " );
							ipb.messenger.nameText = ipb.lang['enter_x_names'].gsub(/\\[x\\]/, ipb.messenger.invitesLeft);
						</script>
					")) . "
					<ul class='post_controls'>
						<li id='add_participants'><a href='#' title='{$this->lang->words['add_participants']}'>" . $this->registry->getClass('output')->getReplacement("add_participants") . "&nbsp; {$this->lang->words['part_add']}</a></li>
					</ul>
				</div>
			</div>") : ("")) . "") : ("")) . "
	<div id='folder_list' class='general_box alt'>
		<h3>{$this->lang->words['folders']}</h3>
		<ol id='folders'>
			" . ((count($dirData)) ? ("
				".$this->__f__6e6a459c7400765031446a2d6c5918bd($html,$jumpmenu,$dirData,$totalData,$topicParticipants,$inlineError,$deletedTopic)."			") : ("")) . "
		</ol>
		<div class='clearfix post_controls'>
			<ul class='post_controls'>
				<!-- SKINNOTE: We need a static way to add/edit folders -->
				<li id='add_folder'><a href='#' title='{$this->lang->words['add_folder']}'>" . $this->registry->getClass('output')->getReplacement("add_folder") . " {$this->lang->words['folder_add']}</a></li>
				<li id='edit_folders'><a href='#' title='{$this->lang->words['edit_folders']}'>" . $this->registry->getClass('output')->getReplacement("edit_folder") . " {$this->lang->words['folders_edit']}</a></li>
			</ul>
		</div>
		<script type='text/javascript'>
		//<![CDATA[
			ipb.messenger.folderTemplate = \"<li class='folder' id='f_[id]'>" . $this->registry->getClass('output')->getReplacement("folder_generic") . " <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=showFolder&amp;folderID=[id]", 'publicWithApp','' ), "", "" ) . "' title='{$this->lang->words['go_to_folder']}' rel='folder_name'>[name]</a> <span class='total'>[total]</span><span class='edit_folders' style='display: none'><a href='#' id='delete_[id]' class='f_delete' title='{$this->lang->words['delete_folder_title']}'>" . $this->registry->getClass('output')->getReplacement("folder_delete") . "</a> <a href='#' id='empty_[id]' class='f_empty' title='{$this->lang->words['empty_folder_title']}'>" . $this->registry->getClass('output')->getReplacement("folder_empty") . "</a></span></li>\";
		//]]>
		</script>
	</div>
	" . (($this->memberData['g_max_messages'] > 0) ? ("<div id='space_allowance' class='general_box'>
			<h3>{$this->lang->words['storage']}</h3>
			<p>{$this->lang->words['your_messenger_storage']}</p>
			<p class='progress_bar' title='" . sprintf( $this->lang->words['pmpc_full_string'], $totalData['full_percent'] ) . "' " . (($totalData['full_percent'] > 80) ? ("class='limit'") : ("")) . ">
				<span style='width: {$totalData['full_percent']}%'>{$totalData['full_percent']}%</span>
			</p>
			<p>
				<span class='desc'>{$totalData['full_percent']}% {$this->lang->words['of_your_quota']} ({$this->memberData['g_max_messages']} {$this->lang->words['messages']})</span>
			</p>
		</div>") : ("")) . "
	<div id='message_search' class='general_box'>
		<h3>{$this->lang->words['search_messages']}</h3>
		<form action='{$this->settings['base_url']}app=members&amp;module=messaging&amp;section=search' method='post'>
			<fieldset>
				<input type='text' name='searchFor' class='input_text' size='15' style='width: 60%' /> <input type='submit' class='input_submit' value='{$this->lang->words['jmp_go']}' />
			</fieldset>
		</form>
	</div>
</div>
<div id='messenger_content' class='right'>
	" . (($inlineError) ? ("
	<div class='message error'>
		<h4>{$inlineError}</h4>
	</div>
	<br />
	") : ("")) . "
	{$html}
</div>
<!-- end -->";
return $IPBHTML;
}


function __f__a1bbb8dfab907365e3a67bb7c366c537($html, $jumpmenu, $dirData, $totalData=array(), $topicParticipants=array(), $inlineError='', $deletedTopic=0)
{
	$_ips___x_retval = '';
	foreach( $topicParticipants as $memberID => $memberData )
	{
		
		$_ips___x_retval .= "
					<li class='" .  IPSLib::next( $this->registry->templateStriping["participants"] ) . "'>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$memberData['member_id']}", 'public','' ), "{$memberData['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' ><img src='{$memberData['pp_thumb_photo']}' width='{$memberData['pp_thumb_width']}' height='{$memberData['pp_thumb_height']}' alt='{$this->lang->words['photo']}' class='photo' /></a>
						" . (($memberData['map_ignore_notification']) ? ("
							" . $this->registry->getClass('output')->getReplacement("msg_notify_off") . "
						") : ("
							" . $this->registry->getClass('output')->getReplacement("msg_notify_on") . "
						")) . "
						" . (($memberData['map_user_active']) ? ("" . (($memberData['map_is_starter']) ? ("
								<span class='name starter'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$memberData['member_id']}", 'public','' ), "{$memberData['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><strong>{$memberData['members_display_name_short']}</strong></a></span>" . $this->registry->getClass('output')->getTemplate('global')->user_popup($memberData['member_id'], $memberData['members_seo_name']) . "
							") : ("
								<span class='name'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$memberData['member_id']}", 'public','' ), "{$memberData['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'>{$memberData['members_display_name_short']}</a></span>" . $this->registry->getClass('output')->getTemplate('global')->user_popup($memberData['member_id'], $memberData['members_seo_name']) . "
							")) . "
							<br />
							<span class='desc'>
								" . (($memberData['_topicDeleted']) ? ("
									<em>{$this->lang->words['topic_deleted']}</em>
								") : ("{$this->lang->words['last_read']}
									" . (($memberData['map_read_time']) ? ("
										" . $this->registry->getClass('class_localization')->getDate($memberData['map_read_time'],"short", 0) . "
									") : ("
										<em>{$this->lang->words['not_yet_read']}</em>
									")) . "")) . "							
							</span>
							" . ((! $memberData['map_is_starter'] AND $memberData['_canBeBlocked'] AND ($topicParticipants[ $this->memberData['member_id'] ]['map_is_starter'] OR $this->memberData['g_is_supmod']) AND ( $memberData['map_user_id'] != $this->memberData['member_id'] ) AND !$memberData['_topicDeleted']) ? ("
								<br /><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=blockParticipant&amp;topicID={$this->request['topicID']}&amp;memberID={$memberData['map_user_id']}&amp;authKey={$this->member->form_hash}", 'publicWithApp','' ), "", "" ) . "\" title='{$this->lang->words['block_this_user']}' class='cancel'>{$this->lang->words['block']}</a>
							") : ("")) . "") : ("" . (($memberData['map_user_banned']) ? ("<span class='name blocked'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$memberData['member_id']}", 'public','' ), "{$memberData['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><strong>{$memberData['members_display_name_short']}</strong></a></span>" . $this->registry->getClass('output')->getTemplate('global')->user_popup($memberData['member_id'], $memberData['members_seo_name']) . "
								<br />
								<span class='desc'>{$this->lang->words['user_is_blocked']}</span>
								<br />
								" . (($memberData['_canBeBlocked'] AND ($topicParticipants[ $this->memberData['member_id'] ]['map_is_starter'] OR $this->memberData['g_is_supmod'])) ? ("
									<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=unblockParticipant&amp;topicID={$this->request['topicID']}&amp;memberID={$memberData['map_user_id']}&amp;authKey={$this->member->form_hash}", 'publicWithApp','' ), "", "" ) . "\" title='{$this->lang->words['unblock_this_user']}' class='cancel'>{$this->lang->words['unblock']}</a>
								") : ("")) . "") : ("<span class='name left_convo'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$memberData['member_id']}", 'public','' ), "{$memberData['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><strong>{$memberData['members_display_name_short']}</strong></a></span>" . $this->registry->getClass('output')->getTemplate('global')->user_popup($memberData['member_id'], $memberData['members_seo_name']) . "
								<br />
								<span class='desc'>
									" . (($memberData['_topicDeleted']) ? ("
									<em>{$this->lang->words['topic_deleted']}</em>
									") : ("" . (($memberData['map_is_system']) ? ("
											{$this->lang->words['is_unable_part']}
										") : ("
											{$this->lang->words['has_left_convo']}
										")) . "")) . "
								</span>")) . "")) . "
					</li>
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__6e6a459c7400765031446a2d6c5918bd($html, $jumpmenu, $dirData, $totalData=array(), $topicParticipants=array(), $inlineError='', $deletedTopic=0)
{
	$_ips___x_retval = '';
	foreach( $dirData as $id => $data )
	{
		
		$_ips___x_retval .= "
					" . (($data['protected']) ? ("
						<li class='folder protected' id='f_{$id}'>" . $this->registry->getClass('output')->getReplacement("folder_{$id}") . "
					") : ("
						<li class='folder' id='f_{$id}'>" . $this->registry->getClass('output')->getReplacement("folder_generic") . "
					")) . "
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=showFolder&amp;folderID={$id}", 'publicWithApp','' ), "", "" ) . "\" title=\"{$this->lang->words['go_to_folder']}\" rel=\"folder_name\">{$data['real']}</a>
					<span class='total rounded'>
						" . (($id == 'all') ? ("
							" . intval($this->memberData['msg_count_total']) . "
						") : ("
							" . intval($data['count']) . "
						")) . "
					</span>
					" . ((! $data['protected']) ? ("
						<span class='edit_folders' style='display: none'><a href='#' id='delete_{$id}' class='f_delete' title=\"{$this->lang->words['delete_folder_title']}\">" . $this->registry->getClass('output')->getReplacement("folder_delete") . "</a> <a href='#' id='empty_{$id}' class='f_empty' title=\"{$this->lang->words['empty_folder_title']}\">" . $this->registry->getClass('output')->getReplacement("folder_empty") . "</a></span></li>
					") : ("
						<span class='edit_folders' style='display: none'><a href='#' id='empty_{$id}' class='f_empty' title=\"{$this->lang->words['empty_folder_title']}\">" . $this->registry->getClass('output')->getReplacement("folder_empty") . "</a></span></li>
					")) . "
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- PMQuickForm --*/
function PMQuickForm($toMemberData) {
$IPBHTML = "";
$IPBHTML .= "<form id='pm_to_member_{$toMemberData['member_id']}'>
	<input type='hidden' name='toMemberID' value='{$toMemberData['member_id']}' />
	
	<fieldset class='row1'>
		<h3>{$this->lang->words['quick_send_to']} {$toMemberData['members_display_name']}</h3>
		<div id='pm_error_{$toMemberData['member_id']}'>
			<br />
			<p class='message error'></p></div>
			<script type='text/javascript'>
				$('pm_error_{$toMemberData['member_id']}').hide();
			</script>
		<ul>
			<li class='field'>
				<label for='pm_subject_{$toMemberData['member_id']}'>{$this->lang->words['quick_subject']}</label>
				<input type='text' class='input_text' id='pm_subject_{$toMemberData['member_id']}' name='msg_title' size='50' tabindex='0' />
			</li>
			<li class='field'>
				<label for='pm_textarea_{$toMemberData['member_id']}'>{$this->lang->words['quick_message']}</label>
				<textarea class='input_text' name='Post' tabindex='0' id='pm_textarea_{$toMemberData['member_id']}' cols='70' rows='8'></textarea>
			</li>
		</ul>
	</fieldset>
	<fieldset class='submit'>
		<input type='submit' class='input_submit' name='send_msg' value='{$this->lang->words['quick_send_button']}' accesskey='s' tabindex='0' /> {$this->lang->words['or']} <a href='#' class='cancel' title='{$this->lang->words['cancel']}' id='pm_cancel_{$toMemberData['member_id']}' tabindex='0'>{$this->lang->words['cancel']}</a>
	</fieldset>
</form>";
return $IPBHTML;
}

/* -- sendNewPersonalTopicForm --*/
function sendNewPersonalTopicForm($displayData) {
$IPBHTML = "";
$IPBHTML .= "<div id='message_compose' class='post_form'>
	<form id='msgForm' style='display:block' action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=send", 'publicWithApp','' ), "", "" ) . "\" method=\"post\" enctype='multipart/form-data'>
	
" . (($displayData['preview']) ? ("
	<h2 class='maintitle'>{$this->lang->words['pm_preview']}</h2>
	<div class='post_wrap' id='post_preview'>
		<div class='row2' style='padding:8px'>
			<div class='post entry-content'>{$displayData['preview']}</div>
		</div>
	</div>
	<br />
") : ("")) . "
<h2 class='maintitle'>{$this->lang->words['mess_new']}</h2>
" . (($displayData['errors']) ? ("
<div class='message error'>
	<h4>{$this->lang->words['err_errors']}</h4>
	<p>{$displayData['errors']}</p>
	<p>{$this->lang->words['pme_none_sent']}</p>
</div>
") : ("")) . "
<div class='generic_bar'></div>
<fieldset>
	<h3 class='bar'>{$this->lang->words['pro_recips']}</h3>
	<ul>
		<li class='field'>
			<label for='entered_name'>{$this->lang->words['to_whom']}</label>
			<input type=\"text\" class='input_text' id='entered_name' name=\"entered_name\" size=\"30\" value=\"{$displayData['name']}\" tabindex=\"0\" />
		</li>
		" . ((intval($this->memberData['g_max_mass_pm'])) ? ("<li class='field'>
				<label for='more_members'>{$this->lang->words['other_recipients']}</label>
				<input type='text' size=\"50\" class='input_text' name='inviteUsers' value='{$displayData['inviteUsers']}' id='more_members' tabindex='0' />
				<span class='desc'>{$this->lang->words['youmay_add_to']} <strong>{$this->memberData['g_max_mass_pm']}</strong> {$this->lang->words['youmay_suffix']}</span>
			</li>
			<li class='field'>
				<label for='send_type'>{$this->lang->words['send_to_as']}</label>
				<select name='sendType' id='send_type' tabindex='0'>
					<option value='invite'" . (($this->request['sendType']=='invite') ? (" selected='selected'") : ("")) . ">{$this->lang->words['send__invite']}</option>
					<option value='copy'" . (($this->request['sendType']=='copy') ? (" selected='selected'") : ("")) . ">{$this->lang->words['send__copy']}</option>
				</select>
				<span class='desc'>
					<strong>{$this->lang->words['send__invite']}</strong> {$this->lang->words['invite__desc']}<br />
					<strong>{$this->lang->words['send__copy']}</strong> {$this->lang->words['copy__desc']}
				</span>
			</li>") : ("")) . "
	</ul>
</fieldset>
<fieldset>
	<h3 class='bar'>{$this->lang->words['pro_message']}</h3>
	<ul>
		<li class='field'>
			<label for='message_subject'>{$this->lang->words['message_subject_send']}</label>
			<input type=\"text\" name=\"msg_title\" id='message_subject' class='input_text' size=\"40\" tabindex=\"0\" maxlength=\"40\" value=\"{$displayData['title']}\" />
		</li>
		<li>
			{$displayData['editor']}
		</li>
	</ul>
</fieldset>
" . (($displayData['uploadData']['canUpload']) ? ("
<fieldset class='attachments'>
	" . $this->registry->getClass('output')->getTemplate('post')->uploadForm($displayData['postKey'], 'msg', $displayData['uploadData']['attach_stats'], 0) . "
</fieldset>
") : ("")) . "
<input type='hidden' name='topicID' value=\"{$displayData['topicID']}\" />
<input type='hidden' name=\"postKey\" value=\"{$displayData['postKey']}\" />
<input type=\"hidden\" name=\"auth_key\" value=\"{$this->member->form_hash}\" />
<fieldset class='submit'>
	<input class='input_submit' name=\"dosubmit\" type=\"submit\" value=\"{$this->lang->words['submit_send']}\" tabindex=\"0\" accesskey=\"s\" />
	<input class='input_submit alt' type=\"submit\" value=\"{$this->lang->words['pm_pre_button']}\" tabindex=\"0\" name=\"preview\" />
	<input class='input_submit alt' type=\"submit\" value=\"{$this->lang->words['pms_send_later']}\" tabindex=\"0\" name=\"save\" />
	{$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging", 'public','' ), "", "" ) . "' title='{$this->lang->words['cancel']}' class='cancel' tabindex='0'>{$this->lang->words['cancel']}</a>
</fieldset>
</form>
</div>
" . $this->registry->getClass('output')->getTemplate('global')->include_highlighter() . "
<br />";
return $IPBHTML;
}

/* -- sendReplyForm --*/
function sendReplyForm($displayData) {
$IPBHTML = "";
$IPBHTML .= "<div id='message_compose' class='post_form'>
	" . (($displayData['type'] == 'reply') ? ("
		<form id='msgForm' style='display:block' action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=sendReply", 'publicWithApp','' ), "", "" ) . "\" method=\"post\" name=\"REPLIER\">
	") : ("
		<form id='msgForm' style='display:block' action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=sendEdit", 'publicWithApp','' ), "", "" ) . "\" method=\"post\" name=\"REPLIER\">
	")) . "
		<input type=\"hidden\" name=\"msgID\" value=\"{$displayData['msgID']}\" />
	<input type='hidden' name='topicID' value=\"{$displayData['topicID']}\" />
	<input type='hidden' name=\"postKey\" value=\"{$displayData['postKey']}\" />
	<input type=\"hidden\" name=\"authKey\" value=\"{$this->member->form_hash}\" />
	{$data['upload']}	
" . (($displayData['preview']) ? ("
	<h2 class='maintitle'>{$this->lang->words['pm_preview']}</h2>
	<div class='post_wrap' id='post_preview'>
		<div class='row2' style='padding:8px'>
			<div class='post entry-content'>{$displayData['preview']}</div>
		</div>
	</div>
	<br />
") : ("")) . "
" . (($displayData['errors']) ? ("
	<h4>{$this->lang->words['err_errors']}</h4>
	<p>
		{$displayData['errors']}
		<br />
		<br />
		{$this->lang->words['pme_none_sent']}
	</p>
") : ("")) . "
<h2 class='maintitle'>
	" . (($displayData['type'] == 'reply') ? ("
		{$this->lang->words['compose_reply']}
	") : ("
		{$this->lang->words['editing_message']}
	")) . "
</h2>
<div class='generic_bar'></div>
<fieldset>
	<h3 class='bar'>{$this->lang->words['pro_message']}</h3>
	<ul>
		<li>
			{$displayData['editor']}
		</li>
	</ul>
</fieldset>
" . (($displayData['uploadData']['canUpload']) ? ("
<fieldset class='attachments'>
	" . $this->registry->getClass('output')->getTemplate('post')->uploadForm($displayData['postKey'], 'msg', $displayData['uploadData']['attach_stats'], $displayData['msgID'], 0) . "
</fieldset>
") : ("")) . "
<fieldset id='pm_options'>
	<!-- nothing here now... so you can remove that 'pm_options' class, if there is one -->
</fieldset>
<fieldset class='submit'>
	" . (($displayData['type'] == 'reply') ? ("
		<input class='input_submit' type=\"submit\" value=\"{$this->lang->words['submit_send']}\" tabindex=\"0\" accesskey=\"s\" />
		<input class='input_submit alt' type=\"submit\" value=\"{$this->lang->words['pm_pre_button']}\" tabindex=\"0\" name=\"previewReply\" />
		{$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;do=showConversation&amp;topicID={$displayData['topicID']}", 'public','' ), "", "" ) . "' title='{$this->lang->words['cancel']}' class='cancel' tabindex='0'>{$this->lang->words['cancel']}</a>
	") : ("
		<input class='input_submit' type=\"submit\" value=\"{$this->lang->words['save_message_button']}\" tabindex=\"0\" accesskey=\"s\" />
		<input class='input_submit alt' type=\"submit\" value=\"{$this->lang->words['pm_pre_button']}\" tabindex=\"0\" name=\"previewReply\" />
		{$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showConversation&amp;topicID={$displayData['topicID']}", 'public','' ), "", "" ) . "' title='{$this->lang->words['cancel']}' class='cancel' tabindex='0'>{$this->lang->words['cancel']}</a>
	")) . "
	
</fieldset>
</form>
</div>
<br />";
return $IPBHTML;
}

/* -- showConversation --*/
function showConversation($topic, $replies, $members, $jump="") {
$IPBHTML = "";
$IPBHTML .= "" . ((!$this->settings['disable_lightbox']) ? ("
" . $this->registry->getClass('output')->getTemplate('global')->include_lightbox() . "
") : ("")) . "
" . $this->registry->getClass('output')->getTemplate('global')->include_highlighter(1) . "
<div id='conversation'>
	
<div class='topic_controls'>
	{$topic['_pages']}
	<ul class='topic_buttons'>
		<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=form", 'publicWithApp','' ), "", "" ) . "' title='{$this->lang->words['go_to_compose']}'>" . $this->registry->getClass('output')->getReplacement("compose_icon") . " {$this->lang->words['compose_new']}</a></li>
		" . (($topic['_canReply']) ? ("
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=replyForm&amp;topicID={$topic['mt_id']}", 'publicWithApp','' ), "", "" ) . "'>" . $this->registry->getClass('output')->getReplacement("reply_icon") . " {$this->lang->words['add_reply']}</a></li>
		") : ("
			<li class='disabled'><span>{$this->lang->words['you_cannot_reply']}</span></li>
		")) . "
		<!-- SKINNOTE: Can probably do with some kind of 'are you sure' dialogue here.. -->
		<li><a id='pm_delete_t_{$topic['mt_id']}' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=deleteConversation&amp;topicID={$topic['mt_id']}&amp;authKey={$this->member->form_hash}", 'publicWithApp','' ), "", "" ) . "'>" . $this->registry->getClass('output')->getReplacement("delete_msg_icon") . " {$this->lang->words['option__delete']}</a></li>
	</ul>
	<script type='text/javascript'>
		$('pm_delete_t_{$topic['mt_id']}').observe('click', ipb.messenger.deletePM.bindAsEventListener( this, {$topic['mt_id']} ) );
	</script>
</div>
<br />
<h2 class='maintitle'>{$topic['mt_title']}</h2>
<div class='generic_bar'></div>".$this->__f__5e13298e1f710899ccd3805157e206fb($topic,$replies,$members,$jump)."<br />
<div class='topic_controls clear'>
	{$topic['_pages']}
	<ul class='topic_buttons'>
		<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=form", 'publicWithApp','' ), "", "" ) . "' title='{$this->lang->words['go_to_compose']}'>" . $this->registry->getClass('output')->getReplacement("compose_icon") . " {$this->lang->words['compose_new']}</a></li>
		" . (($topic['_canReply']) ? ("
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=replyForm&amp;topicID={$topic['mt_id']}", 'publicWithApp','' ), "", "" ) . "'>" . $this->registry->getClass('output')->getReplacement("reply_icon") . " {$this->lang->words['add_reply']}</a></li>
		") : ("
			<li class='disabled'><span>{$this->lang->words['you_cannot_reply']}</span></li>
		")) . "
		<!-- SKINNOTE: Can probably do with some kind of 'are you sure' dialogue here.. -->
		<li><a id='pm_delete_b_{$topic['mt_id']}' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=deleteConversation&amp;topicID={$topic['mt_id']}&amp;authKey={$this->member->form_hash}", 'publicWithApp','' ), "", "" ) . "'>" . $this->registry->getClass('output')->getReplacement("delete_msg_icon") . " {$this->lang->words['pc_delete']}</a></li>
	</ul>
	<script type='text/javascript'>
		$('pm_delete_b_{$topic['mt_id']}').observe('click', ipb.messenger.deletePM.bindAsEventListener( this, {$topic['mt_id']} ) );
	</script>
</div>
<br />
" . (($topic['_canReply']) ? ("" . $this->registry->getClass('output')->addJSModule("editor", "0" ) . "
	<script type='text/javascript'>
		//<![CDATA[
		" . $this->registry->getClass('output')->getTemplate('editors')->editorJS() . "
		//]]>
	</script>
	
	<br />
	<div id='fast_reply' style='display: {$displayData['fast_reply']}'>
		<h3 class='maintitle'>{$this->lang->words['pc_fast_reply']}</h3>
		<div class='generic_bar'></div>
		<div class='general_box alt'>
			<form action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=send&amp;do=sendReply&amp;topicID={$topic['mt_id']}", 'public','' ), "", "" ) . "' method='post'>
				" . $this->registry->getClass('output')->getTemplate('editors')->editorShell('fast-reply', 'msgContent', '', 1) . "
				<fieldset class='submit'>
					<input type=\"hidden\" name=\"authKey\" value=\"{$this->member->form_hash}\" />
					<input type=\"hidden\" name=\"fast_reply_used\" value=\"1\" />
					<input type=\"hidden\" name=\"enableemo\" value=\"yes\" />
					<input type=\"hidden\" name=\"enablesig\" value=\"yes\" />
					<input type='submit' name=\"submit\" class='input_submit' value='{$this->lang->words['pc_post_button']}' accesskey='s' />&nbsp;&nbsp;<input type='submit' name=\"previewReply\" class='input_submit alt' value='{$this->lang->words['pc_use_full_reply']}' />
				</fieldset>
			</form>
		</div>
	</div>
	<script type=\"text/javascript\">
	//<![CDATA[
		if( $('fast-reply_textarea') ){
			$('fast-reply_textarea').setStyle('height: 70px');
		}
		
		ipb.editor_values.set( 'emoticons', \$H({ " . IPSLib::fetchEmoticonsAsJson() . " }) );
		ipb.vars['emoticon_url'] = \"{$this->settings['emoticons_url']}\";
		ipb.editors[ 'fast-reply' ] = new ipb.editor( 'fast-reply', USE_RTE );
		in_use = 0;
		" . (($rte_mode != 1) ? ("
			obj = ipb.editors['fast-reply'].editor_document;
		") : ("
			obj = $( ipb.editors['fast-reply'].items['text_obj'] );
		")) . "
		Event.observe( obj, 'click', function(){
			if( in_use != 1 ){
				$( ipb.editors['fast-reply'] ).resize_to( 250 );
				in_use = 1;
			}
		}, true);
	//]]>
	</script>") : ("")) . "
</div>
" . $this->registry->getClass('output')->getTemplate('global')->include_highlighter() . "";
return $IPBHTML;
}


function __f__5e13298e1f710899ccd3805157e206fb($topic, $replies, $members, $jump="")
{
	$_ips___x_retval = '';
	foreach( $replies as $msg_id => $msg )
	{
		
		$_ips___x_retval .= "
	<a id='msg{$msg['msg_id']}'></a>
	<div class='post_block first hentry " . (($post['post']['queued']==1) ? ("moderated") : ("")) . " " . (($this->settings['reputation_enabled']) ? ("with_rep") : ("")) . "' id='post_id_{$msg['msg_id']}'>
		<div class='post_wrap'>
			" . (($members[ $msg['msg_author_id'] ]['member_id']) ? ("
				<h3>
			") : ("
				<h3 class='guest'>
			")) . "
					" . (($members[ $msg['msg_author_id'] ]['member_id']) ? ("" . (($members[ $msg['msg_author_id'] ]['_online']) ? ("
							" . $this->registry->getClass('output')->getReplacement("user_online") . "
						") : ("
							" . $this->registry->getClass('output')->getReplacement("user_offline") . "
						")) . " &nbsp;
								<span class=\"author vcard\"><a class=\"url fn\" href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$members[ $msg['msg_author_id'] ]['member_id']}", 'public','' ), "{$members[ $msg['msg_author_id'] ]['members_seo_name']}", "showuser" ) . "'>{$members[ $msg['msg_author_id'] ]['members_display_name']}</a>" . $this->registry->getClass('output')->getTemplate('global')->user_popup($members[ $msg['msg_author_id'] ]['member_id'], $members[ $msg['msg_author_id'] ]['members_seo_name']) . "</span>") : ("
						{$members[ $msg['msg_author_id'] ]['members_display_name']}
					")) . "
					" . (($msg['_ip_address'] != '') ? ("<span class='ip'>({$this->lang->words['ip']}:
						" . (($members[ $msg['msg_author_id'] ]['g_access_cp']) ? ("
							<em>{$this->lang->words['ip_private']}</em>
						") : ("
							<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=members&amp;area=mod_ipaddress&amp;do=custom&amp;ip={$msg['_ip_address']}", 'public','' ), "", "" ) . "\" title='{$this->lang->words['find_info_about_ip']}'>{$msg['_ip_address']}</a>
						")) . "
						)</span>") : ("")) . "
				</h3>
			<div class='author_info'>
				" . $this->registry->getClass('output')->getTemplate('global')->userInfoPane($members[ $msg['msg_author_id'] ], $msg_id, array()) . "
			</div>
			<div class='post_body'>
				<p class='posted_info'>{$this->lang->words['pc_sent']} " . $this->registry->getClass('class_localization')->getDate($msg['msg_date'],"long", 0) . "</p>
				<div class='post entry-content'>
					{$msg['msg_post']}
					{$msg['attachmentHtml']}
				</div>
				" . (($this->memberData['view_sigs'] AND $members[ $msg['msg_author_id'] ]['signature']) ? ("
					" . $this->registry->getClass('output')->getTemplate('global')->signature_separator($members[ $msg['msg_author_id'] ]['signature']) . "
				") : ("")) . "
			</div>
			<ul class='post_controls'>
				" . ((($this->settings['disable_reportpost'] != 1) and ( $this->memberData['member_id'] )) ? ("
					<li class='report'>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=reports&amp;rcom=messages&amp;topicID={$this->request['topicID']}&amp;st={$this->request['st']}&amp;msg={$msg['msg_id']}", 'public','' ), "", "" ) . "'>" . $this->registry->getClass('output')->getReplacement("report_post_icon") . " {$this->lang->words['pc_report']}</a>
					</li>
				") : ("")) . "
				" . (($topic['_canReply']) ? ("
					<li>
						<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=replyForm&amp;topicID={$topic['mt_id']}&amp;msgID={$msg['msg_id']}", 'publicWithApp','' ), "", "" ) . "\" title=\"{$this->lang->words['tt_reply_to_post']}\">" . $this->registry->getClass('output')->getReplacement("reply_post_icon") . " {$this->lang->words['pc_reply']}</a>
					</li>
				") : ("")) . "
				" . (($msg['_canEdit'] === TRUE) ? ("
					<li class='post_edit' id='edit_post_{$msg['msg_id']}'>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=editMessage&amp;topicID={$topic['mt_id']}&amp;msgID={$msg['msg_id']}", 'publicWithApp','' ), "", "" ) . "' title='{$this->lang->words['edit_this_post']}'>" . $this->registry->getClass('output')->getReplacement("edit_post_icon") . " {$this->lang->words['pc_edit']}</a>
					</li>
				") : ("")) . "
				" . (($msg['_canDelete'] === TRUE && $msg['msg_is_first_post'] != 1) ? ("
					<li class='post_del' id='del_post_{$msg['msg_id']}'>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=deleteReply&amp;topicID={$topic['mt_id']}&amp;msgID={$msg['msg_id']}&amp;authKey={$this->member->form_hash}", 'publicWithApp','' ), "", "" ) . "' title='{$this->lang->words['delete_this_post']}' class='delete_post'>" . $this->registry->getClass('output')->getReplacement("delete_post_icon") . " {$this->lang->words['pc_delete']}</a>
					</li>
				") : ("")) . "
			</ul>
		</div>		
	</div>

";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- showFolder --*/
function showFolder($messages, $dirname, $pages, $currentFolderID, $jumpFolderHTML) {
$IPBHTML = "";

$this->templateVars['folder_all'] = "";
$this->__default__templateVars['folder_all'] = "";

if ( $this->request['folderFilter'] == 'all' OR ! $this->request['folderFilter'] )
{
	$this->templateVars['folder_all'] = "selected='selected'";
}
else {$this->templateVars['folder_all'] = $this->__default__templateVars['folder_all']; }

$this->templateVars['folder_in'] = "";
$this->__default__templateVars['folder_in'] = "";

if ( $this->request['folderFilter'] == 'in' )
{
	$this->templateVars['folder_in'] = "selected='selected'";
}
else {$this->templateVars['folder_in'] = $this->__default__templateVars['folder_in']; }

$this->templateVars['folder_sent'] = "";
$this->__default__templateVars['folder_sent'] = "";

if ( $this->request['folderFilter'] == 'sent' )
{
	$this->templateVars['folder_sent'] = "selected='selected'";
}
else {$this->templateVars['folder_sent'] = $this->__default__templateVars['folder_sent']; }

$this->registry->templateStriping['msg_stripe'] = array( FALSE, "row1","row2");
$IPBHTML .= "<script type='text/javascript'>
	ipb.messenger.curFolder = '{$currentFolderID}';
</script>
<div class='topic_controls'>
{$pages}
" . (($currentFolderID != 'drafts') ? ("
						") : ("")) . "
<ul class='topic_buttons'>
	<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=form", 'publicWithApp','' ), "", "" ) . "' title='{$this->lang->words['go_to_compose']}'>" . $this->registry->getClass('output')->getReplacement("compose_icon") . " {$this->lang->words['compose_new']}</a></li>
</ul>
</div>
<div id='message_list'>
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=multiFile&amp;cFolderID={$currentFolderID}", 'public','' ), "", "" ) . "\" id='msgFolderForm' method=\"post\">
		<input type=\"hidden\" name=\"sort\" value=\"{$this->request['sort']}\" />
		<input type=\"hidden\" name=\"st\" value=\"{$this->request['st']}\" />
		<input type=\"hidden\" name=\"auth_key\" value=\"{$this->member->form_hash}\" />
		<table class='ipb_table' id='message_table'>
			<caption class='maintitle'>{$dirname}</caption>
			<tr class='header'>
				<th scope='col' class='col_m_status'>&nbsp;</th>
				<th scope='col' class='col_m_subject'>{$this->lang->words['col_topic']}</th>
				<th scope='col' class='col_m_from short'>{$this->lang->words['col_starter']}</th>
				<th scope='col' class='col_m_to short'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showFolder&amp;folderID={$currentFolderID}&amp;sort=nameTo&amp;st={$this->request['st']}", 'public','' ), "", "" ) . "\">{$this->lang->words['col_to']}</a></th>
				<th scope='col' class='col_m_replies short'>{$this->lang->words['col_replies']}</th>
				<th scope='col' class='col_m_date'>{$this->lang->words['col_last_message']}</th>
				<th scope='col' class='col_m_status'>&nbsp;</th>
				<th scope='col' class='col_mod short'><input type='checkbox' class='input_check' id='msg_checkall' value='1' /></th>
			</tr>
			" . ((count( $messages )) ? ("
								".$this->__f__3acabe5b4cd319a2042773e1b462a025($messages,$dirname,$pages,$currentFolderID,$jumpFolderHTML)."			") : ("
				<tr>
					<td colspan='8' class='no_messages row1'>
						{$this->lang->words['folder_no_messages_row']}
					</td>
				</tr>
			")) . "
		</table>
		<div id='messenger_mod' class='moderation_bar rounded with_action'>
			<select id='pm_multifile' name='method' class='input_select'>
				<optgroup label=\"{$this->lang->words['with_selected_opt']}\">
					<option value=\"delete\">{$this->lang->words['option__delete']}</option>
					" . (($currentFolderID != 'drafts') ? ("
						<option value=\"markread\">{$this->lang->words['option__markread']}</option>
						<option value=\"markunread\">{$this->lang->words['option__markunread']}</option>
						<option value=\"notifyon\">{$this->lang->words['option__turnon']}</option>
						<option value=\"notifyoff\">{$this->lang->words['option__turnoff']}</option>
					") : ("")) . "
				</optgroup>
				" . (($jumpFolderHTML AND $currentFolderID != 'drafts' AND $currentFolderID != 'new') ? ("
					<optgroup label=\"{$this->lang->words['move_to_opt']}\">
						{$jumpFolderHTML}
					</optgroup>
				") : ("")) . "
			</select>
			<input type=\"submit\" class='input_submit alt' id='folder_moderation' value=\"{$this->lang->words['jmp_go']}\" />
		</div>
	</form>
	<div id='messenger_filter' class='filter_bar rounded'>
		<form method='post' action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showFolder&amp;folderID={$currentFolderID}", 'public','' ), "", "" ) . "'>
			<label for='conversation_filter'>{$this->lang->words['filter__show']} </label>
			<select id='conversation_filter' name='folderFilter' class='input_select'>
				<option value='' " . $this->templateVars["folder_all"] . ">{$this->lang->words['filter__all']}</option>
				<option value='in' " . $this->templateVars["folder_in"] . ">{$this->lang->words['filter__others']}</option>
				<option value='sent' " . $this->templateVars["folder_sent"] . ">{$this->lang->words['filters__i']}</option>
			</select>
			<input type='submit' class='input_submit alt' value='{$this->lang->words['filters__update']}' />
		</form>
	</div>
</div>
<br />
<div class='topic_controls'>
{$pages}
<ul class='topic_buttons'>
	<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=form", 'publicWithApp','' ), "", "" ) . "' title='{$this->lang->words['go_to_compose']}'>" . $this->registry->getClass('output')->getReplacement("compose_icon") . " {$this->lang->words['compose_new']}</a></li>
</ul>
</div>";
return $IPBHTML;
}


function __f__71e64faa0c0f5aadbc31bb3181d1eb61($messages, $dirname, $pages, $currentFolderID, $jumpFolderHTML,$id='',$msg='')
{
	$_ips___x_retval = '';
	foreach( $msg['pages'] as $page )
	{
		
		$_ips___x_retval .= "
											" . (($page['last']) ? ("
												<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showConversation&amp;topicID={$msg['mt_id']}&amp;st={$page['st']}", 'public','' ), "", "" ) . "\" title='{$this->lang->words['goto_page']} {$page['page']}'>{$page['page']} &rarr;</a></li>
											") : ("
												<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showConversation&amp;topicID={$msg['mt_id']}&amp;st={$page['st']}", 'public','' ), "", "" ) . "\" title='{$this->lang->words['goto_page']} {$page['page']}'>{$page['page']}</a></li>
											")) . "
									
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__3acabe5b4cd319a2042773e1b462a025($messages, $dirname, $pages, $currentFolderID, $jumpFolderHTML)
{
	$_ips___x_retval = '';
	foreach( $messages as $id => $msg )
	{
		
		$_ips___x_retval .= "
					<tr id='{$msg['mt_id']}' class='" .  IPSLib::next( $this->registry->templateStriping["msg_stripe"] ) . "'>
						<td class='altrow short'>
							" . (($msg['mt_is_deleted'] OR $msg['map_user_banned']) ? ("
								" . $this->registry->getClass('output')->getReplacement("msg_deleted") . "
							") : ("" . (($msg['map_has_unread'] == 1) ? ("
									" . $this->registry->getClass('output')->getReplacement("msg_icon_new") . "
								") : ("
									" . $this->registry->getClass('output')->getReplacement("msg_icon") . "
								")) . "")) . "
						</td>
						<td>
							" . (($msg['mt_hasattach']) ? ("
								" . $this->registry->getClass('output')->getReplacement("t_attach") . "
							") : ("")) . "
							<span class='m_title'>
								" . (($msg['map_has_unread'] == 1) ? ("
								<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=findMessage&amp;topicID={$msg['mt_id']}&amp;msgID=__firstUnread__", 'public','' ), "", "" ) . "' title='{$this->lang->words['first_unread_reply']}'>" . $this->registry->getClass('output')->getReplacement("f_newpost") . "</a>
									<strong>
								") : ("")) . "
								" . (($currentFolderID == 'drafts') ? ("
									<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=send&amp;do=form&amp;topicID={$msg['mt_id']}", 'public','' ), "", "" ) . "\">{$msg['mt_title']}</a>
								") : ("
									<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showConversation&amp;topicID={$msg['mt_id']}", 'public','' ), "", "" ) . "\">{$msg['mt_title']}</a>
								")) . "
								" . (($msg['map_has_unread'] == 1) ? ("
									</strong>
								") : ("")) . "
								" . ((is_array( $msg['pages'] ) AND count( $msg['pages'] )) ? ("
									<ul class='mini_pagination'>
									".$this->__f__71e64faa0c0f5aadbc31bb3181d1eb61($messages,$dirname,$pages,$currentFolderID,$jumpFolderHTML,$id,$msg)."									</ul>
								") : ("")) . "
								" . ((in_array( $currentFolderID, array( 'new' ) )) ? ("
									<p>{$this->lang->words['folder_prefix']} {$msg['_folderName']}</p>
								") : ("")) . "
							</span>
						</td>
						<td class='altrow short'>
							" . (($msg['_starterMemberData']['members_display_name']) ? ("
								<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$msg['_starterMemberData']['member_id']}", 'public','' ), "{$msg['_starterMemberData']['members_seo_name']}", "showuser" ) . "'>{$msg['_starterMemberData']['members_display_name']}</a>" . $this->registry->getClass('output')->getTemplate('global')->user_popup($msg['_starterMemberData']['member_id'], $msg['_starterMemberData']['members_seo_name']) . "
								<!-- SKINNOTE: Add block user back in -->
							") : ("
								<span class='desc'>{$this->lang->words['deleted_user']}</span>
							")) . "
						</td>
						<td class='short'>
							" . (($msg['_toMemberData']['members_display_name']) ? ("
								<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$msg['_toMemberData']['member_id']}", 'public','' ), "{$msg['_toMemberData']['members_seo_name']}", "showuser" ) . "'>{$msg['_toMemberData']['members_display_name']}</a>" . $this->registry->getClass('output')->getTemplate('global')->user_popup($msg['_toMemberData']['member_id'], $msg['_toMemberData']['members_seo_name']) . "
								<!-- SKINNOTE: Add block user back in -->
							") : ("
								<span class='desc'>{$this->lang->words['deleted_user']}</span>
							")) . "
							" . (($msg['_otherInviteeCount'] > 0) ? ("" . (($msg['_otherInviteeCount'] > 1) ? ("
									<p title='" . implode( ', ', $msg['_invitedMemberNames'] ) . "'>({$this->lang->words['pc_and']} {$msg['_otherInviteeCount']} {$this->lang->words['pc_others']})</p>
								") : ("
									<p title='" . implode( ', ', $msg['_invitedMemberNames'] ) . "'>({$this->lang->words['pc_and']} {$msg['_otherInviteeCount']} {$this->lang->words['pc_other']})</p>
								")) . "") : ("")) . "
						</td>
						<td  class='altrow short'>
							<span class='desc'>" . (($msg['map_user_banned']) ? ("-") : ("" . intval( $msg['mt_replies'] ) . "")) . "</span>
						</td>
						<td>
							<ul class='last_post'>
								" . (($msg['map_user_banned']) ? ("
									<li><em>{$this->lang->words['info_not_available']}</em></li>
								") : ("
									<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=findMessage&amp;topicID={$msg['mt_id']}&amp;msgID={$msg['mt_last_msg_id']}", 'public','' ), "", "" ) . "' title='{$this->lang->words['goto_last_post']}'>" . $this->registry->getClass('output')->getReplacement("f_lastpost") . "</a> " . $this->registry->getClass('class_localization')->getDate($msg['mt_last_post_time'],"long", 0) . "</li>
									<li>{$this->lang->words['pc_by']} <a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$msg['_lastMsgAuthor']['member_id']}", 'public','' ), "{$msg['_lastMsgAuthor']['members_seo_name']}", "showuser" ) . "\">{$msg['_lastMsgAuthor']['members_display_name']}</a>" . $this->registry->getClass('output')->getTemplate('global')->user_popup($msg['_lastMsgAuthor']['member_id'], $msg['_lastMsgAuthor']['members_seo_name']) . "</li>
								")) . "
							</ul>
						</td>
						<td class='altrow short'>
							" . (($msg['map_ignore_notification']) ? ("
								" . $this->registry->getClass('output')->getReplacement("msg_notify_off") . "
							") : ("
								" . $this->registry->getClass('output')->getReplacement("msg_notify_on") . "
							")) . "
						</td>
						<td class='short'>
							<input type='checkbox' class='input_check msg_check' name='msgid[{$msg['mt_id']}]' id='msg_check_{$msg['mt_id']}' />
						</td>
					</tr>
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- showSearchResults --*/
function showSearchResults($messages, $pages, $error) {
$IPBHTML = "";

$this->registry->templateStriping['msg_stripe'] = array( FALSE, "row1","row2");
$IPBHTML .= "<script type='text/javascript'>
//<![CDATA[
	ipb.messenger.curFolder = 'in';
//]]>
</script>
" . (($error) ? ("
	<p class='message error'>
		{$error}
	</p>
	<br />
") : ("")) . "
<div class='topic_controls'>
{$pages}
</div>
<br />
<h2 class='maintitle clear'>{$this->lang->words['your_search_results']}</h2>
<div id='message_list'>
		<table class='ipb_table' id='message_table'>
			<tr class='header'>
				<th scope='col' class='col_m_status'>&nbsp;</th>
				<th scope='col' class='col_m_subject'>{$this->lang->words['col_subject']}</th>
				<th scope='col' class='col_m_replies short'>{$this->lang->words['col_replies']}</th>
				<th scope='col' class='col_m_sender'>{$this->lang->words['col_recipient']}</th>
				<th scope='col' class='col_m_date'>{$this->lang->words['col_date']}</th>
			</tr>
		
			" . ((count( $messages )) ? ("
								".$this->__f__1905156d62c398ee1ec640eff8941c25($messages,$pages,$error)."			") : ("
				<tr>
					<td colspan='5' class='no_messages row1'>
						{$this->lang->words['no_messages_row']}
					</td>
				</tr>
			")) . "
		</table>
	</form>
</div>";
return $IPBHTML;
}


function __f__1905156d62c398ee1ec640eff8941c25($messages, $pages, $error)
{
	$_ips___x_retval = '';
	foreach( $messages as $id => $msg )
	{
		
		$_ips___x_retval .= "
					<tr id='{$msg['mt_id']}' class='" .  IPSLib::next( $this->registry->templateStriping["msg_stripe"] ) . "'>
						<td class='altrow short'>
							" . (($msg['map_has_unread'] != 1) ? ("
								" . $this->registry->getClass('output')->getReplacement("msg_read") . "
							") : ("
								" . $this->registry->getClass('output')->getReplacement("msg_unread") . "
							")) . "
							" . (($msg['mt_is_deleted']) ? ("
								" . $this->registry->getClass('output')->getReplacement("msg_deleted") . "
							") : ("")) . "
						</td>
						<td>
							" . (($msg['mt_hasattach']) ? ("
								" . $this->registry->getClass('output')->getReplacement("t_attach") . "
							") : ("")) . "
							<span class='m_title'>
								" . (($msg['map_has_unread'] == 1) ? ("
									<strong>
								") : ("")) . "
								<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showConversation&amp;topicID={$msg['mt_id']}", 'public','' ), "", "" ) . "\">{$msg['mt_title']}</a>
								" . (($msg['map_has_unread'] == 1) ? ("
									</strong>
								") : ("")) . "
								<p>{$this->lang->words['label_pc']} {$msg['_folderName']}</p>
							</span>
						</td>
						<td>
							<span class='desc'>" . intval( $msg['mt_replies'] ) . "</span>
						</td>
						<td class='altrow'>
							" . (($msg['_toMemberData']['member_id']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$msg['_toMemberData']['member_id']}", 'public','' ), "", "" ) . "'>{$msg['_toMemberData']['members_display_name']}</a>
								" . (($msg['mt_invited_count']) ? ("" . (($msg['mt_invited_count'] > 1) ? ("
										<p>({$this->lang->words['pc_and']} {$msg['mt_invited_count']} {$this->lang->words['pc_others']})</p>
									") : ("
										<p>({$this->lang->words['pc_and']} {$msg['mt_invited_count']} {$this->lang->words['pc_other']})</p>
									")) . "") : ("")) . "
								<!-- SKINNOTE: Add block user back in -->") : ("
								<span class='desc'>{$this->lang->words['deleted_user']}</span>
							")) . "
						</td>
						<td>
							" . $this->registry->getClass('class_localization')->getDate($msg['mt_last_post_time'],"long", 0) . "
						</td>
					</tr>
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}



}

/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>