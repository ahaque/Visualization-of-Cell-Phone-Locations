<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 1               */
/* CACHE FILE: Generated: Sun, 06 Sep 2009 04:32:04 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_ucp_1 {

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	/* Make object */
	$this->registry   =  $registry;
	$this->DB         =  $this->registry->DB();
	$this->settings   =& $this->registry->fetchSettings();
	$this->request    =& $this->registry->fetchRequest();
	$this->lang       =  $this->registry->getClass('class_localization');
	$this->member     =  $this->registry->member();
	$this->memberData =& $this->registry->member()->fetchMemberData();
	$this->cache      =  $this->registry->cache();
	$this->caches     =& $this->registry->cache()->fetchCaches();
}
	/* -- coreAttachments --*/
function coreAttachments($info="",$pages="",$attachments) {
$IPBHTML = "";

$this->registry->templateStriping['attach'] = array( FALSE, "row1","row2");
$IPBHTML .= "<div class='row1'>	
	" . (($info['has_limit'] == 1) ? ("<div id='space_allowance' class='general_box'>
			<p><strong>{$info['attach_space_used']}</strong></p>
			<p class='progress_bar " . (($info['full_percent'] > 80) ? ("limit") : ("")) . "' title='{$this->lang->words['ucp_attach_allowance']} {$info['full_percent']}% {$this->lang->words['ucp_full']}'>
				<span style='width: {$info['full_percent']}%'>{$info['full_percent']}%</span>
			</p>
			<p class='desc'>{$info['attach_space_count']}</p>
		</div>") : ("")) . "
	<div class='topic_controls'>
		$pages
	</div>
	<br />
	<!-- ATTACHMENTS TABLE -->
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=updateAttachments&amp;do=saveIt", 'public','' ), "", "" ) . "\" id=\"checkBoxForm\" method=\"post\">
	<table class='ipb_table' summary=\"{$this->lang->words['ucp_user_attach']}\">
		<tr class='header'>
				<th scope='col' style='width: 2%'>&nbsp;</th>
				<th scope='col' style='width: 35%'>{$this->lang->words['attach_title']}</th>
				<th scope='col' style='width: 7%'>{$this->lang->words['attach_hsize']}</th>
				<th scope='col' style='width: 27%'>{$this->lang->words['attach_topic']}</th>
				<th scope='col' class='short' style='width: 3%'><input class='input_check' id=\"checkAllAttachments\" type=\"checkbox\" value=\"{$this->lang->words['check_all']}\" /></th>
				<!-- SKINNOTE: Convert to new JS -->
			</tr>
			" . ((count($attachments)) ? ("
								".$this->__f__422f2a1284037a99532771a4468be2dd($info,$pages,$attachments)."			") : ("
				<tr>
					<td colspan=\"5\" class='no_messages'>{$this->lang->words['splash_noattach']}</td>
				</tr>
			")) . "
		</table>
		" . ((count($attachments)) ? ("
			<div class='moderation_bar rounded with_action clear' id='topic_mod'>
				<input type=\"hidden\" name=\"authKey\" value=\"{$this->member->form_hash}\" />
				<input type=\"submit\" value=\"{$this->lang->words['attach_delete']}\" class=\"input_submit alt\" />
			</div>
		") : ("")) . "
	</form>
</div>
<script type='text/javascript'>
	ipb.global.registerCheckAll( 'checkAllAttachments', 'checkall' );
</script>";
return $IPBHTML;
}


function __f__422f2a1284037a99532771a4468be2dd($info="",$pages="",$attachments)
{
	$_ips___x_retval = '';
	foreach( $attachments as $idx => $data )
	{
		
		$_ips___x_retval .= "
					<tr id=\"a{$data['attach_id']}\" class='" .  IPSLib::next( $this->registry->templateStriping["attach"] ) . "'>
							<td class='short altrow'>
								" . (($data['attach_thumb_location']) ? ("
									<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=attach&amp;section=attach&amp;attach_rel_module={$data['_type']}&amp;attach_id={$data['attach_id']}", 'public','' ), "", "" ) . "\" title=\"{$data['attach_file']}\"><img src=\"{$this->settings['upload_url']}/{$data['attach_thumb_location']}\" width=\"30\" height=\"30\" alt='{$this->lang->words['attached_file']}' /></a>
								") : ("
									<img src=\"{$this->settings['mime_img']}/{$data['image']}\" alt=\"{$this->lang->words['attached_file']}\" />
								")) . "
							</td>
							<td>
								<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=attach&amp;section=attach&amp;attach_rel_module={$data['_type']}&amp;attach_id={$data['attach_id']}", 'public','' ), "", "" ) . "\" title=\"{$data['attach_file']}\">{$data['short_name']}</a><br />
								<span class=\"desc\">( {$this->lang->words['attach_hits']}: {$data['attach_hits']} )</span>
							</td>
							<td class='short altrow'>{$data['real_size']}</td>
							<td>
								" . (($data['attach_rel_id'] > 0 AND $data['attach_rel_module'] == 'post') ? ("
									<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$data['tid']}&amp;view=findpost&amp;p={$data['attach_rel_id']}", 'public','' ), "", "" ) . "\" title='{$this->lang->words['ucp_view_org']}'>{$data['title']}</a>
								") : ("
									{$data['title']}
								")) . "
								<br />
								<span class=\"desc\">{$data['attach_date']}</span>
							</td>
							<td class='altrow short'><input type=\"checkbox\" name=\"attach[{$data['attach_id']}]\" value=\"1\" class=\"input_check checkall\" /></td>
						</tr>
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- coreNotesForm --*/
function coreNotesForm($content='') {
$IPBHTML = "";
$IPBHTML .= "<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["row1"] ) . "'>
	<h3>{$this->lang->words['m_notes']}</h3>
	<div class='message unspecified'>{$this->lang->words['note_pad_empty']}</div>
	<div>
		<textarea style='width:100%;' rows='30' name='Post'>{$content}</textarea>
	</div>
</fieldset>";
return $IPBHTML;
}

/* -- displayNameForm --*/
function displayNameForm($form=array(),$error="",$okmessage="", $isFB=false) {
$IPBHTML = "";
$IPBHTML .= "" . (($okmessage != "") ? ("
	<p class='message'>{$okmessage}</p>
") : ("")) . "
<fieldset class='row1'>
	<h3>{$this->lang->words['dname_title']}</h3>
	<br />
	" . (($form['_noPerm']) ? ("
		<p class='message error'>{$form['_noPerm']}</p>
	") : ("<p class='message unspecific'>{$form['_lang_string']}</p>
		<ul>
			<li class='field'>
				<label for='displayName'>{$this->lang->words['dname_choose']}</label><input class='input_text' type=\"text\" maxlength='10{$this->settings['max_user_name_length']}' name=\"displayName\" id=\"displayName\" value=\"{$this->request['displayName']}\" size='30' /> <br />
				<span class='desc'>{$this->lang->words['dname_choose2']}</span>
			</li>
			" . ((!$isFB) ? ("
			<li class='field'>
				<label for='displayPassword'>{$this->lang->words['dname_password']}</label><input class='input_text' type=\"password\" maxlength='{$this->settings['max_user_name_length']}' name=\"displayPassword\" id=\"displayPassword\" value=\"\" size='30' /> <br />
				<span class='desc'>{$this->lang->words['dname_password2']}</span>
			</li>
			") : ("")) . "
		</ul>")) . "
</fieldset>";
return $IPBHTML;
}

/* -- emailChangeForm --*/
function emailChangeForm($txt, $_message, $captchaHTML, $isFB=false) {
$IPBHTML = "";
$IPBHTML .= "<script type=\"text/javascript\">
var msg = \"$_message\";
	if ( msg != \"\"){
		alert(msg);
	}
</script>
<fieldset class='row1'>
	<h3>{$this->lang->words['change_email_title']}</h3>
	<br />
	<p class='message unspecific'>
		" . (($this->memberData['g_access_cp']) ? ("
			{$this->lang->words['admin_emailpassword']}
		") : ("
			{$txt}
		")) . "
	</p>
	" . ((!$this->memberData['g_access_cp']) ? ("<ul>
			<li class='field'>
				<label for='in_email_1'>{$this->lang->words['ce_new_email']}</label>
				<input type=\"text\" name=\"in_email_1\" id='in_email_1' class='input_text' value=\"\" />
			</li>
			<li class='field'>
				<label for='in_email_2'>{$this->lang->words['ce_new_email2']}</label>
				<input type=\"text\" name=\"in_email_2\" id='in_email_2' class='input_text' value=\"\" />
			</li>
			" . ((!$isFB) ? ("
			<li class='field'>
				<label for='password'>{$this->lang->words['ec_passy']}</label>
				<input type=\"password\" id='password' class='input_text' name=\"password\" value=\"\" />
			</li>
			") : ("")) . "
		</ul>") : ("")) . "
</fieldset>
" . (($captchaHTML != '' AND !$this->memberData['g_access_cp']) ? ("
	<br />
	$captchaHTML
") : ("")) . "";
return $IPBHTML;
}

/* -- field_dropdown --*/
function field_dropdown($name="",$options="") {
$IPBHTML = "";
$IPBHTML .= "<select name=\"$name\" class='input_select'>
	$options
</select>";
return $IPBHTML;
}

/* -- field_entry --*/
function field_entry($title="",$desc="",$content="",$id="") {
$IPBHTML = "";
$IPBHTML .= "<li class='field'>
	<label for='field_$id'>$title</label>
	{$content}
	" . (($desc) ? ("<span class='desc'>{$desc}</span>") : ("")) . "
</li>";
return $IPBHTML;
}

/* -- field_textarea --*/
function field_textarea($name="",$value="") {
$IPBHTML = "";
$IPBHTML .= "<textarea cols=\"80\" rows=\"5\" wrap=\"soft\" name=\"$name\" class='input_text'>$value</textarea>";
return $IPBHTML;
}

/* -- field_textinput --*/
function field_textinput($name="",$value="") {
$IPBHTML = "";
$IPBHTML .= "<input type=\"text\" size=\"50\" name=\"$name\" value='$value' class='input_text' />";
return $IPBHTML;
}

/* -- forumPrefsForm --*/
function forumPrefsForm($emailData, $data) {
$IPBHTML = "";

$this->registry->templateStriping['usercp'] = array( FALSE, "row1","row2");
$IPBHTML .= "<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3>{$this->lang->words['settings_display']}</h3>
	<ul>
		<li class='field checkbox'>
			<input type='checkbox' name='viewSignatures' id='view_sigs' value='1' class='input_check'" . (($this->memberData['view_sigs']) ? (" checked=\"checked\"") : ("")) . "/> <label for='view_sigs'>{$this->lang->words['settings_viewsig']}</label>
		</li>
		<li class='field checkbox'>
			<input type='checkbox' name='viewImages' id='view_img' value='1' class='input_check'" . (($this->memberData['view_img']) ? (" checked=\"checked\"") : ("")) . "/> <label for='view_img'>{$this->lang->words['settings_viewimg']}</label>
		</li>
		<li class='field checkbox'>
			<input type='checkbox' name='viewAvatars' id='view_avatar' value='1' class='input_check'" . (($this->memberData['view_avs']) ? (" checked=\"checked\"") : ("")) . "/> <label for='view_avatar'>{$this->lang->words['settings_viewava']}</label>
		</li>
		<li class='field'>
			<label for='post_per_page' />{$this->lang->words['pp_number_posts']}</label>
			<select name=\"postpage\" class='input_select' id='posts_per_page'>
				<option value='-1'>{$this->lang->words['pp_use_default']}</option>
				".$this->__f__8cc885ad238d94b4591e5ae22081203a($emailData,$data)."			</select>
		</li>
		<li class='field'>
			<label for='topics_per_page' />{$this->lang->words['pp_number_topics']}</label>
			<select name=\"topicpage\" class='input_select' id='topics_per_page'>
				<option value='-1'>{$this->lang->words['pp_use_default']}</option>
				".$this->__f__8d2346e32056892bab44a608492c150c($emailData,$data)."			
			</select>
		</li>
	</ul>
</fieldset>
<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3>{$this->lang->words['board_prefs']}</h3>
	<ul>
		<li class='field checkbox'>
			<input type='checkbox' class='input_check' id='send_full_msg' name='send_full_msg' value='1' {$emailData['email_full']} /> <label for='send_full_msg' />{$this->lang->words['send_full_msg']}</label><br />
			<span class='desc'>{$this->lang->words['send_full_msg_desc']}</span>
		</li>
		<li class='field checkbox'>
			<input class='input_check' type=\"checkbox\" id='auto_track' name=\"auto_track\" value=\"1\" {$emailData['auto_track']} /> <label for='auto_track' />{$this->lang->words['auto_track']}</label>
			<ul>
				<li class='field'>
					<label for='track_choice'>{$this->lang->words['auto_track_type']}</label>
					<select name=\"trackchoice\" id='track_choice' class='input_select'>
						<option value=\"none\" {$emailData['trackOption']['none']}>{$this->lang->words['subs_none_title']}</option>
						<option value=\"immediate\" {$emailData['trackOption']['immediate']}>{$this->lang->words['subs_immediate']}</option>
						<option value=\"delayed\" {$emailData['trackOption']['delayed']}>{$this->lang->words['subs_delayed']}</option>
						<option value=\"daily\" {$emailData['trackOption']['daily']}>{$this->lang->words['subs_daily']}</option>
						<option value=\"weekly\" {$emailData['trackOption']['weekly']}>{$this->lang->words['subs_weekly']}</option>
					</select>
				</li>
			</ul>
		</li>
		<li class='field'>
			<label for='topic_display_mode'>{$this->lang->words['ucp_topic_display_mode']}</label> 
			<select name=\"topic_display_mode\" id='topic_display_mode' class='input_select'>
				<option value=\"linear\"" . ((IPSCookie::get('topicmode') == 'linear') ? (" selected") : ("")) . ">{$this->lang->words['ucp_standard']}</option>
				<option value=\"linearplus\"" . ((IPSCookie::get('topicmode') == 'linearplus') ? (" selected") : ("")) . ">{$this->lang->words['ucp_linearplus']}</option>
				<option value=\"threaded\"" . ((IPSCookie::get('topicmode') == 'threaded') ? (" selected") : ("")) . ">{$this->lang->words['ucp_outline']}</option>				
			</select>
			<span class='desc'>
				<strong>{$this->lang->words['ucp_standard']}:</strong> {$this->lang->words['ucp_standard_explain']}<br />
				<strong>{$this->lang->words['ucp_linearplus']}:</strong> {$this->lang->words['ucp_linearplus_explain']}<br />
				<strong>{$this->lang->words['ucp_outline']}:</strong> {$this->lang->words['ucp_outline_explain']}
			</span>
		</li>		
	</ul>
</fieldset>";
return $IPBHTML;
}


function __f__8cc885ad238d94b4591e5ae22081203a($emailData, $data)
{
	$_ips___x_retval = '';
	foreach( $data['viewPostsForm'] as $r )
	{
		
		$_ips___x_retval .= "
					<option value='{$r[0]}'" . (($r[0] == $data['postsPerPage']) ? (" selected='selected'") : ("")) . ">{$r[1]}</option>
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__8d2346e32056892bab44a608492c150c($emailData, $data)
{
	$_ips___x_retval = '';
	foreach( $data['viewTopicsForm'] as $r )
	{
		
		$_ips___x_retval .= "
					<option value='{$r[0]}'" . (($r[0] == $data['topicsPerPage']) ? (" selected='selected'") : ("")) . ">{$r[1]}</option>
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- forumsInlineAvatarImages --*/
function forumsInlineAvatarImages($images=array(), $dir) {
$IPBHTML = "";

$_count = 0;
$IPBHTML .= "<div class='clear'>".$this->__f__e5b5acbc8badcdf61c97263d34ca63a4($images,$dir)."</div>";
return $IPBHTML;
}


function __f__e5b5acbc8badcdf61c97263d34ca63a4($images=array(), $dir)
{
	$_ips___x_retval = '';
	foreach( $images as $image )
	{
		
$id = ucfirst( preg_replace( "#^(.*)\.(.+?)$#", "$1", $image ) );

		$_ips___x_retval .= "
		" . (($_count % 5 == 0) ? ("
		</div>
		<div class='clear'>
	") : ("")) . "
	<div class='avatar_gallery'>
		<img src='{$this->settings['public_dir']}style_avatars/" . (($dir != '0') ? ("{$dir}/") : ("")) . "{$image}' alt='{$this->lang->words['avatar']}' /><br />
		<input type='radio' value='{$image}' name='avatar_image' id='{$dir}_{$id}' /> <label for='{$dir}_{$id}'>{$id}</label>
	</div>
	" . (($_count++) ? ("") : ("")) . "

";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- generalSettingsForm --*/
function generalSettingsForm($times) {
$IPBHTML = "";

$this->hasOpenID = false;
$IPBHTML .= "".$this->__f__551b12a07af0b64fedf15207a595be8e($times)."" . (($this->hasOpenID) ? ("
	<fieldset class='row2'>
		<h3>{$this->lang->words['identity_url_h3']}</h3>
		<ul>
			<li class='field'>
				<label for='identity_url'>{$this->lang->words['identity_url']}</label><input class='input_text' size='30' type=\"text\" name=\"identity_url\" id=\"identity_url\" value=\"{$this->memberData['identity_url']}\" /> <br />
				<span class='desc'>{$this->lang->words['identity_url_desc']}</span>
			</li>
		</ul>
	</fieldset>
") : ("")) . "
<fieldset class='row1'>
	<h3>{$this->lang->words['privacy_settings']}</h3>
	<ul>
		<li class='field checkbox'>
			<input class='input_check' type=\"checkbox\" name=\"hide_email\" id=\"hide_email\" value=\"1\"" . (($this->memberData['hide_email']) ? (" checked=\"checked\"") : ("")) . "/> <label for='hide_email'>{$this->lang->words['hide_email']}</label><br />
			<span class='desc'>{$this->lang->words['hide_email_desc']}</span>
		</li>
		<li class='field checkbox'>
			<input type='checkbox' class='input_check' id='admin_updates' name='admin_send' value='1'" . (($this->memberData['allow_admin_mails']) ? (" checked=\"checked\"") : ("")) . "/> <label for='admin_updates'>{$this->lang->words['admin_send']}</label><br />
			<span class='desc'>{$this->lang->words['admin_send_desc']} $time</span>
		</li>
	</ul>
</fieldset>
<fieldset class='row2'>
	<h3>{$this->lang->words['settings_time']}</h3>
	<ul>
		<li class='field'>
			<label for='timezone'>{$this->lang->words['ucp_timzeone']}</label>
			<select name='timeZone' id='timezone' class='input_select'>
			".$this->__f__35131ae5b5351c22266ae749f4c95b1c($times)."			</select>
			<span class='desc'>{$this->lang->words['settings_time_txt2']} " . $this->registry->getClass('class_localization')->getDate('{custom:now}',"LONG", 1) . "</span>
		</li>
		<li class='field checkbox'>
			" . (($this->request['dsterror'] == 1) ? ("
				{$this->lang->words['dst_error']}
			") : ("")) . "
			<input type='checkbox' class='input_check' id='dst' name=\"dstCheck\" onclick='toggle_dst()' value=\"1\"" . (($this->memberData['members_auto_dst']) ? (" checked=\"checked\"") : ("")) . "/> <label for='dst'>{$this->lang->words['dst_correction_title']}</label><br />
			<span class='desc'>{$this->lang->words['dst_auto2']}</span>
		</li>
		<li class='field checkbox' id='dst-manual'>
			<input type='checkbox' class='input_check' id='dstManual' name=\"dstOption\" value=\"1\"" . (($this->memberData['dst_in_use']) ? (" checked=\"checked\"") : ("")) . "/> <label for='dstManual'>{$this->lang->words['ucp_dst_now']}</label><br />
			<span class='desc'>{$this->lang->words['ucp_dst_effect']}</span>
		</li>
	</ul>
</fieldset>
<fieldset class='row1'>
	<h3>{$this->lang->words['ucp_op_pm_title']}</h3>
	<ul>
		" . (($this->memberData['members_disable_pm'] != 2) ? ("<li class='field checkbox'>
			<input type='checkbox' name='disableMessenger' class='input_check' id='disable_msg' value='1'" . (($this->memberData['members_disable_pm']) ? (" checked=\"checked\"") : ("")) . "/> <label for='disable_msg'>{$this->lang->words['ucp_op_pm']}</label><br />
			<span class='desc'>{$this->lang->words['ucp_op_pm_desc']}</span>
		</li>") : ("")) . "
		<li class='field checkbox'>
			<input type='checkbox' class='input_check' id='email_notify' name='pm_reminder' value='1'" . (($this->memberData['email_pm']) ? (" checked=\"checked\"") : ("")) . "/> <label for='email_notify'>{$this->lang->words['pm_reminder']}</label><br />
			<span class='desc'>{$this->lang->words['pm_reminder_desc']}</span>
		</li>
		<li class='field checkbox'>
			<input type='checkbox' name='showPMPopUp' id='board_notify' class='input_check' value='1'" . (($this->memberData['view_pop']) ? (" checked=\"checked\"") : ("")) . "/> <label for='board_notify'>{$this->lang->words['settings_dopopup']}</label><br />
			<span class='desc'>{$this->lang->words['settings_dopopup_desc']}</span>
		</li>
	</ul>
</fieldset>
<fieldset class='row2 '>
	<h3>{$this->lang->words['ucp_title_posting']}</h3>
	<ul>
		" . (($this->settings['posting_allow_rte'] == 1) ? ("<li class='field checkbox'>
				" . ((!$this->memberData['_canUseRTE']) ? ("
					<div class='message error usercp'>{$this->lang->words['your_browser_norte']}</div>
				") : ("")) . "
				<input type='checkbox' class='input_check' id='editor_type' name='editorChoice' value='1' " . (($this->memberData['members_editor_choice'] == 'rte') ? (" checked=\"checked\"") : ("")) . "/> <label for='editor_type'>{$this->lang->words['enable_rte']}</label>
				<br /><span class='desc'>{$this->lang->words['rte_text']}</span>
			</li>") : ("")) . "
		
		" . (($this->settings['uploadFormType']) ? ("<!-- Fancy uploader is available, so show user option... -->
			<li class='field checkbox'>
				<input type='checkbox' class='input_check' id='member_uploader' name='member_uploader' value='1' " . (($this->memberData['member_uploader'] == 'flash') ? (" checked=\"checked\"") : ("")) . "/> <label for='member_uploader'>{$this->lang->words['enable_flash']}</label><br />
				<span class='desc'>{$this->lang->words['flash_text']}</span>
			</li>") : ("")) . "
	</ul>
</fieldset>
<fieldset class='row2 '>
	<h3>{$this->lang->words['ucp_title_search']}</h3>
	<ul>
		<li class='field'>
			<label for='timezone'>{$this->lang->words['ucp_vnc_type']}</label>
			<select name='bw_vnc_type' id='bw_vnc_type' class='input_select'>
				<option value='0' " . ((!$this->memberData['bw_vnc_type']) ? ("selected='selected'") : ("")) . ">{$this->lang->words['ucp_vnc_type_0']}</option>
				<option value='1' " . (($this->memberData['bw_vnc_type']) ? ("selected='selected'") : ("")) . ">{$this->lang->words['ucp_vnc_type_1']}</option>
			</select>
		</li>
		<li class='field'>
			<label for='timezone'>{$this->lang->words['ucp_forum_search_display']}</label>
			<select name='bw_forum_result_type' id='ucp_vnc_type' class='input_select'>
				<option value='0' " . ((!$this->memberData['bw_forum_result_type']) ? ("selected='selected'") : ("")) . ">{$this->lang->words['ucp_forum_search_display_0']}</option>
				<option value='1' " . (($this->memberData['bw_forum_result_type']) ? ("selected='selected'") : ("")) . ">{$this->lang->words['ucp_forum_search_display_1']}</option>
			</select>
		</li>
	</ul>
</fieldset>
<script type=\"text/javascript\">
//<![CDATA[
function toggle_dst()
{
	if ( $( 'dst' ).checked )
	{
		$( 'dst-manual' ).style.display = 'none';
	}
	else
	{
		$( 'dst-manual' ).style.display = 'block';
	}
}
toggle_dst();
//]]>
</script>";
return $IPBHTML;
}


function __f__551b12a07af0b64fedf15207a595be8e($times)
{
	$_ips___x_retval = '';
	foreach( $this->cache->getCache('login_methods') as $method )
	{
		
		$_ips___x_retval .= "
	" . (($method['login_folder_name'] == 'openid') ? ("" . (($this->hasOpenID = true) ? ("") : ("")) . "") : ("")) . "

";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__35131ae5b5351c22266ae749f4c95b1c($times)
{
	$_ips___x_retval = '';
	foreach( $times as $off => $words )
	{
		
		$_ips___x_retval .= "
				<option value='{$off}' " . (($off == $this->memberData['time_offset']) ? (" selected=\"selected\"") : ("")) . ">{$words}</option>
			
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- inlineModIPMessage --*/
function inlineModIPMessage($msg='') {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>{$msg}</p>";
return $IPBHTML;
}

/* -- memberAvatarForm --*/
function memberAvatarForm($data="") {
$IPBHTML = "";
$IPBHTML .= "<script type=\"text/javascript\">
var public_avatar_url	= '{$this->settings['_original_base_url']}/public/style_avatars/';
</script>
<fieldset class='row1'>
	<h3>{$this->lang->words['av_settings']}</h3>
	<p class='message unspecific'>
		" . (($this->settings['avatar_url']) ? ("
			" . sprintf( $this->lang->words['av_text_url'], $this->settings['maxWidth'], $this->settings['maxHeight'] ) . "
			<br />
		") : ("")) . "
		" . (($data['member']['g_avatar_upload']) ? ("
			" . sprintf( $this->lang->words['av_text_upload'], $this->settings['avup_size_max'] ) . "
		") : ("")) . "
		<br />{$this->lang->words['av_allowed_files']}
	</p>
</fieldset>
" . (($data['member']['avatar_location'] != "" and $data['member']['avatar_location'] != 'noavatar') ? ("
	<fieldset class='row2'>
		<h3>{$this->lang->words['av_current']}</h3>
		<div align='center'>
			<p>{$data['current_avatar_image']}<br />{$data['current_avatar_type']} {$data['current_avatar_dims']}</p>
			<p><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=members&amp;area=removeavatar&amp;do=remove", 'public','' ), "", "" ) . "'>{$this->lang->words['ucp_remove_avatar']}</a></p>
		</div>
	</fieldset>
") : ("")) . "
" . (($this->settings['avatar_url'] OR $data['member']['g_avatar_upload']) ? ("<fieldset class='row1'>
		<h3>{$this->lang->words['avatar_url_title']}</h3>
		" . (($data['member']['g_avatar_upload'] || $this->settings['avatar_url'] || $this->settings['allow_gravatars']) ? ("<ul>
				" . (($data['member']['g_avatar_upload']) ? ("
					<li class='field'>
						<label for='upload_avatar'>{$this->lang->words['av_upload']}</label>
						<input type=\"file\" size=\"30\" name=\"upload_avatar\" id=\"upload_avatar\" />
					</li>
				") : ("")) . "
				" . (($this->settings['avatar_url']) ? ("
					<li class='field'>
						<label for='avatar_url'>{$this->lang->words['av_url']}</label>
						<input type=\"text\" size=\"40\" maxlength=\"80\" name=\"avatar_url\" id=\"avatar_url\" value=\"{$data['current_url_avatar']}\" />
					</li>
				") : ("")) . "
				" . (($this->settings['allow_gravatars']) ? ("<li class='field'>
						<label for='gravatar_email'> <strong><em>-{$this->lang->words['or']}-</em></strong> {$this->lang->words['ucp_gravatar_enter_email']}</label>
						<input type=\"text\" size=\"40\" maxlength=\"80\" name=\"gravatar_email\" id=\"gravatar_email\" value=\"" . (($data['current_avatar_type'] == 'Gravatar') ? ("{$data['member']['avatar_location']}") : ("")) . "\" />
					</li>") : ("")) . "
			</ul>") : ("")) . "
		" . ((! $this->settings['disable_ipbsize']) ? ("
			<p><strong>{$this->lang->words['av_autosize']}</strong><br />({$this->lang->words['av_as_desc']})</p>
		") : ("
			<ul>
				<li class='field'>
					{$this->lang->words['width']}
					<input type=\"text\" size=\"3\" name=\"man_width\" />
				</li>
				<li class='field'>
					{$this->lang->words['height']}
					<input type=\"text\" size=\"3\" name=\"man_height\" />
				</li>
			</ul>
		")) . "
	</fieldset>") : ("")) . "
<fieldset class='row2'>
	<h3>{$this->lang->words['avatar_pre_title']}</h3>
	<ul>
		<li>
			<label for=\"avatarCategory\">{$this->lang->words['av_go_gal']}: </label>
			<select name='avatar_gallery' id='avatarCategory' class='input_select'>
				<option value='none' selected=\"selected\">&lt; {$this->lang->words['ucp_select_category']} &gt;</option>
				".$this->__f__e5c94653c5ced09500c7b5650d020850($data)."			</select>
			<div style='display:none;' id='avatarImageContainer'></div>
		</li>
	</ul>
</fieldset>";
return $IPBHTML;
}


function __f__e5c94653c5ced09500c7b5650d020850($data="")
{
	$_ips___x_retval = '';
	foreach( $data['avatar_categories'] as $id => $name )
	{
		
		$_ips___x_retval .= "
					<option value=\"{$name[0]}\">{$name[1]}</option>
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- membersAboutMeForm --*/
function membersAboutMeForm($preview_about_me="",$editor_html="") {
$IPBHTML = "";

$this->registry->templateStriping['usercp'] = array( FALSE, "row1","row2");
$IPBHTML .= "" . (($preview_about_me) ? ("
	<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
		<h3>{$this->lang->words['cp_current_aboutme']}</h3>
		<div class='signature'>
			{$preview_about_me}
		</div>
	</fieldset>
") : ("")) . "
<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3>{$this->lang->words['cp_edit_aboutme']}</h3>
	<div>
		{$editor_html}
	</div>
</fieldset>
" . ((!$this->settings['disable_lightbox']) ? ("
" . $this->registry->getClass('output')->getTemplate('global')->include_lightbox() . "
") : ("")) . "
" . $this->registry->getClass('output')->getTemplate('global')->include_highlighter(1) . "";
return $IPBHTML;
}

/* -- membersFacebookConnect --*/
function membersFacebookConnect($fbuid, $fbUserData, $linkedMemberData) {
$IPBHTML = "";

$this->registry->templateStriping['usercp'] = array( FALSE, "row1","row2");
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("facebook", "0" ) . "<!-- Not authorized email? -->
" . ((! $this->memberData['fb_emailallow'] AND strstr( $this->memberData['email'], '@proxymail.facebook.com' )) ? ("
<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3>{$this->lang->words['fb_email_not_allowed']}</h3>
	<p>{$this->lang->words['fb_email_not_allowed_desc']}</p>
</fieldset>
") : ("" . (($fbuid AND $linkedMemberData['member_id'] AND $linkedMemberData['member_id'] != $this->memberData['member_id']) ? ("
		<!-- currently logged in FB user is linked to a different account -->
		<div class='message error'>
			<strong>{$this->lang->words['fb_connect_mismatch']}</strong>
			<p>{$this->lang->words['fb_connect_mismatch_desc']}</p>
		</div>
	") : ("<div id='fbUserBox'>
			{$this->lang->words['fb_config']}
			<br />
			<br />
			<fb:login-button size=\"medium\" background=\"light\" length=\"long\" onlogin=\"ipb.facebook.usercp_loadUser();\"></fb:login-button>
		</div>
		<div id='fb-template' style='display:none'>
			<fieldset class='row2'>
				<div style='float:left; margin-right:4px;margin-bottom:3px'>
					<fb:profile-pic uid=\"loggedinuser\" facebook-logo=\"true\"></fb:profile-pic>
				</div>
				{$this->lang->words['fb_logged_in_as']} <strong><fb:name uid=\"loggedinuser\" useyou=\"false\"></fb:name></strong>
				" . ((is_array($fbUserData['status']) AND $fbUserData['status']['message']) ? ("
					<br /><br /><p class='desc'>{$fbUserData['first_name']} {$fbUserData['status']['message']}</p>
				") : ("")) . "
			</fieldset>
			<fieldset class='row1'>
				<h3>{$this->lang->words['fb_sync_options']}</h3>
				<ul>
					<li class='field checkbox'>
						<input class='input_check' type='checkbox' value='1' name='fbc_s_pic' value='1' " . (($this->memberData['fbc_s_pic'] > 0) ? ("checked='checked'") : ("")) . " id='fbc_s_pic' /><label for='fbc_s_pic'>{$this->lang->words['fb_sync_photo']}</label>
					</li>
					<li class='field checkbox'>
						<input class='input_check' type='checkbox' value='1' name='fbc_s_avatar' value='1' " . (($this->memberData['fbc_s_avatar'] > 0) ? ("checked='checked'") : ("")) . " id='fbc_s_avatar' /><label for='fbc_s_avatar'>{$this->lang->words['fb_sync_avatar']}</label>
					</li>
					<li class='field checkbox'>
						<input class='input_check' type='checkbox' value='1' name='fbc_s_status' value='1' " . (($this->memberData['fbc_s_status'] > 0) ? ("checked='checked'") : ("")) . " id='fbc_s_status' /><label for='fbc_s_status'>{$this->lang->words['fb_sync_status']}</label>
					</li>
					<li class='field checkbox'>
						<input class='input_check' type='checkbox' value='1' name='fbc_s_aboutme' value='1' " . (($this->memberData['fbc_s_aboutme'] > 0) ? ("checked='checked'") : ("")) . " id='fbc_s_aboutme' /><label for='fbc_s_aboutme'>{$this->lang->words['fb_sync_aboutme']}</label>
					</li>
				</ul>
				<p class='desc'>
					{$this->lang->words['fb_last_syncd']}
					" . (($this->memberData['fb_lastsync']) ? ("
						" . $this->registry->getClass('class_localization')->getDate($this->memberData['fb_lastsync'],"long", 0) . "
					") : ("
						{$this->lang->words['fb_never']}
					")) . "
				</p>
				<p><input type='submit' class='input_submit alt' id='fbc_sync' value='{$this->lang->words['fb_sync_now']}' /></p>
			</fieldset>
			<fieldset class='row1'>
				<h3>{$this->lang->words['fb_disassociate']}</h3>
				<p class='desc'>{$this->lang->words['fb_disassociate_desc']}</p>
				" . ((strstr( $this->memberData['email'], '@proxymail.facebook.com' )) ? ("
					<div class='message'>
						<strong>{$this->lang->words['fb_using_email']}</strong>
						<p>{$this->lang->words['fb_disassociate_info_1']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=email", 'public','' ), "", "" ) . "'>{$this->lang->words['fb_disassociate_info_2']}</a> {$this->lang->words['fb_disassociate_info_3']}
						</p>
					</div>
					<br />
				") : ("")) . "
				<p><input type='button' class='input_submit alt' id='fbc_remove' value='{$this->lang->words['fb_disassociate_now']}' /></p>
			</fieldset>
		</div>
	
		<script type=\"text/javascript\">
			/* Init Facebook JS */
			try
			{
				ipb.facebook.mem_fb_uid = " . intval($this->memberData['fb_uid']) . ";
				
				FB_RequireFeatures([\"XFBML\"], function()
				{
					FB.init(\"{$this->settings['fbc_api_id']}\", \"{$this->settings['fbc_xdlocation']}\" );
					FB.Facebook.get_sessionState().waitUntilReady(function()
					{
						FB.Connect.ifUserConnected( ipb.facebook.usercp_loadUser );
					} );
				} );
			}
			catch( error )
			{
				//alert( error );
			}
		</script>")) . "")) . "";
return $IPBHTML;
}

/* -- membersIgnoredUsersForm --*/
function membersIgnoredUsersForm($members) {
$IPBHTML = "";

$this->registry->templateStriping['members'] = array( FALSE, "row1","row2");
$IPBHTML .= "<script type='text/javascript'>
//<![CDATA[
	ipb.templates['autocomplete_wrap'] = new Template(\"<ul id='#{id}' class='ipbmenu_content' style='width: 250px;'></ul>\");
	ipb.templates['autocomplete_item'] = new Template(\"<li id='#{id}'><img src='#{img}' alt='' width='#{img_w}' height='#{img_h}' />&nbsp;&nbsp;#{itemvalue}</li>\");
//]]>
</script>
<fieldset class='row1'>
	<h3 class='maintitle'>{$this->lang->words['mi5_title']}</h3>
	<table class='ipb_table' summary=\"{$this->lang->words['ucp_ignored_users']}\">
		<tr class='header'>
			<th scope='col' width=\"30%\">{$this->lang->words['mi5_name']}</th>
			<th scope='col' width=\"30%\">{$this->lang->words['mi5_group']}</th>
			<th scope='col' width=\"10%\">{$this->lang->words['mi5_posts']}</th>
			<th scope='col' width=\"10%\">{$this->lang->words['ucp_ignore_posts']}</th>
			<th scope='col' width=\"10%\">{$this->lang->words['ucp_ignore_msgs']}</th>
			<th scope='col' width=\"10%\">&nbsp;</th>
		</tr>
				".$this->__f__12828dc837eddcd851ba1da0550e103e($members)."	</table>
</fieldset>
<fieldset class=\"row2\">
	<h3>{$this->lang->words['mi5_addem']}</h3>
	<ul>
		<li class='field'>
			<label for='newbox_1'>{$this->lang->words['ucp_members_name']}</label>
			<input type=\"text\" size='40' name=\"newbox_1\" id=\"newbox_1\" value=\"{$this->request['newbox_1']}\" />
			<ul>
				<li class='field checkbox'>
					<input type='checkbox' class='input_check' name='ignore_messages' value='1' />
					{$this->lang->words['ucp_ignore_pc']}
				</li>
				<li class='field checkbox'>
					<input type='checkbox' class='input_check' name='ignore_topics' value='1' checked='checked' />
					{$this->lang->words['ucp_ignore_posts']}
				</li>
			</ul>
		</li>
	</ul>
</fieldset>
<script type=\"text/javascript\">
	document.observe(\"dom:loaded\", function(){
		var url = ipb.vars['base_url'] + 'app=core&module=ajax&section=findnames&do=get-member-names&secure_key=' + ipb.vars['secure_hash'] + '&name=';
		new ipb.Autocomplete( $('newbox_1'), { multibox: false, url: url, templates: { wrap: ipb.templates['autocomplete_wrap'], item: ipb.templates['autocomplete_item'] } } );
	});
</script>";
return $IPBHTML;
}


function __f__12828dc837eddcd851ba1da0550e103e($members)
{
	$_ips___x_retval = '';
	foreach( $members as $member )
	{
		
		$_ips___x_retval .= "
			<tr class='" .  IPSLib::next( $this->registry->templateStriping["members"] ) . "'>
				<td>
					<img src='{$member['pp_thumb_photo']}' width='{$member['pp_thumb_width']}' height='{$member['pp_thumb_height']}' border='0' />
					<strong><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", 'public','' ), "{$member['members_seo_name']}", "showuser" ) . "\">{$member['members_display_name']}</a></strong>
					<p>{$this->lang->words['m_joined']} " . $this->registry->getClass('class_localization')->getDate($member['joined'],"joined", 0) . "</p>
				</td>
				<td>{$member['g_title']}</td>
				<td>{$member['posts']}</td>
				<td>
					" . (($member['ignoreData']['ignore_topics'] == 1) ? ("
						<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=members&amp;area=toggleIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}&amp;field=topics", 'public','' ), "", "" ) . "\" title=\"{$this->lang->words['click_toggle']}\">{$this->lang->words['yes']}</a>
					") : ("
						<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=members&amp;area=toggleIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}&amp;field=topics", 'public','' ), "", "" ) . "\" title=\"{$this->lang->words['click_toggle']}\">{$this->lang->words['no']}</a>
					")) . "
				</td>
				<td>
					" . (($member['ignoreData']['ignore_messages'] == 1) ? ("
						<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=members&amp;area=toggleIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}&amp;field=messages", 'public','' ), "", "" ) . "\" title=\"{$this->lang->words['click_toggle']}\">{$this->lang->words['yes']}</a>
					") : ("
						<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=members&amp;area=toggleIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}&amp;field=messages", 'public','' ), "", "" ) . "\" title=\"{$this->lang->words['click_toggle']}\">{$this->lang->words['no']}</a>
					")) . "
				</td>
				<td><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=members&amp;area=removeIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}", 'public','' ), "", "" ) . "\">{$this->lang->words['mi5_remove']}</a></td>
			</tr>
		
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- membersModFindUser --*/
function membersModFindUser($inlineMsg="") {
$IPBHTML = "";
$IPBHTML .= "<form id=\"userCPForm\" action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=members&amp;area=mod_member&amp;do=custom", 'public','' ), "", "" ) . "\" method=\"post\">
<input type=\"hidden\" name=\"securekey\" value=\"{$this->member->form_hash}\" />
<fieldset class=\"row1\">
	<h3>{$this->lang->words['cp_edit_user']}</h3>
	" . (($inlineMsg) ? ("
		<p class='message unspecific'>
			<strong>{$this->lang->words['ipm_title']}</strong>
			<br />
			$inlineMsg
		</p>
	") : ("")) . "
	<ul>
		<li class=\"field\">
			<label for='name'>{$this->lang->words['cp_find_user']}</label>
			<input type=\"text\" class='input_text' size=\"40\" name=\"name\" id='name' value=\"{$this->request['name']}\" />
			<input type=\"submit\" class='input_submit' value=\"{$this->lang->words['cp_find_submit']}\" />
		</li>
	</ul>
</fieldset>
</form>";
return $IPBHTML;
}

/* -- membersModIPForm --*/
function membersModIPForm($ip="", $inlineMsg='') {
$IPBHTML = "";
$IPBHTML .= "<form id=\"userCPForm\" action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=members&amp;area=mod_ipaddress&amp;do=custom", 'public','' ), "", "" ) . "\" method=\"post\">
<input type=\"hidden\" name=\"securekey\" value=\"{$this->member->form_hash}\" />
<fieldset class=\"row1\">
	<h3>{$this->lang->words['menu_ipsearch']}</h3>
	" . (($inlineMsg) ? ("
		{$inlineMsg}
	") : ("")) . "
	<br />
	
	<p class='message unspecific'>
		{$this->lang->words['ip_desc_text']}
	</p>
	<ul>
		<li class='field'>
			{$this->lang->words['ip_enter']}
			<input type=\"text\" size=\"20\" maxlength=\"24\" class='input_text' name=\"ip\" value=\"{$ip}\" />
			<select name=\"iptool\" class='input_select'>
				<option value=\"resolve\">{$this->lang->words['ip_resolve']}</option>
				<option value=\"posts\">{$this->lang->words['ip_posts']}</option>
				<option value=\"members\">{$this->lang->words['ip_members']}</option>
			</select>
			<input type=\"submit\" class='input_submit' value=\"{$this->lang->words['ip_submit']}\" />
		</li>
	</ul>
	<p class='desc'>
		{$this->lang->words['ip_warn_text']}
	</p>
</fieldset>
</form>";
return $IPBHTML;
}

/* -- membersModIPFormMembers --*/
function membersModIPFormMembers($pages="",$members) {
$IPBHTML = "";

$this->registry->templateStriping['members'] = array( FALSE, "row1","row2");
$IPBHTML .= "<div class='topic_controls'>
	{$pages}
</div>
<br />
<table class='ipb_table'>
	<tr class='header'>
		<th style='width: 20%'>{$this->lang->words['ipm_name']}</th>
		<th style='width: 20%'>{$this->lang->words['ipm_ip']}</th>
		<th style='width: 10%' class='short'>{$this->lang->words['ipm_posts']}</th>
		<th style='width: 15%' class='short'>{$this->lang->words['ipm_reg']}</th>
		<th style='width: 15%'>{$this->lang->words['ipm_group']}</th>
		<th style='width: 20%'>{$this->lang->words['ipm_options']}</th>
	</tr>
	" . ((is_array( $members ) AND count( $members )) ? ("
				".$this->__f__f9a2db13a4240375ddddb8ffd8df53c0($pages,$members)."	") : ("")) . "
</table>
<br />
<div class='topic_controls'>
	{$pages}
</div>";
return $IPBHTML;
}


function __f__f9a2db13a4240375ddddb8ffd8df53c0($pages="",$members)
{
	$_ips___x_retval = '';
	foreach( $members as $id => $row )
	{
		
		$_ips___x_retval .= "
			<tr class='" .  IPSLib::next( $this->registry->templateStriping["members"] ) . "'>
				<td><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$row['member_id']}", 'public','' ), "{$row['members_seo_name']}", "showuser" ) . "\">{$row['members_display_name']}</a></td>
				<td class='altrow'>{$row['ip_address']}</td>
				<td class='short'>{$row['posts']}</td>
				<td class=\"altrow short\">{$row['joined']}</td>
				<td>{$row['groupname']}</td>
				<td class=\"altrow short\">
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=editmember&amp;mid={$row['member_id']}&amp;auth_key={$this->member->form_hash}", 'public','' ), "", "" ) . "\" title=\"Edit this Member\">{$this->lang->words['ipm_edit']}</a>
				</td>
			</tr>
		
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- membersModIPFormPosts --*/
function membersModIPFormPosts($count=0, $pageLinks='', $results) {
$IPBHTML = "";

$this->registry->templateStriping['posts'] = array( FALSE, "row1","row2");
$IPBHTML .= "<p class='message'>
	{$this->lang->words['ipp_found']} {$count}
</p>
<br />
<div class='topic_controls'>
	{$pageLinks}
</div>
<br />
" . ((count($results)) ? ("
		".$this->__f__afeb2952442e39f93c9de55900d8e4be($count,$pageLinks,$results)."") : ("")) . "
<br />
<div class='topic_controls'>
	{$pageLinks}
</div>";
return $IPBHTML;
}


function __f__afeb2952442e39f93c9de55900d8e4be($count=0, $pageLinks='', $results)
{
	$_ips___x_retval = '';
	foreach( $results as $result )
	{
		
		$_ips___x_retval .= "
		<div class='post_block ucp no_sidebar " .  IPSLib::next( $this->registry->templateStriping["posts"] ) . "'>
			<h3 class=''><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$result['topic_id']}&amp;findpost={$result['pid']}", 'public','' ), "{$result['seo_title']}", "showtopic" ) . "' title='View post'>{$result['members_display_name']} | " . $this->registry->getClass('class_localization')->getDate($result['post_date'],"long", 0) . "</a></h3>
			<div class='post_body'>
				<div class='post'>{$result['post']}</div>
			</div>
		</div>
		<hr />
	
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- membersPhotoForm --*/
function membersPhotoForm($cur_photo="",$show_size="",$p_max="") {
$IPBHTML = "";
$IPBHTML .= "<fieldset class='row1'>
	<h3>{$this->lang->words['pph_title']}</h3>
	<p class='message unspecific'>
		{$this->lang->words['pph_desc']}
		<br />{$this->lang->words['pph_max']}
	</p>
</fieldset>
" . (($this->memberData['_has_photo']) ? ("
	<fieldset class='row2'>
		<h3>{$this->lang->words['pph_current']}</h3>
		<div align='center'>
			<p>$cur_photo<br />$show_size</p>
			<p><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=members&amp;area=removephoto&amp;do=remove", 'public','' ), "", "" ) . "'>{$this->lang->words['ucp_remove_photo']}</a></p>			
		</div>		
	</fieldset>
") : ("")) . "
<fieldset class='row1'>
	<h3>{$this->lang->words['pph_change']}</h3>
	<ul>
		<li class='field'>
			<label for='upload_photo'>{$this->lang->words['pph_upload']}</label>
			<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"" . $p_max*1024 . "\" /><input type=\"file\" name=\"upload_photo\" id='upload_photo' value=\"\" size=\"40\" />
			" . ((! $this->settings['disable_ipbsize']) ? ("
				<p><strong>{$this->lang->words['pph_autosize']}</strong><br />({$this->lang->words['pph_as_desc']})</p>
			") : ("
				<ul>
					<li class='field'>
						{$this->lang->words['width']}
						<input type=\"text\" size=\"3\" name=\"man_width\" />
					</li>
					<li class='field'>
						{$this->lang->words['height']}
						<input type=\"text\" size=\"3\" name=\"man_height\" />
					</li>
				</ul>
			")) . "
		</li>
	</ul>
</fieldset>";
return $IPBHTML;
}

/* -- membersProfileForm --*/
function membersProfileForm($personal_statement='',$required_output='',$optional_output='',$day='',$mon='',$year='') {
$IPBHTML = "";

$this->registry->templateStriping['usercp'] = array( FALSE, "row1","row2");
$IPBHTML .= "<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3>{$this->lang->words['ucp_comments']}</h3>
	<ul>
		<li class='field checkbox'>
			<input class='input_check' type='checkbox' value='1' name='pp_setting_count_comments' value='1' " . (($this->memberData['pp_setting_count_comments'] > 0) ? ("checked='checked'") : ("")) . " id='comments_enable' /><label for='comments_enable'>{$this->lang->words['ucp_enable_comments']}</label>
		</li>
		<li class='field'>
			<label for='comments_notify'>{$this->lang->words['ucp_comment_notify_type']}</label>
			<select name='pp_setting_notify_comments' id='comments_notify' class='input_select'>
				<option value='none'" . (($this->memberData['pp_setting_notify_comments'] == 'none') ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_none']}</option>
				<option value='email'" . (($this->memberData['pp_setting_notify_comments'] == 'email') ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_email']}</option>
				<option value='pm'" . (($this->memberData['pp_setting_notify_comments'] == 'pm') ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_pm']}</option>
			</select>
		 	<br />
			<span class='desc'>{$this->lang->words['m_choose_comm_type']}</span>
		</li>
		<li class='field'>
			<label for='comments_moderate'>{$this->lang->words['ucp_comment_approval']}</label>
			<select name='pp_setting_moderate_comments' id='comments_moderate' class='input_select'>
				<option value='0'" . ((! $this->memberData['pp_setting_moderate_comments']) ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_disabled']}</option>
				<option value='1'" . (($this->memberData['pp_setting_moderate_comments']) ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_enabled']}</option>
			</select>
			<br />
			<span class='desc'>{$this->lang->words['m_choose_cmod_type']}</span>
		</li>
	</ul>
</fieldset>
" . (($this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
		<h3>{$this->lang->words['ucp_friends']}</h3>
		<ul>
			<li class='field checkbox'>
				<input class='input_check' type='checkbox' value='1' name='pp_setting_count_friends' value='1' " . (($this->memberData['pp_setting_count_friends'] > 0) ? ("checked='checked'") : ("")) . " id='friends_enable' /><label for='friends_enable'>{$this->lang->words['ucp_show_friends_profile']}</label>
			</li>
			<li class='field'>
				<label for='friend_notify'>{$this->lang->words['ucp_friend_notify']}</label>
				<select name='pp_setting_notify_friend' id='friend_notify' class='input_select'>
					<option value='none'" . (($this->memberData['pp_setting_notify_friend'] == 'none') ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_none']}</option>
					<option value='email'" . (($this->memberData['pp_setting_notify_friend'] == 'email') ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_email']}</option>
					<option value='pm'" . (($this->memberData['pp_setting_notify_friend'] == 'pm') ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_pm']}</option>
				</select>
				<br />
				<span class='desc'>{$this->lang->words['m_choose_friend_type']}</span>
			</li>
			<li class='field'>
				<label for='friend_moderate'>{$this->lang->words['ucp_friend_approve']}</label>
				<select name='pp_setting_moderate_friends' id='friend_moderate' class='input_select'>
					<option value='0'" . ((! $this->memberData['pp_setting_moderate_friends']) ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_disabled']}</option>
					<option value='1'" . (($this->memberData['pp_setting_moderate_friends']) ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_enabled']}</option>
				</select>
				<br />
				<span class='desc'>{$this->lang->words['m_choose_fmod_type']}</span>
			</li>
		</ul>
	</fieldset>") : ("")) . "
<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3>{$this->lang->words['profile_information']}</h3>
	<ul>
		<li class='field'>
			<label for='pp_latest_visitors'>{$this->lang->words['ucp_show_x_latest']}</label>
			<select name='pp_setting_count_visitors' id='pp_latest_visitors' class='input_select'>
				<option value='0'" . ((!$this->memberData['pp_setting_count_visitors']) ? (" selected") : ("")) . ">0</option>
				<option value='3'" . (($this->memberData['pp_setting_count_visitors'] == 3) ? (" selected") : ("")) . ">3</option>
				<option value='5'" . (($this->memberData['pp_setting_count_visitors'] == 5) ? (" selected") : ("")) . ">5</option>
				<option value='10'" . (($this->memberData['pp_setting_count_visitors'] == 10) ? (" selected") : ("")) . ">10</option>
			</select>
		</li>
		" . ((($this->settings['post_titlechange']) && ($this->memberData['posts'] > $this->settings['post_titlechange'])) ? ("
			<li class='field'>
				<label for='member_title'>{$this->lang->words['member_title']}</label>
				<input type='text' class='input_text' size='30' id='member_title' name='member_title' value='{$this->memberData['title']}' />
				<br />
				<span class='desc'>{$this->lang->words['member_title_desc']}</span>
			</li>
		") : ("")) . "
		" . (($day AND $mon AND $year) ? ("
			<li class='field'>
				<label for='birthday'>{$this->lang->words['ucp_birthday_select']}</label>
				<select name=\"month\">&nbsp;
					".$this->__f__75c3d88ac0baae601f6d5e679a11600a($personal_statement,$required_output,$optional_output,$day,$mon,$year)."				</select>			
				<select name=\"day\">&nbsp;
					".$this->__f__d03d0aa6c5fb287cc4778d3bb43cca81($personal_statement,$required_output,$optional_output,$day,$mon,$year)."				</select> 
				<select name=\"year\">&nbsp;
					".$this->__f__e255a0dd003307c5cc3639ce7de313cc($personal_statement,$required_output,$optional_output,$day,$mon,$year)."				</select> <br />
				<span class='desc'>{$this->lang->words['ucp_birthday_optional']}</span>
			</li>
		") : ("")) . "
	</ul>
</fieldset>

" . (($required_output) ? ("
	<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
		<h3>{$this->lang->words['ucp_required_info']}</h3>
		<ul>
			{$required_output}
		</ul>
	</fieldset>
") : ("")) . "
" . (($optional_output) ? ("
	<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
		<h3>{$this->lang->words['ucp_other_info']}</h3>
		<ul>
			{$optional_output}
		</ul>
	</fieldset>
") : ("")) . "";
return $IPBHTML;
}


function __f__75c3d88ac0baae601f6d5e679a11600a($personal_statement='',$required_output='',$optional_output='',$day='',$mon='',$year='')
{
	$_ips___x_retval = '';
	foreach( $mon as $m )
	{
		
		$_ips___x_retval .= "
						<option value='{$m[0]}'" . (($m[0] == $this->memberData['bday_month']) ? (" selected=\"selected\"") : ("")) . ">{$m[1]}</option>
					
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__d03d0aa6c5fb287cc4778d3bb43cca81($personal_statement='',$required_output='',$optional_output='',$day='',$mon='',$year='')
{
	$_ips___x_retval = '';
	foreach( $day as $d )
	{
		
		$_ips___x_retval .= "
						<option value='{$d[0]}'" . (($d[0] == $this->memberData['bday_day']) ? (" selected=\"selected\"") : ("")) . ">{$d[1]}</option>
					
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__e255a0dd003307c5cc3639ce7de313cc($personal_statement='',$required_output='',$optional_output='',$day='',$mon='',$year='')
{
	$_ips___x_retval = '';
	foreach( $year as $y )
	{
		
		$_ips___x_retval .= "
						<option value='{$y[0]}'" . (($y[0] == $this->memberData['bday_year']) ? (" selected=\"selected\"") : ("")) . ">{$y[1]}</option>
					
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- membersSignatureForm --*/
function membersSignatureForm($preview_sig="",$editor_html="",$sig_restrictions=array()) {
$IPBHTML = "";

$this->registry->templateStriping['usercp'] = array( FALSE, "row1","row2");
$IPBHTML .= "<input type='hidden' name='key' value='{$key}' />
<input type='hidden' name='removeattachid' value='0' />" . (($preview_sig) ? ("
	<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
		<h3>{$this->lang->words['cp_current_sig']}</h3>
		<div class='signature'>
			{$preview_sig}
		</div>
	</fieldset>
") : ("")) . "
<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3>{$this->lang->words['cp_edit_sig']}</h3>
	<div>
		{$editor_html}
	</div>
</fieldset>
" . (($this->memberData['g_signature_limits']) ? ("<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
		<h3>{$this->lang->words['sig_restrictions']}</h3>
		<br />
		<div class='desc'>
			{$this->lang->words['sig_restrictions_contain']}
			<ul class='bullets'>
				" . (($sig_restrictions[1] !== '') ? ("
					<li>" . sprintf( $this->lang->words['sig_max_imagesr'], $sig_restrictions[1] ) . "</li>
				") : ("
					<li>{$this->lang->words['sig_max_imagesr_nl']}</li>
				")) . "" . (($sig_restrictions[2] !== '' || $sig_restrictions[3] !== '') ? ("
					<li>" . sprintf( $this->lang->words['sig_max_imgsize'], $sig_restrictions[2], $sig_restrictions[3] ) . "</li>
				") : ("
					<li>{$this->lang->words['sig_max_imgsize_nl']}</li>
				")) . "" . (($sig_restrictions[4] !== '') ? ("
					<li>" . sprintf( $this->lang->words['sig_max_urls'], $sig_restrictions[4] ) . "</li>
				") : ("
					<li>{$this->lang->words['sig_max_urls_nl']}</li>
				")) . "" . (($sig_restrictions[5] !== '') ? ("
					<li>" . sprintf( $this->lang->words['sig_max_lines'], $sig_restrictions[5] ) . "</li>
				") : ("
					<li>{$this->lang->words['sig_max_lines_nl']}</li>
				")) . "
			</ul>
		</div>
	</fieldset>") : ("")) . "
" . ((!$this->settings['disable_lightbox']) ? ("
" . $this->registry->getClass('output')->getTemplate('global')->include_lightbox() . "
") : ("")) . "
" . $this->registry->getClass('output')->getTemplate('global')->include_highlighter(1) . "";
return $IPBHTML;
}

/* -- membersSignatureFormError --*/
function membersSignatureFormError($form) {
$IPBHTML = "";
$IPBHTML .= "<fieldset class='row1'>
	<h3>{$this->lang->words['cp_edit_sig']}</h3>
	<br />
	" . (($form['_noPerm']) ? ("
		<p class='message error'>{$form['_noPerm']}</p>
	") : ("")) . "
</fieldset>";
return $IPBHTML;
}

/* -- modAnnounceForm --*/
function modAnnounceForm($announce="",$button="",$forum_html="",$type="",$editor_html="",$msg="") {
$IPBHTML = "";
$IPBHTML .= "<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=forums&amp;area=modSaveAnnouncement&amp;do=saveIt&amp;announce_id={$announce['announce_id']}&amp;type={$type}", 'public','' ), "", "" ) . "\" method=\"post\" name=\"REPLIER\" id='postingform' onsubmit='return ValidateForm()'>
<fieldset class='row1'>
	<h3>{$button}</h3>
	" . (($msg != "") ? ("
		<br /><p class='message unspecific'>{$msg}</p>
	") : ("")) . "
	<ul>
		<li class='field'>
			<label for='announce_title'>{$this->lang->words['announce_form_title']}</label>
			<input class='input_text' type=\"text\" size=\"30\" name=\"announce_title\" id='announce_title' value=\"{$announce['announce_title']}\" tabindex=\"1\" />
		</li>
		<li class='field'>
			<label for='announce_start'>{$this->lang->words['announce_form_start']}</label>
			<span class=\"desc\">{$this->lang->words['announce_form_startdesc']}</span>
			<input type=\"text\" size=\"10\" name=\"announce_start\" id='announce_start' value=\"{$announce['announce_start']}\" tabindex=\"2\" />
		</li>
		<li class='field'>
			<label for='announce_end'>{$this->lang->words['announce_form_end']}</label>
			<span class=\"desc\">{$this->lang->words['announce_form_enddesc']}</span>
			<input type=\"text\" size=\"10\" name=\"announce_end\" id='announce_end' value=\"{$announce['announce_end']}\" tabindex=\"2\" />
		</li>
		<li class='field'>
			<label for='announce_forum'>{$this->lang->words['announce_form_forums']}</label>
			<span class=\"desc\">{$this->lang->words['announce_form_forums2']}</span>
			<select class=\"input_select\" multiple=\"multiple\" size=\"10\" id='announce_forum' name=\"announce_forum[]\" tabindex=\"4\">{$forum_html}</select>
		</li>
		<li class='field'>
			{$editor_html}
		</li>
	</ul>
</fieldset>
<fieldset class='row2'>
	<h3>{$this->lang->words['announce_form_options']}</h3>
	<ul>
		<li class='field checkbox'>
			<input type=\"checkbox\" class=\"checkbox\" name=\"announce_active\" id='announce_active' value=\"1\" {$announce['announce_active_checked']} />
			<label for='announce_active'>{$this->lang->words['announce_form_enable']}</label>
		</li>
		<li class='field checkbox'>
			<input type=\"checkbox\" class=\"checkbox\" name=\"announce_html_enabled\" id='announce_html_enabled' value=\"1\" {$announce['html_checkbox']} />
			<label for='announce_html_enabled'>{$this->lang->words['announce_use_html']}</label>
		</li>
		<li class='field checkbox'>
			<input type=\"checkbox\" class=\"checkbox\" name=\"announce_nlbr_enabled\" id='announce_nlbr_enabled' value=\"1\" {$announce['nlbr_checkbox']} />
			<label for='announce_nlbr_enabled'>{$this->lang->words['announce_use_nlbr']}</label>
		</li>
	</ul>
</fieldset>
<fieldset class='submit'>
	<input type=\"submit\" value=\"{$button}\" class=\"input_submit alt\" tabindex=\"7\" /> {$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=forums&amp;area=mod_announcements", 'public','' ), "", "" ) . "' title='{$this->lang->words['cancel_edit']}' class='cancel'>{$this->lang->words['cancel']}</a>
</fieldset>
</form>";
return $IPBHTML;
}

/* -- modAnnouncements --*/
function modAnnouncements($announcements) {
$IPBHTML = "";

$this->registry->templateStriping['announcements'] = array( FALSE, "row1","row2");
$IPBHTML .= "<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=forums&amp;area=modUpdateAnnouncements&amp;do=saveIt", 'public','' ), "", "" ) . "\" id=\"mutliact\" method=\"post\">
<fieldset class='row1'>
	<h3 class='maintitle'>{$this->lang->words['announce_current']}</h3>
	<table class='ipb_table' summary=\"{$this->lang->words['ucp_announcements']}\">
		<tr class='header'>
			<th scope='col' style=\"width: 40%\">{$this->lang->words['announce_title']}</th>
			<th scope='col' class='short' style=\"width: 10%\">{$this->lang->words['announce_starts']}</th>
			<th scope='col' class='short' style=\"width: 10%\">{$this->lang->words['announce_end']}</th>
			<th scope='col' style=\"width: 25%\">{$this->lang->words['announce_forums']}</th>
			<th scope='col' style=\"width: 15%\">&nbsp;</th>
		</tr>
		" . ((is_array( $announcements ) AND count( $announcements )) ? ("
						".$this->__f__acf6acf00bc2333e73f8097682224278($announcements)."		") : ("
			<tr>
				<td align=\"center\" colspan=\"5\">{$this->lang->words['announce_none']}</td>
			</tr>
		")) . "
	</table>
</fieldset>
<fieldset class='submit'>
	<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=forums&amp;area=modAddAnnouncement&amp;do=add", 'public','' ), "", "" ) . "\" class='input_submit'>{$this->lang->words['announce_add']}</a>
</fieldset>
</form>";
return $IPBHTML;
}


function __f__8198bf74888f05550dbac5daec5d6a01($announcements,$announce='')
{
	$_ips___x_retval = '';
	foreach( $announce['_forums'] as $forum )
	{
		
		$_ips___x_retval .= "
											<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$forum[0]}", 'public','' ), "", "" ) . "\">{$forum[1]}</a></li>
										
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__acf6acf00bc2333e73f8097682224278($announcements)
{
	$_ips___x_retval = '';
	foreach( $announcements as $announce )
	{
		
		$_ips___x_retval .= "
				<tr class=\"" .  IPSLib::next( $this->registry->templateStriping["announcements"] ) . "\">
					<td>
						<strong><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showannouncement={$announce['announce_id']}", 'public','' ), "", "" ) . "\">{$announce['announce_title']}</a></strong> {$announce['announce_inactive']}<div class=\"desc\">{$this->lang->words['announce_by']} {$announce['members_display_name']}</div>
					</td>
					<td class=\"short\">
						" . (($announce['announce_start']) ? ("
							" . $this->registry->getClass('class_localization')->getDate($announce['announce_start'],"short", 0) . "
						") : ("
							--
						")) . "
					</td>
					<td class=\"short\">
						" . (($announce['announce_end']) ? ("
							" . $this->registry->getClass('class_localization')->getDate($announce['announce_end'],"short", 0) . "
						") : ("
							--
						")) . "
					</td>
					<td>
						<div class=\"forumdesc\">
							" . (($announce['announce_forum'] == '*') ? ("
								{$this->lang->words['announce_page_allforums']}
							") : ("" . ((is_array( $announce['_forums'] ) and count( $announce['_forums'] )) ? ("" . ((count( $announce['_forums'] ) > 5) ? ("
										" . count( $announce['_forums'] ) . " {$this->lang->words['announce_page_numforums']}
									") : ("
										<ul>
										".$this->__f__8198bf74888f05550dbac5daec5d6a01($announcements,$announce)."										</ul>
									")) . "") : ("")) . "")) . "
						</div>
					</td>
					<td class=\"short\">
						<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=forums&amp;area=modEditAnnouncement&amp;do=edit&amp;announce_id={$announce['announce_id']}", 'public','' ), "", "" ) . "\">{$this->lang->words['announce_edit']}</a>
						&middot; <a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=forums&amp;area=modDeleteAnnouncement&amp;do=edit&amp;announce_id={$announce['announce_id']}", 'public','' ), "", "" ) . "\" id=\"del_{$announce['announce_id']}\">{$this->lang->words['announce_delete']}</a>
						<script type='text/javascript'>
							$('del_{$announce['announce_id']}').observe('click', ipb.ucp.deleteAnnouncement.bindAsEventListener( this, {$announce['announce_id']} ) );
						</script>
					</td>
				</tr>
			
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- passwordChangeForm --*/
function passwordChangeForm() {
$IPBHTML = "";
$IPBHTML .= "<fieldset class='row1'>
	<h3>{$this->lang->words['account_pass_title']}</h3>
	<br />
	<p class='message unspecific'>
		" . (($this->memberData['g_access_cp']) ? ("
			{$this->lang->words['admin_emailpassword']}
		") : ("
			{$this->lang->words['pass_change_text']}
		")) . "
	</p>
	
	" . ((!$this->memberData['g_access_cp']) ? ("
		<ul>
			<li class='field'>
				<label for='current_pass'>{$this->lang->words['account_pass_old']}</label>
				<input type=\"password\" name=\"current_pass\" value=\"\" id='current_pass' class='input_text' />
			</li>
			<li class='field'>
				<label for='new_pass_1'>{$this->lang->words['account_pass_new']}</label>
				<input type=\"password\" name=\"new_pass_1\" value=\"\" id='new_pass_1' class='input_text' />
			</li>
			<li class='field'>
				<label for='new_pass_2'>{$this->lang->words['account_pass_new2']}</label>
				<input type=\"password\" name=\"new_pass_2\" value=\"\" id='new_pass_2' class='input_text' />
			</li>
		</ul>
	") : ("")) . "
</fieldset>";
return $IPBHTML;
}

/* -- Show_attachments --*/
function Show_attachments($data="") {
$IPBHTML = "";
$IPBHTML .= "<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "act=attach&amp;type={$data['type']}&amp;id={$data['attach_id']}", 'public','' ), "", "" ) . "\" title=\"{$this->lang->words['attach_dl']}\" target=\"_blank\"><img src=\"{$this->settings['mime_img']}/{$data['mime_image']}\" alt=\"{$this->lang->words['attached_file']}\" /></a>
&nbsp;<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "act=attach&amp;type={$data['type']}&amp;id={$data['attach_id']}", 'public','' ), "", "" ) . "\" title=\"{$this->lang->words['attach_dl']}\" target=\"_blank\">{$data['attach_file']}</a> ( {$data['file_size']} )
<span class=\"desc\">{$this->lang->words['attach_hits']}: {$data['attach_hits']}</span><br />";
return $IPBHTML;
}

/* -- ucp_message --*/
function ucp_message($title="",$msg="") {
$IPBHTML = "";
$IPBHTML .= "<div class=\"formsubtitle\">{$title}</div>
	<p>$msg</p>";
return $IPBHTML;
}

/* -- userCPTemplate --*/
function userCPTemplate($current_tab, $html, $tabs, $current_area, $errors=array(), $hide_form=0, $maxUpload=0) {
$IPBHTML = "";
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("ucp", "0" ) . "
" . ((IPSLib::fbc_enabled() === TRUE) ? ("<!-- SKINNOTE: This could be added dynamically by JS if this is too obtrusive. FB users need JS on, so no worries there -->
	" . (($this->registry->output->isHTTPS) ? ("
		<script src=\"https://ssl.connect.facebook.com/js/api_lib/v0.4/FeatureLoader.js.php\" type=\"text/javascript\"></script>
	") : ("
		<script src=\"http://static.ak.connect.facebook.com/js/api_lib/v0.4/FeatureLoader.js.php\" type=\"text/javascript\"></script>
	")) . "	" . ((! $this->memberData['fb_emailallow'] AND strstr( $this->memberData['email'], '@proxymail.facebook.com' )) ? ("
		<div id='fbc_emailCheck' style='display:none'>
			<fb:prompt-permission perms=\"email\">
				<div class='message unspecific'>
					<strong>{$this->lang->words['cannot_get_email']}</strong>
					<br />
					{$this->lang->words['cannot_get_email_2']}
					<br />
					<u>{$this->lang->words['click_allow_email']}</u>
				</div>
			</fb:prompt-permission>
			<br />
		</div>
		<script type=\"text/javascript\">
			/* Init Facebook JS */
			FB_RequireFeatures([\"XFBML\"], function()
			{
				FB.init(\"{$this->settings['fbc_api_id']}\", \"{$this->settings['fbc_xdlocation']}\" );
			} );
			/* As the REST can take a short while, the div shows then hides; this delays it until its ready to show or hide */
			Event.observe( window, 'load', function() { $('fbc_emailCheck').show(); } );
		</script>
	") : ("")) . "") : ("")) . "
" . (($hide_form == 0) ? ("" . (($maxUpload) ? ("
		<form method='post' enctype=\"multipart/form-data\" action='{$this->settings['base_url']}app=core&amp;module=usercp&amp;tab={$current_tab}&amp;area={$current_area}' id='userCPForm'>
	") : ("
		<form method='post' action='{$this->settings['base_url']}app=core&amp;module=usercp&amp;tab={$current_tab}&amp;area={$current_area}' id='userCPForm'>
	")) . "") : ("")) . "
	<fieldset>
		<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"$maxUpload\" />
		<input type='hidden' name='do' value='save' />
		<input type='hidden' name='secure_hash' value='{$this->member->form_hash}' />
		<input type='hidden' name='s' value='{$this->request['s']}' />
	</fieldset>
<h2>{$this->lang->words['ucp_title']}</h2>
<ul class='tab_bar no_title'>
	".$this->__f__d56c673e0548c7a8eeb9357cd58893d1($current_tab,$html,$tabs,$current_area,$errors,$hide_form,$maxUpload)."</ul>
<div class='tab_body usercp_body'>
	<ul id='usercp_menu'>
		" . ((is_array( $tabs[ $current_tab ]['_menu'] ) AND count( $tabs[ $current_tab ]['_menu'] )) ? ("
			".$this->__f__92e07c01d6df6f93f9677a030cfbd8a8($current_tab,$html,$tabs,$current_area,$errors,$hide_form,$maxUpload)."		") : ("")) . "
	</ul>
	<div id='usercp_content'>
		" . ((is_array( $errors ) AND count( $errors )) ? ("
			<p class='message error'>
				".$this->__f__7d6ff6cf778678bd847f6e4de3209156($current_tab,$html,$tabs,$current_area,$errors,$hide_form,$maxUpload)."			</p>
		") : ("")) . "
		" . (($this->request['saved'] == 1) ? ("
			<p class='message'>{$this->lang->words['ucp__settings_saved']}</p>
		") : ("")) . "
		$html
		
		" . (($hide_form == 0) ? ("
		<fieldset class='submit'>
			<input type='submit' class='input_submit' name='submit' value='{$this->lang->words['ucp__save_changes']}' /> {$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab={$current_tab}&amp;area={$current_area}", 'public','' ), "", "" ) . "' title='{$this->lang->words['cancel_edit']}' class='cancel'>{$this->lang->words['cancel']}</a>
		</fieldset>
		") : ("")) . "
	</div>
</div>
" . (($hide_form == 0) ? ("
</form>
") : ("")) . "";
return $IPBHTML;
}


function __f__d56c673e0548c7a8eeb9357cd58893d1($current_tab, $html, $tabs, $current_area, $errors=array(), $hide_form=0, $maxUpload=0)
{
	$_ips___x_retval = '';
	foreach( $tabs as $tab_app => $tab )
	{
		
		$_ips___x_retval .= "
		" . (($tab_app == $current_tab) ? ("
			<li class='active'>{$tab['_name']}</li>
		") : ("
			<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=usercp&amp;tab={$tab_app}", 'publicWithApp','' ), "", "" ) . "\" title=\"{$this->lang->words['settings_for_ucp']} {$tab['_name']}\">{$tab['_name']}</a></li>
		")) . "
	
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__92e07c01d6df6f93f9677a030cfbd8a8($current_tab, $html, $tabs, $current_area, $errors=array(), $hide_form=0, $maxUpload=0)
{
	$_ips___x_retval = '';
	foreach( $tabs[ $current_tab ]['_menu'] as $idx => $item )
	{
		
		$_ips___x_retval .= "
				" . (($item['area'] == $current_area) ? ("
					<li class='active'>{$item['title']}</li>
				") : ("
					<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=usercp&amp;tab={$current_tab}&amp;{$item['url']}", 'publicWithApp','' ), "", "" ) . "\">{$item['title']}</a></li>
				")) . "
			
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__7d6ff6cf778678bd847f6e4de3209156($current_tab, $html, $tabs, $current_area, $errors=array(), $hide_form=0, $maxUpload=0)
{
	$_ips___x_retval = '';
	foreach( $errors as $error )
	{
		
		$_ips___x_retval .= "
					$error<br />
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- watchChoices --*/
function watchChoices($forum="",$topic="",$method="") {
$IPBHTML = "";
$IPBHTML .= "<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=forums&amp;area=watch&amp;watch=$method&amp;do=saveWatch", 'public','' ), "", "" ) . "\" method=\"post\" name=\"REPLIER\">
<input type=\"hidden\" name=\"auth_key\" value=\"{$this->member->form_hash}\" />
<input type=\"hidden\" name=\"tid\" value=\"{$topic['tid']}\" />
<input type=\"hidden\" name=\"fid\" value=\"{$forum['id']}\" />
<input type=\"hidden\" name=\"st\" value=\"{$this->request['st']}\" />
<fieldset class='row1'>
	" . (($topic['tid'] != '') ? ("
		<h3>{$this->lang->words['subs_c_title']} {$this->lang->words['subs_for']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topic['tid']}&amp;st={$this->request['st']}", 'public','' ), "{$topic['title_seo']}' base=", "showtopic' seotitle='{$topic['title_seo']}' base=" ) . "' title='{$this->lang->words['topic_title']}'>{$topic['title']}</a></h3>
		<br />
		<p class='message unspecific'>{$this->lang->words['subs_exp_text']}</p>
	") : ("
		<h3>{$this->lang->words['subs_c_title']} {$this->lang->words['subs_for']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$forum['id']}", 'public','' ), "{$forum['name_seo']}", "showforum" ) . "'>{$forum['name']}</a></h3>
		<br />
		<p class='message unspecific'>{$this->lang->words['subsf_exp_text']}</p>
	")) . "
	
	<ul>
		<li class='field checkbox'>
			<input class='input_radio' type=\"radio\" id='email_none' name=\"emailtype\" value=\"none\" />
			" . (($topic['tid'] != '') ? ("
				<label for='email_none'><strong>{$this->lang->words['subs_none_title']}</strong></label>
				<span class='desc'>{$this->lang->words['subs_none_desc']}</span>
			") : ("
				<label for='email_none'><strong>{$this->lang->words['subsf_none_title']}</strong></label>
				<span class=\"desc\">{$this->lang->words['subsf_none_desc']}</span>
			")) . "
		</li>
		<li class='field checkbox'>
			<input class='input_radio' type=\"radio\" id='email_delayed' name=\"emailtype\" value=\"delayed\" checked=\"checked\" />
			" . (($topic['tid'] != '') ? ("
				<label for='email_delayed'><strong>{$this->lang->words['subs_delayed']}</strong></label>
				<span class=\"desc\">{$this->lang->words['subs_delayed_desc']}</span>
			") : ("
				<label for='email_delayed'><strong>{$this->lang->words['subsf_delayed']}</strong></label>
				<span class=\"desc\">{$this->lang->words['subsf_delayed_desc']}</span>
			")) . "
		</li>
		<li class='field checkbox'>
			<input class='input_radio' type=\"radio\" id='email_immediate' name=\"emailtype\" value=\"immediate\" />
			" . (($topic['tid'] != '') ? ("
				<label for='email_immediate'><strong>{$this->lang->words['subs_immediate']}</strong></label>
				<span class=\"desc\">{$this->lang->words['subs_immediate_desc']}</span>
			") : ("
				<label for='email_immediate'><strong>{$this->lang->words['subsf_immediate']}</strong></label>
				<span class=\"desc\">{$this->lang->words['subsf_immediate_desc']}</span>
			")) . "
		</li>
		<li class='field checkbox'>
			<input class='input_radio' type=\"radio\" id='email_daily' name=\"emailtype\" value=\"daily\" />
			" . (($topic['tid'] != '') ? ("
				<label for='email_daily'><strong>{$this->lang->words['subs_daily']}</strong></label>
				<span class=\"desc\">{$this->lang->words['subs_daily_desc']}</span>
			") : ("
				<label for='email_daily'><strong>{$this->lang->words['subsf_daily']}</strong></label>
				<span class=\"desc\">{$this->lang->words['subsf_daily_desc']}</span>
			")) . "
		</li>
		<li class='field checkbox'>
			<input class='input_radio' type=\"radio\" id='email_weekly' name=\"emailtype\" value=\"weekly\" />
			" . (($topic['tid'] != '') ? ("
				<label for='email_weekly'><strong>{$this->lang->words['subs_weekly']}</strong></label>
				<span class=\"desc\">{$this->lang->words['subs_weekly_desc']}</span>
			") : ("
				<label for='email_weekly'><strong>{$this->lang->words['subsf_weekly']}</strong></label>
				<span class=\"desc\">{$this->lang->words['subsf_weekly_desc']}</span>
			")) . "
		</li>
	</ul>
</fieldset>

<fieldset class='submit'>
	<input type=\"submit\" value=\"{$this->lang->words['subs_submit']}\" class=\"input_submit\" /> {$this->lang->words['or']}
	" . (($topic['tid'] != '') ? ("
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topic['tid']}", 'public','' ), "{$topic['title_seo']}", "showtopic" ) . "' title='{$this->lang->words['cancel']}' class='cancel'>{$this->lang->words['cancel']}</a>
	") : ("
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$forum['id']}", 'public','' ), "{$forum['name_seo']}", "showforum" ) . "' title='{$this->lang->words['cancel']}' class='cancel'>{$this->lang->words['cancel']}</a>
	")) . "
</fieldset>
</form>";
return $IPBHTML;
}

/* -- watchedForums --*/
function watchedForums($forumArray) {
$IPBHTML = "";
$IPBHTML .= "<br />
<div class='row1'>
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=forums&amp;area=updateWatchForums&amp;do=saveIt", 'public','' ), "", "" ) . "\" id=\"checkBoxForm\" method=\"post\">
	<input type=\"hidden\" name=\"authKey\" value=\"{$this->member->form_hash}\" />
	" . ((is_array( $forumArray ) AND count( $forumArray )) ? ("
		".$this->__f__f2d93d756568a0f1c6123a9148c41aa6($forumArray)."	") : ("
		<p class='no_messages'>{$this->lang->words['forum_subs_none']}</p>
	")) . "
	" . ((count($forumArray)) ? ("
		<div class='moderation_bar rounded with_action'>
			<select name=\"trackchoice\">
				<option value=\"unsubscribe\">{$this->lang->words['subs_delete']}</option>
				<option value=\"none\">{$this->lang->words['subs_c_change']} {$this->lang->words['subsf_none_title']}</option>
				<option value=\"immediate\">{$this->lang->words['subs_c_change']} {$this->lang->words['subsf_immediate']}</option>
				<option value=\"delayed\">{$this->lang->words['subs_c_change']} {$this->lang->words['subsf_delayed']}</option>
				<option value=\"daily\">{$this->lang->words['subs_c_change']} {$this->lang->words['subsf_daily']}</option>
				<option value=\"weekly\">{$this->lang->words['subs_c_change']} {$this->lang->words['subsf_weekly']}</option>
			</select>&nbsp;&nbsp;
			<input type=\"submit\" class=\"input_submit alt\" value=\"{$this->lang->words['with_selected']}\" />
		</div>
	") : ("")) . "
</form>
</div>";
return $IPBHTML;
}


function __f__755d394111aa51966fc9d0f2c8b4be8d($forumArray,$parentID='',$catData='')
{
	$_ips___x_retval = '';
	foreach( $catData['_forums'] as $forumID => $data )
	{
		
		$_ips___x_retval .= "
					<tr class='" .  IPSLib::next( $this->registry->templateStriping["forums"] ) . "'>
						<td class=\"altrow short\">" . $this->registry->getClass('output')->getReplacement("{$data['folder_icon']}") . "</td>
						<td>
							<strong><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$data['id']}", 'public','' ), "{$data['name_seo']}", "showforum" ) . "\">{$data['name']}</a></strong><br />
							<span class=\"desc\">
								{$data['description']}
								<br />
								{$this->lang->words['subs_c_type']}: {$this->lang->words[ $data['_type'] ]}
								" . (($data['_newTopics']) ? ("
									<strong><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$data['id']}&amp;show=sinceLastVisit", 'public','' ), "{$data['name_seo']}", "showforum" ) . "\">{$data['_newTopics']} {$this->lang->words['ucp_reply_since']}</a></strong>
								") : ("")) . "
							</span>
						</td>
						<td class=\"short altrow\">{$data['topics']}</td>
						<td class=\"short altrow\">{$data['posts']}</td>
						<td>
							" . $this->registry->getClass('class_localization')->getDate($data['last_post'],"long", 0) . "<br />{$this->lang->words['in']}
							" . (($data['password']) ? ("
								{$this->lang->words['f_none']}
							") : ("
								<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$data['last_id']}&amp;view=getlastpost", 'public','' ), "{$data['seo_last_title']}", "showtopic" ) . "'>{$data['last_title']}</a>
							")) . "
							<br />{$this->lang->words['by']}
							" . ((isset($data['last_poster_name'])) ? ("" . (($data['last_poster_id']) ? ("
									<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$data['last_poster_id']}", 'public','' ), "{$data['seo_last_name']}", "showuser" ) . "'>{$data['last_poster_name']}</a> " . $this->registry->getClass('output')->getTemplate('global')->user_popup($data['last_poster_id']) . "
								") : ("
									{$data['last_poster_name']}
								")) . "") : ("
								{$this->lang->words['f_none']}
							")) . "
						</td>
						<td class=\"short altrow\"><input class='input_check checkall_{$parentID}' type=\"checkbox\" name=\"forumIDs[{$data['id']}]\" value=\"1\" /></td>
					</tr>
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__f2d93d756568a0f1c6123a9148c41aa6($forumArray)
{
	$_ips___x_retval = '';
	foreach( $forumArray as $parentID => $catData )
	{
		
$this->registry->templateStriping['forums'] = array( FALSE, "row1","row2");

		$_ips___x_retval .= "
			<h3 class='maintitle'>{$catData['_data']['name']}</h3>
			<table class='ipb_table' summary=\"{$this->lang->words['ucp_watched_forums']}\">
				<tr class='header'>
					<th scope='col' width=\"5%\">&nbsp;</th>
					<th scope='col' width=\"50%\">{$this->lang->words['ft_forum']}</th>
					<th scope='col' align=\"center\" width=\"5%\">{$this->lang->words['ft_topics']}</th>
					<th scope='col' align=\"center\" width=\"5%\">{$this->lang->words['ft_posts']}</th>
					<th scope='col' align=\"center\" width=\"35%\">{$this->lang->words['ft_last_post']}</th>
					<th scope='col' align=\"center\" width=\"5%\" class='short'><input id=\"checkAllForums_{$parentID}\" type=\"checkbox\" value=\"{$this->lang->words['check_all']}\" /><!-- SKINNOTE: add check all functionality back --></th>
				</tr>
								".$this->__f__755d394111aa51966fc9d0f2c8b4be8d($forumArray,$parentID,$catData)."			</table>
			<script type='text/javascript'>
				ipb.global.registerCheckAll('checkAllForums_{$parentID}', 'checkall_{$parentID}');
			</script>
			<br />
		
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- watchedTopics --*/
function watchedTopics($mainForumArray, $dateCut) {
$IPBHTML = "";
$IPBHTML .= "<fieldset class='row1'>
	<h3 class='maintitle'>{$this->lang->words['subs_header']}</h3>
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=forums&amp;area=updateWatchTopics&amp;do=saveIt", 'public','' ), "", "" ) . "\" id=\"checkBoxForm\" method=\"post\">
	<table class='ipb_table' summary=\"{$this->lang->words['ucp_user_attach']}\">
		<tr class='header'>
			<th scope='col' style='width: 5%'>&nbsp;</th>
			<th scope='col' style='width: 50%'>{$this->lang->words['subs_topic']}</th>
			<th scope='col' style='width: 5%' class='short'>{$this->lang->words['subs_replies']}</th>
			<th scope='col' style='width: 5%' class='short'>{$this->lang->words['subs_view']}</th>
			<th scope='col' style='width: 30%' class='short'>{$this->lang->words['subs_last_post']}</th>
			<th scope='col' style='width: 5%' class='short'><input class='checkbox' id=\"checkAllTopics\" type=\"checkbox\" value=\"{$this->lang->words['check_all']}\" /><!-- SKINNOTE: Add select all back --></th>
		</tr>
		" . ((is_array( $mainForumArray ) AND count( $mainForumArray )) ? ("
			".$this->__f__22fa2343567c9e919431a315f13b5713($mainForumArray,$dateCut)."		") : ("
			<tr>
				<td class=\"row2 short\" colspan=\"6\">{$this->lang->words['subs_none']}</td>
			</tr>
		")) . "
	</table>
" . ((count($mainForumArray)) ? ("
	<div class='moderation_bar with_action rounded'>
		<select name=\"trackchoice\">
			<option value=\"unsubscribe\">{$this->lang->words['subs_delete']}</option>
			<option value=\"none\">{$this->lang->words['subs_c_change']} {$this->lang->words['subs_none_title']}</option>
			<option value=\"immediate\">{$this->lang->words['subs_c_change']} {$this->lang->words['subs_immediate']}</option>
			<option value=\"delayed\">{$this->lang->words['subs_c_change']} {$this->lang->words['subs_delayed']}</option>
			<option value=\"daily\">{$this->lang->words['subs_c_change']} {$this->lang->words['subs_daily']}</option>
			<option value=\"weekly\">{$this->lang->words['subs_c_change']} {$this->lang->words['subs_weekly']}</option>
		</select>&nbsp;&nbsp;
		<input type=\"hidden\" name=\"authKey\" value=\"{$this->member->form_hash}\" />
		<input type=\"submit\" class=\"input_submit alt\" value=\"{$this->lang->words['with_selected']}\" />
	</div>
") : ("")) . "
</form>
<p style='text-align: right; padding: 5px;'>
	" . (($this->settings['subs_autoprune'] > 0) ? ("
		" . sprintf( $this->lang->words['auto_prune'], $this->settings['subs_autoprune'] ) . "
	") : ("
		{$this->lang->words['no_auto_prune']}
	")) . "
</p>
<div class='filter_bar rounded'>
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=forums&amp;area=topicsubs", 'public','' ), "", "" ) . "\" method=\"post\">
		<fieldset>
			
			{$this->lang->words['show_topics_from']}
			<select name=\"datecut\">
			<option value='1'>{$this->lang->words['subs_today']}</option>
			".$this->__f__5b90bb0f193e65cc13ac765f15dd3a4a($mainForumArray,$dateCut)."			" . (($dateCut == 1000) ? ("
				<option value='1000' selected='selected'>{$this->lang->words['subs_all']}</option>
			") : ("
				<option value='1000'>{$this->lang->words['subs_all']}</option>
			")) . "
			</select>
			<input type=\"submit\" class='input_submit alt' value=\"{$this->lang->words['jmp_go']}\" />
		</fieldset>
 	</form>
</div>
</fieldset>
<script type='text/javascript'>
	ipb.global.registerCheckAll( 'checkAllTopics', 'checkall' );
</script>";
return $IPBHTML;
}


function __f__8951b403bec5b526de442e6bdf921dac($mainForumArray, $dateCut,$id='',$data='')
{
	$_ips___x_retval = '';
	foreach( $mainForumArray[ $id ]['_topics'] as $topicID => $topicData )
	{
		
		$_ips___x_retval .= "
						<tr>
							<td class=\"row1 short\">" . $this->registry->getClass('output')->getReplacement("{$topicData['folder_img']}") . "</td>
							<td class=\"row1\">
								<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topicData['tid']}", 'public','' ), "{$topicData['title_seo']}", "showtopic" ) . "\">{$topicData['title']}</a><br />
				  				<span class=\"desc\">
									{$topicData['description']}
									" . (($topicData['description']) ? ("
										<br />
									") : ("")) . "
									{$this->lang->words['subs_start']} " . $this->registry->getClass('class_localization')->getDate($topicData['track_started'],"long", 0) . "
				  					<br />
				  					{$this->lang->words['subs_c_type']}: {$this->lang->words[ $topicData['_type'] ]}
				  				</span>
				  			</td>
				  			<td class=\"row1 short\">{$topicData['posts']}</td>
				  			<td class=\"row1 short\">{$topicData['views']}</td>
				  			<td class=\"row1\">" . $this->registry->getClass('class_localization')->getDate($topicData['_last_post'],"long", 0) . "<br />{$this->lang->words['subs_by']} {$topicData['last_poster']}</td>
				  			<td class=\"row1 short\"><input class='input_check checkall' type=\"checkbox\" name=\"topicIDs[{$topicData['topic_id']}]\" value=\"1\" /></td>
				  		</tr>
					
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__22fa2343567c9e919431a315f13b5713($mainForumArray, $dateCut)
{
	$_ips___x_retval = '';
	foreach( $mainForumArray as $id => $data )
	{
		
$this->registry->templateStriping['topics'] = array( FALSE, "row1","row2");

		$_ips___x_retval .= "
				<tr class='subhead altbar'>
					<th colspan=\"6\">{$data['forum_name']}</th>
				</tr>
				" . ((is_array( $mainForumArray[ $id ]['_topics'] )) ? ("
										".$this->__f__8951b403bec5b526de442e6bdf921dac($mainForumArray,$dateCut,$id,$data)."				") : ("")) . "
			
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__5b90bb0f193e65cc13ac765f15dd3a4a($mainForumArray, $dateCut)
{
	$_ips___x_retval = '';
	foreach( array( 1,7,14,21,30,60,90,365 ) as $day )
	{
		
		$_ips___x_retval .= "
				" . (($day == $dateCut) ? ("
					<option value='$day' selected=\"selected\">" . sprintf( $this->lang->words['subs_day'], $day ) . "</option>
				") : ("
					<option value='$day'>" . sprintf( $this->lang->words['subs_day'], $day ) . "</option>
				")) . "
			
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}



}

/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>