<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 3               */
/* CACHE FILE: Generated: Sun, 06 Sep 2009 04:32:25 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_profile_3 {

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	/* Make object */
	$this->registry   =  $registry;
	$this->DB         =  $this->registry->DB();
	$this->settings   =& $this->registry->fetchSettings();
	$this->request    =& $this->registry->fetchRequest();
	$this->lang       =  $this->registry->getClass('class_localization');
	$this->member     =  $this->registry->member();
	$this->memberData =& $this->registry->member()->fetchMemberData();
	$this->cache      =  $this->registry->cache();
	$this->caches     =& $this->registry->cache()->fetchCaches();
}
	/* -- customField__gender --*/
function customField__gender($f) {
$IPBHTML = "";
$IPBHTML .= "<dt>{$f->raw_data['pf_title']}</dt>
<dd>
" . (($f->value) ? ("" . (($f->value == 'm') ? ("
		<img src='{$this->settings['img_url']}/profile/male.png' alt='' /> {$this->lang->words['js_gender_male']}
	") : ("")) . "
	
	" . (($f->value == 'f') ? ("
		<img src='{$this->settings['img_url']}/profile/female.png' alt='' /> {$this->lang->words['js_gender_female']}
	") : ("")) . "
	
	" . (($f->value =='u') ? ("
		<img src='{$this->settings['img_url']}/profile/mystery.png' alt='' /> {$this->lang->words['js_gender_mystery']}
	") : ("")) . "") : ("
	{$this->lang->words['m_no_gender']}
")) . "
</dd>";
return $IPBHTML;
}

/* -- customField__generic --*/
function customField__generic($f) {
$IPBHTML = "";
$IPBHTML .= "" . (($f->parsed != '') ? ("<dt>{$f->raw_data['pf_title']}:</dt>
	<dd>
		" . ((is_array($f->parsed)) ? ("
			" . implode( '<br />', $f->parsed ) . "
		") : ("
			{$f->parsed}
		")) . "
	</dd>") : ("")) . "";
return $IPBHTML;
}

/* -- customFieldGroup__contact --*/
function customFieldGroup__contact($f) {
$IPBHTML = "";
$IPBHTML .= "" . (($f->parsed) ? ("<dt>{$f->raw_data['pf_title']}</dt>
<dd>
	" . (($f->raw_data['pf_icon']) ? ("<img src='{$this->settings['public_dir']}/{$f->raw_data['pf_icon']}' alt='{$f->raw_data['pf_title']}' />&nbsp;") : ("")) . "
	" . ((is_array( $f->parsed )) ? ("
		".$this->__f__ab402c0e6c15d3e49323744fa76acd5e($f)."	") : ("" . (($f->raw_data['pf_key'] == 'aim') ? ("
			<a class='url' href='aim:goim?screenname={$f->parsed}'>{$f->parsed}</a>
		") : ("" . (($f->raw_data['pf_key'] == 'msn') ? ("
				<a class='url' href='msnim:chat?contact={$f->parsed}'>{$f->parsed}</a>
			") : ("" . (($f->raw_data['pf_key'] == 'yahoo') ? ("
					<a class='url' href='ymsgr:sendIM?{$f->parsed}'>{$f->parsed}</a>
				") : ("" . (($f->raw_data['pf_key'] == 'icq') ? ("
						<a class='url' type=\"application/x-icq\" href='http://www.icq.com/people/cmd.php?uin={$f->parsed}&amp;action=message'>{$f->parsed}</a>
					") : ("" . (($f->raw_data['pf_key'] == 'website') ? ("
							<a class='url uid' rel=\"me\" href='{$f->parsed}'>{$f->parsed}</a>
						") : ("" . (($f->raw_data['pf_key'] == 'jabber') ? ("
								<a class='url' href='xmpp:{$f->parsed}'>{$f->parsed}</a>
							") : ("" . (($f->raw_data['pf_key'] == 'skype') ? ("
									<a class='url' href='skype:{$f->parsed}?call'>{$f->parsed}</a>
								") : ("
									{$f->parsed}
								")) . "")) . "")) . "")) . "")) . "")) . "")) . "")) . "
</dd>") : ("")) . "";
return $IPBHTML;
}


function __f__ab402c0e6c15d3e49323744fa76acd5e($f)
{
	$_ips___x_retval = '';
	foreach( $f->parsed as $value )
	{
		
		$_ips___x_retval .= "
			{$value}
		
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- dnameWrapper --*/
function dnameWrapper($member_name="",$records=array()) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- friendsIframe --*/
function friendsIframe($member, $friends, $showWrapper=false) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- friendsList --*/
function friendsList($friends, $pages) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- profileModern --*/
function profileModern($tabs=array(), $member=array(), $comments="", $friends=array(), $visitors=array(), $default_tab='posts', $default_tab_content='', $fields=null) {
$IPBHTML = "";
$IPBHTML .= "<div class='vcard'>
	<h2 class='maintitle'>
		<span class='left'><span class=\"fn nickname\">{$member['members_display_name']}</span>{$this->lang->words['m_profile_title']}</span>
	</h2>
	
	<div id='profile_overview' class='left'>
		<div class='personal_info clear general_box alt'>
			<img class=\"photo\" src='{$member['pp_main_photo']}' alt=\"{$member['members_display_name']}'s {$this->lang->words['photo_title']}\"  />
		</div>
		<div class='info'>
			<dl>
				<dt>{$this->lang->words['m_group']}</dt>
				<dd>{$member['g_title']}</dd>
				<dt>{$this->lang->words['m_posts']}</dt>
				<dd " . ((!$this->settings['disable_profile_stats']) ? ("title='{$member['_total_pct']}% {$this->lang->words['total_percent']}'") : ("")) . ">" . $this->registry->getClass('class_localization')->formatNumber( $member['posts'] ) . "" . ((!$this->settings['disable_profile_stats']) ? (" ({$member['_posts_day']} {$this->lang->words['posts_per_day']})") : ("")) . "</dd>
				" . ((!$this->settings['disable_profile_stats'] AND $member['favorite_id']) ? ("
					<dt>{$this->lang->words['m_active_in']}</dt>
					<dd title='{$member['_fav_percent']}% {$this->lang->words['fav_percent']}'>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$member['favorite_id']}", 'public','' ), "{$this->registry->class_forums->forum_by_id[ $member['favorite_id'] ]['name_seo']}", "showforum" ) . "'>{$this->registry->class_forums->forum_by_id[ $member['favorite_id'] ]['name']}</a> ({$member['_fav_posts']} {$this->lang->words['fav_posts']})
					</dd>
				") : ("")) . "
				<dt>{$this->lang->words['m_member_since']}</dt>
				<dd>" . $this->registry->getClass('class_localization')->getDate($member['joined'],"joined", 0) . "</dd>
				<dt>{$this->lang->words['m_profile_views']}</dt>
				<dd>" . $this->registry->getClass('class_localization')->formatNumber( $member['members_profile_views'] ) . "</dd>
				<dt>{$this->lang->words['m_last_active']}</dt>
				<dd>" . (($member['_online']) ? ("" . $this->registry->getClass('output')->getReplacement("user_online") . "") : ("" . $this->registry->getClass('output')->getReplacement("user_offline") . "")) . " {$member['_last_active']}</dd>
				<dt>{$this->lang->words['m_currently']}</dt>
				<dd>" . (($member['_online']) ? ("
						{$member['online_extra']}
					") : ("
						{$this->lang->words['online_offline']}
					")) . "
				</dd>
			</dl>
		</div>
	</div>
	<div id='main_profile_body' class='right'>
		<div class='about_contact'>
			<div class='about_info left general_box row2'>
				<h3 class='bar'>{$this->lang->words['my_info']}</h3>
				<dl>
					" . (($member['title'] != '') ? ("
						<dt>{$this->lang->words['m_member_title']}</dt>
						<dd>{$member['title']}</dd>
					") : ("")) . "
					<dt>{$this->lang->words['m_age_prefix']}</dt>
					" . (($member['_age'] > 0) ? ("
						<dd>{$member['_age']} {$this->lang->words['m_years_old']}</dd>
					") : ("
						<dd>{$this->lang->words['m_age_unknown']}</dd>
					")) . "
					<dt>{$this->lang->words['m_birthday_prefix']}</dt>
					" . (($member['bday_day']) ? ("<!-- SKINNOTE: We should use the localized date formatting for this -->
						<dd>{$member['_bday_month']} {$member['bday_day']}" . (($member['bday_year']) ? (", {$member['bday_year']}") : ("")) . "</dd>") : ("
						<dd>{$this->lang->words['m_bday_unknown']}</dd>
					")) . "
					<!-- SKINNOTE: Gender is now a custom profile field...-->
					{$member['custom_fields']['profile_info']['gender']}
				</dl>
			</div>
	
			<div class='contact_info right general_box row2'>
				<h3 class='bar'>{$this->lang->words['contact_info']}</h3>
				<dl>
					<dt>{$this->lang->words['m_email']}</dt>
					<dd>
						" . ((!$member['hide_email']) ? ("
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=contact&amp;do=Mail&amp;MID={$member['member_id']}", 'public','' ), "", "" ) . "'>{$this->lang->words['click_to_email']}</a>
						") : ("
							<em>{$this->lang->words['private']}</em>
						")) . "						
					</dd>
	
					" . ((is_array( $member['custom_fields']['contact'])) ? ("
						".$this->__f__fdfddf0321ecb5f9f475f51667542be6($tabs,$member,$comments,$friends,$visitors,$default_tab,$default_tab_content,$fields)."					") : ("")) . "
				</dl>
			</div>
		</div>
	</div>
</div>";
return $IPBHTML;
}


function __f__fdfddf0321ecb5f9f475f51667542be6($tabs=array(), $member=array(), $comments="", $friends=array(), $visitors=array(), $default_tab='posts', $default_tab_content='', $fields=null)
{
	$_ips___x_retval = '';
	foreach( $member['custom_fields']['contact'] as $field )
	{
		
		$_ips___x_retval .= "
							{$field}
						
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- showCard --*/
function showCard($member, $download=0) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- showComments --*/
function showComments($member, $comments=array(), $new_id=0, $return_msg='', $links='') {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- showIframeComments --*/
function showIframeComments($member, $comments, $pages) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- showPhoto --*/
function showPhoto($member) {
$IPBHTML = "";
$IPBHTML .= "<div id=\"photowrap\">
	<div id=\"phototitle\">{$member['members_display_name']}</div>
	<div id=\"photoimg\"><img src=\"{$member['pp_main_photo']}\" alt=\"{$this->lang->words['get_photo']}\" width='{$member['pp_main_width']}' height='{$member['pp_main_height']}' /></div>
</div>";
return $IPBHTML;
}

/* -- tabAboutMe --*/
function tabAboutMe($member=array()) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- tabNoContent --*/
function tabNoContent($langkey) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- tabPosts --*/
function tabPosts($content) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- tabSingleColumn --*/
function tabSingleColumn($row=array(), $read_more_link='', $url='', $title='') {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- tabTopics --*/
function tabTopics($content) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}



}

/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>