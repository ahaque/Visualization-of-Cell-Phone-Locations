<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 3               */
/* CACHE FILE: Generated: Sun, 06 Sep 2009 04:32:25 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_register_3 {

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	/* Make object */
	$this->registry   =  $registry;
	$this->DB         =  $this->registry->DB();
	$this->settings   =& $this->registry->fetchSettings();
	$this->request    =& $this->registry->fetchRequest();
	$this->lang       =  $this->registry->getClass('class_localization');
	$this->member     =  $this->registry->member();
	$this->memberData =& $this->registry->member()->fetchMemberData();
	$this->cache      =  $this->registry->cache();
	$this->caches     =& $this->registry->cache()->fetchCaches();
}
	/* -- completePartialLogin --*/
function completePartialLogin($mid="",$key="",$custom_fields="",$errors="", $reg="") {
$IPBHTML = "";
$IPBHTML .= "" . ((isset( $errors ) && $errors) ? ("
	<p class='message error'>
		<strong>{$this->lang->words['errors_found']}</strong><br />
		{$errors}
	</p>
") : ("")) . "
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=global&amp;section=register&amp;do=complete_login_do&amp;key=$key&amp;mid=$mid", 'public','' ), "", "" ) . "\" method=\"POST\">
	<input type=\"hidden\" name=\"termsread\" value=\"1\" />
	<input type=\"hidden\" name=\"agree_to_terms\" value=\"1\" />
	
	<h2>{$this->lang->words['clogin_title']}</h2>
	<p class='message'>{$this->lang->words['clogin_text']}</p>
	<br />
	<div class='post_form'>
		<h3 class='bar'>{$this->lang->words['complete_form']}</h3>
		" . (($this->settings['auth_allow_dnames'] == 1) ? ("
			<fieldset class='row2'>
				<ul>
					<li class='field'>
						<label for='dname'>{$this->lang->words['dname_name']}</label>
						<input id='dname' type=\"text\" size=\"50\" maxlength=\"64\" value=\"{$this->request['members_display_name']}\" name=\"members_display_name\" />
					</li>
				</ul>
			</fieldset>
		") : ("")) . "
		" . ((! $reg['partial_email_ok']) ? ("
			<fieldset class='row1'>
				<ul>
					<li class='field'>
						<label for='email'>{$this->lang->words['email_address']}</label>
						<input id='email' type=\"text\" size=\"25\" maxlength=\"50\" value=\"{$this->request['EmailAddress']}\" name=\"EmailAddress\" />
					</li>
					<li class='field'>
						<label for='email_confirm'>{$this->lang->words['email_address_confirm']}</label>
						<input id='email_confirm' type=\"text\" size=\"25\" maxlength=\"50\"  value=\"{$this->request['EmailAddress_two']}\" name=\"EmailAddress_two\" />
					</li>
				</ul>
			</fieldset>
		") : ("")) . "
		<fieldset class='submit'>
			<input type='submit' value='{$this->lang->words['clogin_submit']}' class='input_submit' />
		</fieldset>
	</div>
	" . (($custom_fields != '') ? ("
		<!-- SKINNOTE: need to add custom fields in too -->
	") : ("")) . "
</form>";
return $IPBHTML;
}

/* -- lostPasswordForm --*/
function lostPasswordForm($errors="") {
$IPBHTML = "";
$IPBHTML .= "<h2>{$this->lang->words['lost_pass_form']}</h2>
" . ((isset( $errors ) && $errors) ? ("
	<p class='message error'>
		<strong>{$this->lang->words['errors_found']}</strong><br />
		{$errors}
	</p>
") : ("")) . "
<p class='message unspecific'>
	{$this->lang->words['lost_your_password']}
	{$this->lang->words['lp_text']}
</p>
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&module=global&section=lostpass", 'public','' ), "", "" ) . "\" method=\"post\">
<input type=\"hidden\" name=\"do\" value=\"" . (($this->settings['lp_method'] == 'choose') ? ("sendform") : ("11")) . "\" />
<div class='generic_bar'></div>
<div id='lost_pass_form' class='post_form'>
	<fieldset>
		<h3 class='bar'>{$this->lang->words['recover_password']}</h3>
		<ul>
			<li class='field'>
				<label for='member_name'>{$this->lang->words['lp_user_name']}</label>
				<input type=\"text\" size=\"32\" name=\"member_name\" id='member_name' class='input_text' />
			</li>
			<li class='field'>
				<label for='email_addy'>{$this->lang->words['lp_email_or']}</label>
				<input type=\"text\" size=\"32\" name=\"email_addy\" id='email_addy' class='input_text' />
			</li>
		</ul>
	</fieldset>
	<!--{REG.ANTISPAM}-->
	<fieldset class='submit'>
			<input class='input_submit' type=\"submit\" value=\"{$this->lang->words['lp_send']}\" /> or <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "", 'public','' ), "", "" ) . "' title='{$this->lang->words['cancel']}' class='cancel'>{$this->lang->words['cancel']}</a>
	</fieldset>
</div>
</form>";
return $IPBHTML;
}

/* -- lostPasswordWait --*/
function lostPasswordWait($member="") {
$IPBHTML = "";
$IPBHTML .= "<h2>{$this->lang->words['lpf_title']}</h2>
<p class='message'>
	{$this->lang->words['lpass_text']}
</p>";
return $IPBHTML;
}

/* -- registerCoppaForm --*/
function registerCoppaForm() {
$IPBHTML = "";
$IPBHTML .= "<html>
	<head>
		<meta http-equiv=\"content-type\" content=\"text/html; charset=<% CHARSET %>\" />
		<title>{$this->lang->words['cpf_title']}</title>
	</head>
	
	<body>
	<h2>{$this->settings['board_name']}: {$this->lang->words['cpf_title']}</h2>
	" . (($this->settings['coppa_consent_extra']) ? ("
		<div>
			<b>{$this->lang->words['coppa_additional_info']}</b>
			<div>{$this->settings['coppa_consent_extra']}</div>
		</div>
	") : ("")) . "
	<hr />
	<div>
		<b>{$this->lang->words['cpf_perm_parent']}</b>
		<div style='padding:8px;'>{$this->lang->words['cpf_fax']} <u>{$this->settings['coppa_fax']}</u></div>
		<div style='padding:8px;'>{$this->lang->words['cpf_address']}<br />
			<address>{$this->settings['coppa_address']}</address>
		</div>
	</div>
	<hr />
	<div>	
		<table class='ipbtable' cellspacing=\"1\" cellpadding='8'>
			<tr>
				<td width=\"40%\">{$this->lang->words['user_name']}</td>
				<td style='text-decoration:underline;'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
			</tr>
			<tr>
				<td width=\"40%\">{$this->lang->words['password']}</td>
				<td style='text-decoration:underline;'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
			</tr>
			<tr>
				<td width=\"40%\">{$this->lang->words['email_address']}</td>
				<td style='text-decoration:underline;'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
			</tr>
		</table>
	</div>
	<hr />
	<div>
		<b>{$this->lang->words['cpf_sign']}</b>
	</div>
	<br />
	<div>
		<table class='ipbtable' cellspacing=\"1\" cellpadding='8'>
			<tr>
				<td width=\"40%\">{$this->lang->words['cpf_name']}</td>
				<td style='text-decoration:underline;'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
			</tr>
			<tr>
				<td width=\"40%\">{$this->lang->words['cpf_relation']}</td>
				<td style='text-decoration:underline;'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
			</tr>
			<tr>
				<td width=\"40%\">{$this->lang->words['cpf_signature']}</td>
				<td style='text-decoration:underline;'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
			</tr>
			<tr>
				<td width=\"40%\">{$this->lang->words['cpf_email']}</td>
				<td style='text-decoration:underline;'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
			</tr>
			<tr>
				<td width=\"40%\">{$this->lang->words['cpf_phone']}</td>
				<td style='text-decoration:underline;'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
			</tr>
			<tr>
				<td width=\"40%\">{$this->lang->words['cpf_date']}</td>
				<td style='text-decoration:underline;'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
			</tr>
		</table>
	</div>
	<hr />
	<div><b>{$this->lang->words['coppa_admin_reminder']}</b>
		<div>{$this->lang->words['coppa_admin_remtext']}</div>
	</div>
	</body>
</html>";
return $IPBHTML;
}

/* -- registerCoppaStart --*/
function registerCoppaStart() {
$IPBHTML = "";
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("register", "0" ) . "
<!--<script type=\"text/javascript\" src=\"{$this->settings['public_dir']}js/ipb_register.js\"></script>-->
<script type=\"text/javascript\">
//<![CDATA[
var coppa_bounce = '{$this->lang->words['coppa_bounce']}';
//coppa_check();
//]]>
</script>
<script language=\"JavaScript\" type=\"text/javascript\">
function contact_admin() {
  // Very basic spam bot stopper
  admin_email_one = '$ad_email_one';
  admin_email_two = '$ad_email_two';
  window.location = 'mailto:'+admin_email_one+'@'+admin_email_two+'?subject={$this->lang->words['coppa_email_subject']}';
}
</script>
<h2>Register</h2>
<p class='message unspecific'>
	{$this->lang->words['coppa_form_text']}
</p>
<form action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=global&amp;section=register&amp;do=coppa_two", 'public','' ), "", "" ) . "' method='post'>
	<div class='post_form'>
		<fieldset class='general_box'>
			<h3>{$this->lang->words['coppa_info']}</h3>
				<label for='month'>{$this->lang->words['coppa_link']}</label>
				<select name='m' class='input_select'>
				 	<option value='0'>{$this->lang->words['select_month']}</option>
			 		".$this->__f__9f524a2897e50a2e276b84109c080435()."				</select>
	
				<select name='d' class='input_select'>
			 		<option value='0'>{$this->lang->words['select_day']}</option>
			 		".$this->__f__b52ea3c449aee527f95cdae12b1b235c()."				</select>
	
				<select name='y' class='input_select'>
			 		<option value='0'>{$this->lang->words['select_year']}</option>
			 		".$this->__f__284ad88922615f3a4188120bd4d61853()."				</select>
		</fieldset>
		<fieldset class='submit'>
			<input type='submit' value='{$this->lang->words['coppa_continue_button']}' class='input_submit' /> or <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "", 'public','' ), "", "" ) . "' title='Cancel' class='cancel'>Cancel</a>
		</fieldset>
	</div>
</form>";
return $IPBHTML;
}


function __f__9f524a2897e50a2e276b84109c080435()
{
	$_ips___x_retval = '';
	foreach( array(1,2,3,4,5,6,7,8,9,10,11,12) as $month )
	{
		
		$_ips___x_retval .= "
			 			<option value='{$month}'>{$this->lang->words['M_' . $month ]}</option>
			 		
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__b52ea3c449aee527f95cdae12b1b235c()
{
	$_ips___x_retval = '';
	foreach( range(1,31) as $day )
	{
		
		$_ips___x_retval .= "
			 			<option value='{$day}'>{$day}</option>
			 		
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__284ad88922615f3a4188120bd4d61853()
{
	$_ips___x_retval = '';
	foreach( array_reverse(range( date('Y') - 130, date('Y') )) as $year )
	{
		
		$_ips___x_retval .= "
			 			<option value='{$year}'>{$year}</option>
			 		
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- registerCoppaTwo --*/
function registerCoppaTwo() {
$IPBHTML = "";
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("register", "0" ) . "
<h2>{$this->lang->words['cp2_title']}</h2>
<div class='general_box'>
	<h3 class='clear'>{$this->lang->words['coppa_form']}</h3>
	<p>
		{$this->lang->words['cp2_text']}<br /><br />
		<strong><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=global&amp;section=register&amp;do=12", 'public','' ), "", "" ) . "' title='Print form'>{$this->lang->words['coppa_clickhere']}</a></strong>
	</p>
	<p>
		<br />
		{$this->lang->words['coppa_form_text']} <a href=\"mailto:{$this->settings['email_in']}\">{$this->settings['email_in']}</a>
	</p>
	<p>
		<br />
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=global&amp;section=register&amp;do=coppa_one", 'public','' ), "", "" ) . "' title='{$this->lang->words['cancel']}' class='cancel'>&lt; {$this->lang->words['cancel']}</a>
	</p>	
</div>";
return $IPBHTML;
}

/* -- registerForm --*/
function registerForm($general_errors=array(), $data=array(), $inline_errors=array(), $time_select=array(), $custom_fields=array()) {
$IPBHTML = "";

$this->registry->templateStriping['register'] = array( FALSE, "row1","row2");
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("register", "0" ) . "
" . $this->registry->getClass('output')->addJSModule("facebook", "0" ) . "
<script type='text/javascript'>
//<![CDATA[
	ipb.register.inSection = \"mainform\";
	ipb.register.nameMaxLength = \"{$this->settings['max_user_name_length']}\";
	ipb.register.allowedChars = \"{$this->settings['username_characters']}\";
	ipb.templates['accept'] = \"&nbsp;<span id='[id]_msg' class='reg_msg reg_accept' style='display: none'><img src='{$this->settings['img_url']}/accept.png' alt='{$this->lang->words['icon']}' /> [msg]</span>\";
	ipb.templates['error'] = \"&nbsp;<span id='[id]_msg' class='reg_msg reg_error' style='display: none'><img src='{$this->settings['img_url']}/exclamation.png' alt='{$this->lang->words['icon']}' /> [msg]</span>\";
//]]>
</script>
<!-- SKINNOTE TEMPORARY ERROR OUTPUT UNTIL RIKKI FIXES :) -->
" . ((is_array( $general_errors ) && count( $general_errors )) ? ("
<div class='message error'>
	{$this->lang->words['following_errors']}
	<ul>
		".$this->__f__5b17498ae294375f6e2888bb373995eb($general_errors,$data,$inline_errors,$time_select,$custom_fields)."	</ul>
</div>
") : ("")) . "<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=global&amp;section=register", 'public','' ), "", "" ) . "\" method=\"post\" name=\"REG\" id='register'>
	<input type=\"hidden\" name=\"termsread\" value=\"1\" />
	<input type=\"hidden\" name=\"agree_to_terms\" value=\"1\" />
	<input type=\"hidden\" name=\"do\" value=\"process_form\" />
	<input type=\"hidden\" name=\"coppa_user\" value=\"{$data['coppa_user']}\" />
	
	<div id='register_info' class='right general_box'>
		" . (($this->settings['fbc_api_id']) ? ("
			<h3 class='bar'>{$this->lang->words['reg_with_facebook']}</h3>
			<p>
				<div id='fbUserBox'>
					{$this->lang->words['log_with_facebook']}
					<br />
					<fb:login-button size=\"medium\" background=\"light\" length=\"long\" onlogin=\"ipb.facebook.register_loadUser();\"></fb:login-button>
				</div>
				<br clear='both' />
			</p>
			<br />
		") : ("")) . "
	
		<h3>{$this->lang->words['why_register']}</h3>
		{$this->settings['register_page_info']}
	</div>
	<div id='register_form' class='block_wrap left'>
		<h2>{$this->lang->words['ready_register']}</h2>
		
		<p class='extra'>
			{$this->lang->words['reg_free']}
			<br />
			{$this->lang->words['already_account']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=global&amp;section=login", 'public','' ), "", "" ) . "' title='{$this->lang->words['goto_signin']}'>{$this->lang->words['sign_in_page']}</a>
			<br />
		</p>
		" . ((is_array( $inline_errors ) && ( $inline_errors['username'] || $inline_errors['dname'] || $inline_errors['email'] || $inline_errors['password'] )) ? ("
			<p class='message error'>{$this->lang->words['reg_errors_found']}</p>	
		") : ("")) . "
		
		<div class='generic_bar'></div>
		<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["register"] ) . "'>
			<h3 class='bar'>{$this->lang->words['reg_step1']}</h3>
			
			<ul>
				" . (($data['requireName']) ? ("<li class='field required " . (($inline_errors['username']) ? ("error") : ("")) . "'>
						<label for='login_name'>{$this->lang->words['reg_choose_user']}</label>
						<input type='text' class='input_text' id='login_name' size='25' maxlength='{$this->settings['max_user_name_length']}' value='{$this->request['UserName']}' name='UserName' /><br />
						<span class='desc'>" . (($inline_errors['username']) ? ("<span class='error'>{$inline_errors['username']}<br /></span>") : ("")) . "{$this->lang->words['char_cant_use']}</em></span>
					</li>") : ("")) . "
				" . (($this->settings['auth_allow_dnames'] == 1 OR !$data['requireName']) ? ("<li class='field required " . (($inline_errors['dname']) ? ("error") : ("")) . "'>
						<label for='display_name'>{$this->lang->words['reg_choose_dname']}</label>
						<input type='text' class='input_text' id='display_name' size='25' maxlength='{$this->settings['max_user_name_length']}' value='{$this->request['members_display_name']}' name='members_display_name' /><br />
						<span class='desc'>" . (($inline_errors['dname']) ? ("<span class='error'>{$inline_errors['dname']}<br /></span>") : ("")) . "{$this->lang->words['dname_desc_one']} {$this->settings['max_user_name_length']} {$this->lang->words['dname_desc_two']}</span>
					</li>") : ("")) . "
			</ul>
			<hr />
			<ul>
				<li class='field required " . (($inline_errors['email']) ? ("error") : ("")) . "'>
					<label for='email_1'>{$this->lang->words['reg_enter_email']}</label>
					<input type='text' id='email_1' class='input_text email' size='25' maxlength='150' name='EmailAddress' value='{$this->request['EmailAddress']}' /><br />
					<span class='desc'>" . (($inline_errors['email']) ? ("<span class='error'>{$inline_errors['email']}<br /></span>") : ("")) . "{$this->lang->words['reg_enter_email_desc']}</span>
				</li>
				<li class='field nodesc required'>
					<label for='email_2'>{$this->lang->words['reg_reenter_email']}</label>
					<input type='text' id='email_2' class='input_text email' size='25' maxlength='150' name='EmailAddress_two' value='{$this->request['EmailAddress_two']}' />
				</li>
			</ul>
			<hr />
			<ul>
				<li class='field required " . (($inline_errors['password']) ? ("error") : ("")) . "'>
					<label for='password_1'>{$this->lang->words['reg_choose_password']}</label>
					<input type='password' id='password_1' class='input_text password' size='25' maxlength='32' value='{$this->request['PassWord']}' name='PassWord' /><br />
					<span class='desc'>" . (($inline_errors['password']) ? ("<span class='error'>{$inline_errors['password']}<br /></span>") : ("")) . "{$this->lang->words['reg_choose_password_desc']}</span>
				</li>
				<li class='field nodesc required'>
					<label for='password_2'>{$this->lang->words['reg_reenter_password']}</label>
					<input type='password' id='password_2' class='input_text password' size='25' maxlength='32' value='{$this->request['PassWord_Check']}' name='PassWord_Check' /><br />
				</li>
			</ul>
		</fieldset>
		<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["register"] ) . "'>
			<h3 class='bar'>{$this->lang->words['reg_step2']}</h3>
			
			<ul>
				<li class='field checkbox'>
					<input type=\"checkbox\" name=\"allow_admin_mail\" id=\"allow_admin_mail\" value=\"1\" class=\"input_check\" " . (($this->request['allow_admin_mail'] || !isset( $this->request['allow_admin_mail'] )) ? ("checked='checked'") : ("")) . " />
					<label for='allow_admin_mail'>{$this->lang->words['receive_admin_emails']}</label>
				</li>
				<li class='field checkbox nodesc'>
					<input type=\"checkbox\" name=\"allow_member_mail\" id=\"allow_member_mail\" value=\"1\" class=\"input_check\" " . (($this->request['allow_member_mail']) ? ("checked='checked'") : ("")) . " />
					<label for=\"allow_member_mail\">{$this->lang->words['receive_member_emails']}</label>
				</li>
				<li class='field'>
					<label for='timezone'>{$this->lang->words['time_zone']}</label>
					<select id='timezone' class='input_select' name='time_offset'>
						".$this->__f__a3b8ffba08c0945e925e2f0127b9fdc2($general_errors,$data,$inline_errors,$time_select,$custom_fields)."					</select>
				</li>
				<li class='field checkbox'>
					<input type='checkbox' id='dst' name='dst' value='1' class='input_check' " . (($this->request['dst']) ? ("checked='checked'") : ("")) . " /> <label for='dst' id='dst_label'>{$this->lang->words['auto_dst_detection']}</label>
				</li>
			</ul>
		</fieldset>
		" . ((( is_array( $custom_fields['required'] ) && count( $custom_fields['required'] ) ) || ( is_array( $custom_fields['optional'] ) && count( $custom_fields['optional'] ) )) ? ("<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["register"] ) . "'>
			<h3 class='bar'>{$this->lang->words['reg_step3']}</h3>
			
			<ul>
			" . ((is_array( $custom_fields['required'] ) && count( $custom_fields['required'] )) ? ("
				".$this->__f__36fcc0affb964a688761e1ed92abc6c7($general_errors,$data,$inline_errors,$time_select,$custom_fields)."			") : ("")) . "
			
			" . ((is_array( $custom_fields['optional'] ) && count( $custom_fields['optional'] )) ? ("
				".$this->__f__c21d6e745dbee23939704485f1721779($general_errors,$data,$inline_errors,$time_select,$custom_fields)."			") : ("")) . "
			<!--{SUBS.MANAGER}-->
			<!--IBF.MODULES.EXTRA-->
		</fieldset>") : ("")) . "
		{$data['captchaHTML']}
		{$data['qandaHTML']}
		<fieldset class='submit'>
			<input type='submit' class='input_submit' value='{$this->lang->words['register']}' /> {$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "", 'public','' ), "", "" ) . "' title='{$this->lang->words['cancel_link']}' class='cancel'>{$this->lang->words['cancel']}</a>
		</fieldset>	
	</div>
</form>
<!--FB Template-->
<div id='fb-template-main' style='display:none'>
	<div style='float:left; margin-right:4px;margin-bottom:3px'>
		<fb:profile-pic uid=loggedinuser facebook-logo=true></fb:profile-pic>
	</div>
	{$this->lang->words['fb_welcome']} <strong><fb:name uid=loggedinuser useyou=false></fb:name></strong>
	<div class='desc'>
		{$this->lang->words['fb_logged_in']}.
		<br clear='both'/>
		<br />
		{$this->lang->words['fb_reg_with']}
		<form action='{$this->settings['base_url']}app=core&amp;module=global&amp;section=login&amp;do=fbc_loginWithNew' method='post' name='linkNewAccForm' id='fbc_linkNewAccForm'>
			<input type='button' class='input_submit' id='fbc_completeNewAcc'  value='{$this->lang->words['fb_complete_reg']}' />
		</form>
	</div>
</div>
" . ((IPSLib::fbc_enabled() === TRUE) ? ("
<script src=\"http://static.ak.connect.facebook.com/js/api_lib/v0.4/FeatureLoader.js.php\" type=\"text/javascript\"></script>
<script type=\"text/javascript\">
	/* Init Facebook JS */
	try
	{
		FB_RequireFeatures([\"XFBML\"], function()
		{
			FB.init(\"{$this->settings['fbc_api_id']}\", \"{$this->settings['fbc_xdlocation']}\" );
			FB.Facebook.get_sessionState().waitUntilReady(function()
			{
				FB.Connect.ifUserConnected( ipb.facebook.register_loadUser );
			} );
		} );
	}
	catch( error )
	{
		//alert( error );
	}
</script>
") : ("")) . "";
return $IPBHTML;
}


function __f__5b17498ae294375f6e2888bb373995eb($general_errors=array(), $data=array(), $inline_errors=array(), $time_select=array(), $custom_fields=array())
{
	$_ips___x_retval = '';
	foreach( $general_errors as $r )
	{
		
		$_ips___x_retval .= "
			<li>{$r}</li>
		
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__a3b8ffba08c0945e925e2f0127b9fdc2($general_errors=array(), $data=array(), $inline_errors=array(), $time_select=array(), $custom_fields=array())
{
	$_ips___x_retval = '';
	foreach( $time_select as $k => $v )
	{
		
		$_ips___x_retval .= "
						<option value='{$k}'" . (($k == $this->request['time_offset']) ? (" selected='selected'") : ("")) . ">{$v}</option>
						
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__36fcc0affb964a688761e1ed92abc6c7($general_errors=array(), $data=array(), $inline_errors=array(), $time_select=array(), $custom_fields=array())
{
	$_ips___x_retval = '';
	foreach( $custom_fields['required'] as $_field )
	{
		
		$_ips___x_retval .= "
					" . (($_field['desc'] == '') ? ("
						<li class='field nodesc required {$_field['type']}'>
					") : ("
						<li class='field required {$_field['type']}'>
					")) . "
							<label for='cprofile_{$_field['id']}'>{$_field['name']}</label>
							{$_field['field']}
							" . (($_field['desc'] != '') ? ("<span class='desc'>{$_field['desc']}</span>") : ("")) . "
						</li>
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__c21d6e745dbee23939704485f1721779($general_errors=array(), $data=array(), $inline_errors=array(), $time_select=array(), $custom_fields=array())
{
	$_ips___x_retval = '';
	foreach( $custom_fields['optional'] as $_field )
	{
		
		$_ips___x_retval .= "
					" . (($_field['desc'] == '') ? ("
						<li class='field nodesc optional {$_field['type']}'>
					") : ("
						<li class='field optional {$_field['type']}'>
					")) . "
							<label for='cprofile_{$_field['id']}'>{$_field['name']}</label>
							{$_field['field']}
							" . (($_field['desc'] != '') ? ("<span class='desc'>{$_field['desc']}</span>") : ("")) . "
						</li>
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- registerShowTerms --*/
function registerShowTerms($text="",$coppa_user="") {
$IPBHTML = "";
$IPBHTML .= "<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=global&amp;section=register&amp;coppa_user={$coppa_user}&amp;termsread=1&amp;coppa_pass=1", 'public','' ), "", "" ) . "\" method=\"post\">
	<h2>{$this->lang->words['tc_title']}</h2>
	<p class='message'>{$this->lang->words['tc_text']}</p>
	<br />
	
	<div class='general_box'>
		<h3>{$this->lang->words['forum_terms']}</h3>
		<p>{$text}</p>
	</div>
	<fieldset class='submit'>
		<input class='input_check' type=\"checkbox\" id=\"agree_cbox\" name=\"agree_to_terms\" value=\"1\" /> <label for='agree_cbox'><strong>{$this->lang->words['agree_submit']}</strong></label>
		<br /><br />
		<input type=\"submit\" value=\"{$this->lang->words['tc_regbut']}\" class=\"input_submit\" />
	</fieldset>
</form>";
return $IPBHTML;
}

/* -- registration_error --*/
function registration_error($message) {
$IPBHTML = "";
$IPBHTML .= "<span class='error'>$message</span>";
return $IPBHTML;
}

/* -- show_lostpass_form_auto --*/
function show_lostpass_form_auto($aid="",$uid="") {
$IPBHTML = "";
$IPBHTML .= "<input type=\"hidden\" name=\"uid\" value=\"$uid\" />
<input type=\"hidden\" name=\"aid\" value=\"$aid\" />";
return $IPBHTML;
}

/* -- show_lostpass_form_manual --*/
function show_lostpass_form_manual() {
$IPBHTML = "";
$IPBHTML .= "<h3 class='bar'>{$this->lang->words['lpf_title']}</h3>
	<ul>
		<li class='field'>
			<label for='user_id'>{$this->lang->words['user_id']}</label>
			<input type=\"text\" size=\"32\" maxlength=\"32\" name=\"uid\" id='user_id' class='input_text' />
		</li>
		<li class='field'>
			<label for='aid'>{$this->lang->words['val_key']}</label>
			<input type=\"text\" size=\"32\" maxlength=\"50\" name=\"aid\" id='aid' class='input_text' />
		</li>
	</ul>";
return $IPBHTML;
}

/* -- showAuthorize --*/
function showAuthorize($member="") {
$IPBHTML = "";
$IPBHTML .= "<h2>{$this->lang->words['registration_process']}</h2>
<div class='generic_bar'></div>
<div class='post_form'>
	<p class='field row2'>
		{$this->lang->words['thank_you']} {$member['members_display_name']}. {$this->lang->words['auth_text']} {$member['email']}
	</p>
</div>";
return $IPBHTML;
}

/* -- showLostpassForm --*/
function showLostpassForm($error) {
$IPBHTML = "";
$IPBHTML .= "<h2>{$this->lang->words['dumb_header']}</h2>
" . ((isset( $error ) && $error) ? ("
	<p class='message error'>
		{$error}
	</p>
") : ("")) . "
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&module=global&section=lostpass", 'public','' ), "", "" ) . "\" method=\"post\">
<input type=\"hidden\" name=\"do\" value=\"03\" />
<input type=\"hidden\" name=\"type\" value=\"lostpass\" />
<p class='message unspecific'>{$this->lang->words['dumb_text']}</p>
<div class='generic_bar'></div>
	<div class='post_form'>
		<!--IBF.INPUT_TYPE-->
		<h3 class='bar'>New Password</h3>
		" . (($this->settings['lp_method'] == 'choose') ? ("
			<ul>
				<li class='field'>
					<label for=\"pass1\">{$this->lang->words['lpf_pass1']}</label>
					<input type=\"password\" size=\"32\" maxlength=\"32\" name=\"pass1\" id='pass1' class='input_text' />
					<br /><span class='desc'>{$this->lang->words['lpf_pass11']}</span>
				</li>
				<li class='field'>
					<label for=\"pass2\">{$this->lang->words['lpf_pass2']}</label>
					<input type=\"password\" size=\"32\" maxlength=\"32\" name=\"pass2\" id='pass2' class='input_text' />
					<br /><span class='desc'>{$this->lang->words['lpf_pass22']}</span>
				</li>
			</ul>
		") : ("
			<p class='field'>
		 		{$this->lang->words['lp_random_pass']}
			</p>
		")) . "
		<!--{REG.ANTISPAM}-->
		<fieldset class='submit'>
			<input class='input_submit' type=\"submit\" value=\"{$this->lang->words['dumb_submit']}\" />
		</fieldset>
	</div>
</form>";
return $IPBHTML;
}

/* -- showLostPassWaitRandom --*/
function showLostPassWaitRandom($member="") {
$IPBHTML = "";
$IPBHTML .= "<h2>{$this->lang->words['lpf_title']}</h2>
<p class='message'>
	{$this->lang->words['lpass_text_random']}
</p>";
return $IPBHTML;
}

/* -- showManualForm --*/
function showManualForm($type="reg") {
$IPBHTML = "";
$IPBHTML .= "<h2>{$this->lang->words['dumb_header']}</h2>
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "", 'public','' ), "", "" ) . "\" method=\"post\" name=\"REG\" onsubmit=\"return Validate()\">
<input type=\"hidden\" name=\"act\" value=\"Reg\" />
<input type=\"hidden\" name=\"CODE\" value=\"03\" />
<input type=\"hidden\" name=\"type\" value=\"$type\" />
<div class='generic_bar'></div>
<div class='post_form'>
	<fieldset class='row1'>
		<h3 class='bar'>{$this->lang->words['complete_form']}</h3>
		<ul>
			<li class='field'>
				<label for='userid'>{$this->lang->words['user_id']}</label>
				<input type=\"text\" size=\"32\" maxlength=\"32\" name=\"uid\" id='userid' class='input_text' />
			</li>
			<li class='field'>
				<label for='valkey'>{$this->lang->words['val_key']}</label>
				<input type=\"text\" size=\"32\" maxlength=\"50\" name=\"aid\" id='valkey' class='input_text' />
			</li>
		</ul>
	</fieldset>
	<fieldset class='submit'>
		<input class='input_submit' type=\"submit\" value=\"{$this->lang->words['dumb_submit']}\" />
	</fieldset>
</div>
</form>";
return $IPBHTML;
}

/* -- showPreview --*/
function showPreview($member="") {
$IPBHTML = "";
$IPBHTML .= "<h2>{$this->lang->words['registration_process']}</h2>
<p class='message'>
	{$this->lang->words['thank_you']} {$member['members_display_name']}. {$this->lang->words['preview_reg_text']}
</p>";
return $IPBHTML;
}

/* -- showRevalidated --*/
function showRevalidated() {
$IPBHTML = "";
$IPBHTML .= "<h2>{$this->lang->words['rv_title']}</h2>
<p class='message'>
	{$this->lang->words['rv_process']}<br />
	{$this->lang->words['rv_done']}
</p>";
return $IPBHTML;
}

/* -- showRevalidateForm --*/
function showRevalidateForm($name="",$error="") {
$IPBHTML = "";
$IPBHTML .= "<h2>{$this->lang->words['rv_title']}</h2>
<!-- skinnote error needs to be formatted -->
" . (($error) ? ("
<p class='message error'>{$this->lang->words[$error]}</p>
<br />
") : ("")) . "
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "", 'public','' ), "", "" ) . "\" method=\"post\" name=\"REG\">
<input type=\"hidden\" name=\"app\" value=\"core\" />
<input type='hidden' name='module' value='global' />
<input type='hidden' name='section' value='register' />
<input type=\"hidden\" name=\"do\" value=\"reval2\" />
	<p class='message unspecific'>
		{$this->lang->words['rv_ins']}
	</p>
	
	<div class='post_form'>
		<fieldset class='general_box'>
			<h3>Revalidate</h3>
			<label for='username'>{$this->lang->words['rv_name']}</label>
			<input type=\"text\" class='input_text' id='username' size=\"32\" maxlength=\"64\" name=\"username\" value=\"$name\" />
		</fieldset>
		<fieldset class='submit'>
			<input class='input_submit' type=\"submit\" value=\"{$this->lang->words['rv_go']}\" /> {$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "", 'public','' ), "", "" ) . "' title='{$this->lang->words['cancel']}' class='cancel'>{$this->lang->words['cancel']}</a>
		</fieldset>
	</div>
</form>";
return $IPBHTML;
}

/* -- subsm_end --*/
function subsm_end() {
$IPBHTML = "";
$IPBHTML .= "</select>
			<div style=\"display: none; position: absolute; border: 3px outset #000;width:300px;background-color:#FFF\" class=\"tableborder\" id=\"subspkdiv\">
				<div class='row1' style='padding:4px' id=\"pkdesc\"></div>
				<div class='row2' style='padding:4px' align=\"right\"><a href=\"#\" onclick='toggleview(\"subspkdiv\"); return false;'>{$this->lang->words['subsm_close']}</a></div>
			</div>
		</td>
		<td align=\"center\">
			<input type=\"button\" class=\"button\" onclick=\"get_more_info()\" style='display:none' id='reg-get-more-info' value=\"{$this->lang->words['subsm_more']}\" />
		</td>
	</tr>
</table>
</fieldset><br />";
return $IPBHTML;
}

/* -- subsm_row --*/
function subsm_row($id="",$title="",$cost="",$duration="") {
$IPBHTML = "";
$IPBHTML .= "<option value=\"{$id}\">$title ($duration) - $cost</option>";
return $IPBHTML;
}

/* -- subsm_start --*/
function subsm_start($cur="") {
$IPBHTML = "";
$IPBHTML .= "<br />
<fieldset class=\"\">
<legend><b>{$this->lang->words['subsm_title']}</b></legend>
	<div class=\"desc\"> &nbsp;{$this->lang->words['cc_currency_in']} $cur</div>
	<table class='ipbtable' cellspacing=\"0\">
		<tr>
			<td width=\"1%\">
				<select class=\"dropdown\" onchange='reg_get_more_check()' style='width:300px' name='subspackage' id=\"subspackage\">";
return $IPBHTML;
}

/* -- tmpl_form --*/
function tmpl_form($action="",$hidden="",$title="",$content="") {
$IPBHTML = "";
$IPBHTML .= "<form method=\"post\" action=\"$action\">
$hidden
<div class=\"borderwrap\">
	<div class=\"maintitle\">$title</div>
	<table class='ipbtable' cellspacing=\"0\">
		$content
	</table>
	<div class=\"formsubtitle\" align=\"center\"><input type=\"submit\" /></div>
</div>
</form>";
return $IPBHTML;
}



}

/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>