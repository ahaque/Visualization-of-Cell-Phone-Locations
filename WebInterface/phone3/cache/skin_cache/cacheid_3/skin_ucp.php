<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 3               */
/* CACHE FILE: Generated: Sun, 06 Sep 2009 04:32:25 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_ucp_3 {

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	/* Make object */
	$this->registry   =  $registry;
	$this->DB         =  $this->registry->DB();
	$this->settings   =& $this->registry->fetchSettings();
	$this->request    =& $this->registry->fetchRequest();
	$this->lang       =  $this->registry->getClass('class_localization');
	$this->member     =  $this->registry->member();
	$this->memberData =& $this->registry->member()->fetchMemberData();
	$this->cache      =  $this->registry->cache();
	$this->caches     =& $this->registry->cache()->fetchCaches();
}
	/* -- coreAttachments --*/
function coreAttachments($info="",$pages="",$attachments) {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- coreNotesForm --*/
function coreNotesForm($editor_html="") {
$IPBHTML = "";
$IPBHTML .= "<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["row1"] ) . "'>
	<h3>{$this->lang->words['m_notes']}</h3>
	<div class='message unspecified'>{$this->lang->words['note_pad_empty']}</div>
	<div>
		{$editor_html}
	</div>
</fieldset>";
return $IPBHTML;
}

/* -- displayNameForm --*/
function displayNameForm($form=array(),$error="",$okmessage="") {
$IPBHTML = "";
$IPBHTML .= "" . (($okmessage != "") ? ("
	<p class='message'>{$okmessage}</p>
") : ("")) . "
<fieldset class='row1'>
	<h3>{$this->lang->words['dname_title']}</h3>
	<br />
	" . (($form['_noPerm']) ? ("
		<p class='message error'>{$form['_noPerm']}</p>
	") : ("
		<p class='message unspecific'>{$form['_lang_string']}</p>
		<ul>
			<li class='field'>
				<label for='displayName'>{$this->lang->words['dname_choose']}</label><input class='input_text' type=\"text\" maxlength='{$this->settings['max_user_name_length']}' name=\"displayName\" id=\"displayName\" value=\"{$this->request['displayName']}\" size='30' /> <br />
				<span class='desc'>{$this->lang->words['dname_choose2']}</span>
			</li>
			<li class='field'>
				<label for='displayPassword'>{$this->lang->words['dname_password']}</label><input class='input_text' type=\"password\" maxlength='{$this->settings['max_user_name_length']}' name=\"displayPassword\" id=\"displayPassword\" value=\"\" size='30' /> <br />
				<span class='desc'>{$this->lang->words['dname_password2']}</span>
			</li>
		</ul>
	")) . "
</fieldset>";
return $IPBHTML;
}

/* -- emailChangeForm --*/
function emailChangeForm($txt, $_message, $captchaHTML) {
$IPBHTML = "";
$IPBHTML .= "<fieldset class='row1'>
	<h3>{$this->lang->words['change_email_title']}</h3>
	<br />
	<p class='message unspecific'>
		$txt
		" . (($this->memberData['g_access_cp']) ? ("
			<br /><br />{$this->lang->words['admin_emailpassword']}
		") : ("")) . "
	</p>
	" . ((!$this->memberData['g_access_cp']) ? ("
		<ul>
			<li class='field'>
				<label for='in_email_1'>{$this->lang->words['ce_new_email']}</label>
				<input type=\"text\" name=\"in_email_1\" id='in_email_1' class='input_text' value=\"\" />
			</li>
			<li class='field'>
				<label for='in_email_2'>{$this->lang->words['ce_new_email2']}</label>
				<input type=\"text\" name=\"in_email_2\" id='in_email_2' class='input_text' value=\"\" />
			</li>
			<li class='field'>
				<label for='password'>{$this->lang->words['ec_passy']}</label>
				<input type=\"password\" id='password' class='input_text' name=\"password\" value=\"\" />
			</li>
		</ul>
	") : ("")) . "
</fieldset>
" . (($captchaHTML != '' AND !$this->memberData['g_access_cp']) ? ("
	<br />
	$captchaHTML
") : ("")) . "";
return $IPBHTML;
}

/* -- field_dropdown --*/
function field_dropdown($name="",$options="") {
$IPBHTML = "";
$IPBHTML .= "<select name=\"$name\" class='input_select'>
	$options
</select>";
return $IPBHTML;
}

/* -- field_entry --*/
function field_entry($title="",$desc="",$content="",$id="") {
$IPBHTML = "";
$IPBHTML .= "<li class='field'>
	<label for='field_$id'>$title</label>
	{$content}
	" . (($desc) ? ("<span class='desc'>{$desc}</span>") : ("")) . "
</li>";
return $IPBHTML;
}

/* -- field_textarea --*/
function field_textarea($name="",$value="") {
$IPBHTML = "";
$IPBHTML .= "<textarea cols=\"80\" rows=\"5\" wrap=\"soft\" name=\"$name\" class='input_text'>$value</textarea>";
return $IPBHTML;
}

/* -- field_textinput --*/
function field_textinput($name="",$value="") {
$IPBHTML = "";
$IPBHTML .= "<input type=\"text\" size=\"50\" name=\"$name\" value='$value' class='input_text' />";
return $IPBHTML;
}

/* -- forumPrefsForm --*/
function forumPrefsForm($emailData, $data) {
$IPBHTML = "";

$this->registry->templateStriping['usercp'] = array( FALSE, "row1","row2");
$IPBHTML .= "<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3>{$this->lang->words['settings_display']}</h3>
	<ul>
		<li class='field checkbox'>
			<input type='checkbox' name='viewSignatures' id='view_sigs' value='1' class='input_check'" . (($this->memberData['view_sigs']) ? (" checked=\"checked\"") : ("")) . "/> <label for='view_sigs'>{$this->lang->words['settings_viewsig']}</label>
		</li>
		<li class='field checkbox'>
			<input type='checkbox' name='viewImages' id='view_img' value='1' class='input_check'" . (($this->memberData['view_img']) ? (" checked=\"checked\"") : ("")) . "/> <label for='view_img'>{$this->lang->words['settings_viewimg']}</label>
		</li>
		<li class='field checkbox'>
			<input type='checkbox' name='viewAvatars' id='view_avatar' value='1' class='input_check'" . (($this->memberData['view_avs']) ? (" checked=\"checked\"") : ("")) . "/> <label for='view_avatar'>{$this->lang->words['settings_viewava']}</label>
		</li>
		<li class='field'>
			<label for='post_per_page' />{$this->lang->words['pp_number_posts']}</label>
			<select name=\"postpage\" class='input_select' id='posts_per_page'>
				<option value='-1'>{$this->lang->words['pp_use_default']}</option>
				".$this->__f__a0f6a512da5e89e381e4ca0e2f2964d1($emailData,$data)."			</select>
		</li>
		<li class='field'>
			<label for='topics_per_page' />{$this->lang->words['pp_number_topics']}</label>
			<select name=\"topicpage\" class='input_select' id='topics_per_page'>
				<option value='-1'>{$this->lang->words['pp_use_default']}</option>
				".$this->__f__84ac6e04839088af05ea72a005000a71($emailData,$data)."			
			</select>
		</li>
	</ul>
</fieldset>
<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3>{$this->lang->words['board_prefs']}</h3>
	<ul>
		<li class='field checkbox'>
			<input type='checkbox' class='input_check' id='send_full_msg' name='send_full_msg' value='1' {$emailData['email_full']} /> <label for='send_full_msg' />{$this->lang->words['send_full_msg']}</label><br />
			<span class='desc'>{$this->lang->words['send_full_msg_desc']}</span>
		</li>
		<li class='field checkbox'>
			<input class='input_check' type=\"checkbox\" id='auto_track' name=\"auto_track\" value=\"1\" {$emailData['auto_track']} /> <label for='auto_track' />{$this->lang->words['auto_track']}</label>
			<ul>
				<li class='field'>
					<label for='track_choice'>{$this->lang->words['auto_track_type']}</label>
					<select name=\"trackchoice\" id='track_choice' class='input_select'>
						<option value=\"none\" {$emailData['trackOption']['none']}>{$this->lang->words['subs_none_title']}</option>
						<option value=\"immediate\" {$emailData['trackOption']['immediate']}>{$this->lang->words['subs_immediate']}</option>
						<option value=\"delayed\" {$emailData['trackOption']['delayed']}>{$this->lang->words['subs_delayed']}</option>
						<option value=\"daily\" {$emailData['trackOption']['daily']}>{$this->lang->words['subs_daily']}</option>
						<option value=\"weekly\" {$emailData['trackOption']['weekly']}>{$this->lang->words['subs_weekly']}</option>
					</select>
				</li>
			</ul>
		</li>
		<li class='field'>
			<label for='topic_display_mode'>{$this->lang->words['ucp_topic_display_mode']}</label> 
			<select name=\"topic_display_mode\" id='topic_display_mode' class='input_select'>
				<option value=\"linear\"" . ((IPSCookie::get('topicmode') == 'linear') ? (" selected") : ("")) . ">{$this->lang->words['ucp_standard']}</option>
				<option value=\"linearplus\"" . ((IPSCookie::get('topicmode') == 'linearplus') ? (" selected") : ("")) . ">{$this->lang->words['ucp_linearplus']}</option>
				<option value=\"threaded\"" . ((IPSCookie::get('topicmode') == 'threaded') ? (" selected") : ("")) . ">{$this->lang->words['ucp_outline']}</option>				
			</select>
			<span class='desc'>
				<strong>{$this->lang->words['ucp_standard']}:</strong> {$this->lang->words['ucp_standard_explain']}<br />
				<strong>{$this->lang->words['ucp_linearplus']}:</strong> {$this->lang->words['ucp_linearplus_explain']}<br />
				<strong>{$this->lang->words['ucp_outline']}:</strong> {$this->lang->words['ucp_outline_explain']}
			</span>
		</li>		
	</ul>
</fieldset>";
return $IPBHTML;
}


function __f__a0f6a512da5e89e381e4ca0e2f2964d1($emailData, $data)
{
	$_ips___x_retval = '';
	foreach( $data['viewPostsForm'] as $r )
	{
		
		$_ips___x_retval .= "
					<option value='{$r[0]}'" . (($r[0] == $data['postsPerPage']) ? (" selected='selected'") : ("")) . ">{$r[1]}</option>
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__84ac6e04839088af05ea72a005000a71($emailData, $data)
{
	$_ips___x_retval = '';
	foreach( $data['viewTopicsForm'] as $r )
	{
		
		$_ips___x_retval .= "
					<option value='{$r[0]}'" . (($r[0] == $data['topicsPerPage']) ? (" selected='selected'") : ("")) . ">{$r[1]}</option>
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- forumsInlineAvatarImages --*/
function forumsInlineAvatarImages($images=array(), $dir) {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- generalSettingsForm --*/
function generalSettingsForm($times) {
$IPBHTML = "";

$this->hasOpenID = false;
$IPBHTML .= "".$this->__f__4ecfa5634f33fffa94f10a7df848f6b9($times)."" . (($this->hasOpenID) ? ("
	<fieldset class='row2'>
		<h3>{$this->lang->words['identity_url_h3']}</h3>
		<ul>
			<li class='field'>
				<label for='identity_url'>{$this->lang->words['identity_url']}</label><input class='input_text' size='30' type=\"text\" name=\"identity_url\" id=\"identity_url\" value=\"{$this->memberData['identity_url']}\" /> <br />
				<span class='desc'>{$this->lang->words['identity_url_desc']}</span>
			</li>
		</ul>
	</fieldset>
") : ("")) . "
<fieldset class='row1'>
	<h3>{$this->lang->words['privacy_settings']}</h3>
	<ul>
		<li class='field checkbox'>
			<input class='input_check' type=\"checkbox\" name=\"hide_email\" id=\"hide_email\" value=\"1\"" . (($this->memberData['hide_email']) ? (" checked=\"checked\"") : ("")) . "/> <label for='hide_email'>{$this->lang->words['hide_email']}</label><br />
			<span class='desc'>{$this->lang->words['hide_email_desc']}</span>
		</li>
		<li class='field checkbox'>
			<input type='checkbox' class='input_check' id='admin_updates' name='admin_send' value='1'" . (($this->memberData['allow_admin_mails']) ? (" checked=\"checked\"") : ("")) . "/> <label for='admin_updates'>{$this->lang->words['admin_send']}</label><br />
			<span class='desc'>{$this->lang->words['admin_send_desc']} $time</span>
		</li>
	</ul>
</fieldset>
<fieldset class='row2'>
	<h3>{$this->lang->words['settings_time']}</h3>
	<ul>
		<li class='field'>
			<label for='timezone'>{$this->lang->words['ucp_timzeone']}</label>
			<select name='timeZone' id='timezone' class='input_select'>
			".$this->__f__e8cf168680a00053dafdad4ede43763c($times)."			</select>
			<span class='desc'>{$this->lang->words['settings_time_txt2']} " . $this->registry->getClass('class_localization')->getDate('{custom:now}',"LONG", 1) . "</span>
		</li>
		<li class='field checkbox'>
			" . (($this->request['dsterror'] == 1) ? ("
				{$this->lang->words['dst_error']}
			") : ("")) . "
			<input type='checkbox' class='input_check' id='dst' name=\"dstCheck\" onclick='toggle_dst()' value=\"1\"" . (($this->memberData['members_auto_dst']) ? (" checked=\"checked\"") : ("")) . "/> <label for='dst'>{$this->lang->words['dst_correction_title']}</label><br />
			<span class='desc'>{$this->lang->words['dst_auto2']}</span>
		</li>
		<li class='field checkbox' id='dst-manual'>
			<input type='checkbox' class='input_check' id='dstManual' name=\"dstOption\" value=\"1\"" . (($this->memberData['dst_in_use']) ? (" checked=\"checked\"") : ("")) . "/> <label for='dstManual'>{$this->lang->words['ucp_dst_now']}</label><br />
			<span class='desc'>{$this->lang->words['ucp_dst_effect']}</span>
		</li>
	</ul>
</fieldset>
<fieldset class='row1'>
	<h3>{$this->lang->words['ucp_op_pm_title']}</h3>
	<ul>
		" . (($this->memberData['members_disable_pm'] != 2) ? ("<li class='field checkbox'>
			<input type='checkbox' name='disableMessenger' class='input_check' id='disable_msg' value='1'" . (($this->memberData['members_disable_pm']) ? (" checked=\"checked\"") : ("")) . "/> <label for='disable_msg'>{$this->lang->words['ucp_op_pm']}</label><br />
			<span class='desc'>{$this->lang->words['ucp_op_pm_desc']}</span>
		</li>") : ("")) . "
		<li class='field checkbox'>
			<input type='checkbox' class='input_check' id='email_notify' name='pm_reminder' value='1'" . (($this->memberData['email_pm']) ? (" checked=\"checked\"") : ("")) . "/> <label for='email_notify'>{$this->lang->words['pm_reminder']}</label><br />
			<span class='desc'>{$this->lang->words['pm_reminder_desc']}</span>
		</li>
		<li class='field checkbox'>
			<input type='checkbox' name='showPMPopUp' id='board_notify' class='input_check' value='1'" . (($this->memberData['view_pop']) ? (" checked=\"checked\"") : ("")) . "/> <label for='board_notify'>{$this->lang->words['settings_dopopup']}</label><br />
			<span class='desc'>{$this->lang->words['settings_dopopup_desc']}</span>
		</li>
	</ul>
</fieldset>
<fieldset class='row2 '>
	<h3>{$this->lang->words['ucp_title_posting']}</h3>
	<ul>
		" . (($this->settings['posting_allow_rte'] == 1) ? ("<li class='field checkbox'>
				<input type='checkbox' class='input_check' id='editor_type' name='editorChoice' value='1' " . (($this->memberData['members_editor_choice'] == 'rte') ? (" checked=\"checked\"") : ("")) . "/> <label for='editor_type'>{$this->lang->words['enable_rte']}</label><br />
				<span class='desc'>{$this->lang->words['rte_text']}</span>
			</li>") : ("")) . "
		
		" . (($this->settings['uploadFormType']) ? ("<!-- Fancy uploader is available, so show user option... -->
			<li class='field checkbox'>
				<input type='checkbox' class='input_check' id='member_uploader' name='member_uploader' value='1' " . (($this->memberData['member_uploader'] == 'flash') ? (" checked=\"checked\"") : ("")) . "/> <label for='member_uploader'>{$this->lang->words['enable_flash']}</label><br />
				<span class='desc'>{$this->lang->words['flash_text']}</span>
			</li>") : ("")) . "
	</ul>
</fieldset>";
return $IPBHTML;
}


function __f__4ecfa5634f33fffa94f10a7df848f6b9($times)
{
	$_ips___x_retval = '';
	foreach( $this->cache->getCache('login_methods') as $method )
	{
		
		$_ips___x_retval .= "
	" . (($method['login_folder_name'] == 'openid') ? ("" . (($this->hasOpenID = true) ? ("") : ("")) . "") : ("")) . "

";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__e8cf168680a00053dafdad4ede43763c($times)
{
	$_ips___x_retval = '';
	foreach( $times as $off => $words )
	{
		
		$_ips___x_retval .= "
				<option value='{$off}' " . (($off == $this->memberData['time_offset']) ? (" selected=\"selected\"") : ("")) . ">{$words}</option>
			
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- inlineModIPMessage --*/
function inlineModIPMessage($msg='') {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>{$msg}</p>";
return $IPBHTML;
}

/* -- memberAvatarForm --*/
function memberAvatarForm($data="") {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- membersAboutMeForm --*/
function membersAboutMeForm($preview_about_me="",$editor_html="") {
$IPBHTML = "";

$this->registry->templateStriping['usercp'] = array( FALSE, "row1","row2");
$IPBHTML .= "" . (($preview_about_me) ? ("
	<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
		<h3>{$this->lang->words['cp_current_aboutme']}</h3>
		<div class='signature'>
			{$preview_about_me}
		</div>
	</fieldset>
") : ("")) . "
<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3>{$this->lang->words['cp_edit_aboutme']}</h3>
	<div>
		{$editor_html}
	</div>
</fieldset>";
return $IPBHTML;
}

/* -- membersFacebookConnect --*/
function membersFacebookConnect($fbuid, $fbUserData, $linkedMemberData) {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- membersIgnoredUsersForm --*/
function membersIgnoredUsersForm($members) {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- membersModFindUser --*/
function membersModFindUser($inlineMsg="") {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- membersModIPForm --*/
function membersModIPForm($ip="", $inlineMsg='') {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- membersModIPFormMembers --*/
function membersModIPFormMembers($pages="",$members) {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- membersModIPFormPosts --*/
function membersModIPFormPosts($count=0, $pageLinks='', $results) {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- membersPhotoForm --*/
function membersPhotoForm($cur_photo="",$show_size="",$p_max="") {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- membersProfileForm --*/
function membersProfileForm($personal_statement='',$required_output='',$optional_output='',$day='',$mon='',$year='') {
$IPBHTML = "";

$this->registry->templateStriping['usercp'] = array( FALSE, "row1","row2");
$IPBHTML .= "<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3>{$this->lang->words['ucp_comments']}</h3>
	<ul>
		<li class='field checkbox'>
			<input class='input_check' type='checkbox' value='1' name='pp_setting_count_comments' value='1' " . (($this->memberData['pp_setting_count_comments'] > 0) ? ("checked='checked'") : ("")) . " id='comments_enable' /><label for='comments_enable'>{$this->lang->words['ucp_enable_comments']}</label>
		</li>
		<li class='field'>
			<label for='comments_notify'>{$this->lang->words['ucp_comment_notify_type']}</label>
			<select name='pp_setting_notify_comments' id='comments_notify' class='input_select'>
				<option value='none'" . (($this->memberData['pp_setting_notify_comments'] == 'none') ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_none']}</option>
				<option value='email'" . (($this->memberData['pp_setting_notify_comments'] == 'email') ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_email']}</option>
				<option value='pm'" . (($this->memberData['pp_setting_notify_comments'] == 'pm') ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_pm']}</option>
			</select>
		 	<br />
			<span class='desc'>{$this->lang->words['m_choose_comm_type']}</span>
		</li>
		<li class='field'>
			<label for='comments_moderate'>{$this->lang->words['ucp_comment_approval']}</label>
			<select name='pp_setting_moderate_comments' id='comments_moderate' class='input_select'>
				<option value='0'" . ((! $this->memberData['pp_setting_moderate_comments']) ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_disabled']}</option>
				<option value='1'" . (($this->memberData['pp_setting_moderate_comments']) ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_enabled']}</option>
			</select>
			<br />
			<span class='desc'>{$this->lang->words['m_choose_cmod_type']}</span>
		</li>
	</ul>
</fieldset>
" . (($this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
		<h3>{$this->lang->words['ucp_friends']}</h3>
		<ul>
			<li class='field checkbox'>
				<input class='input_check' type='checkbox' value='1' name='pp_setting_count_friends' value='1' " . (($this->memberData['pp_setting_count_friends'] > 0) ? ("checked='checked'") : ("")) . " id='friends_enable' /><label for='friends_enable'>{$this->lang->words['ucp_show_friends_profile']}</label>
			</li>
			<li class='field'>
				<label for='friend_notify'>{$this->lang->words['ucp_friend_notify']}</label>
				<select name='pp_setting_notify_friend' id='friend_notify' class='input_select'>
					<option value='none'" . (($this->memberData['pp_setting_notify_friend'] == 'none') ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_none']}</option>
					<option value='email'" . (($this->memberData['pp_setting_notify_friend'] == 'email') ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_email']}</option>
					<option value='pm'" . (($this->memberData['pp_setting_notify_friend'] == 'pm') ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_pm']}</option>
				</select>
				<br />
				<span class='desc'>{$this->lang->words['m_choose_friend_type']}</span>
			</li>
			<li class='field'>
				<label for='friend_moderate'>{$this->lang->words['ucp_friend_approve']}</label>
				<select name='pp_setting_moderate_friends' id='friend_moderate' class='input_select'>
					<option value='0'" . ((! $this->memberData['pp_setting_moderate_friends']) ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_disabled']}</option>
					<option value='1'" . (($this->memberData['pp_setting_moderate_friends']) ? (" selected=\"selected\"") : ("")) . ">{$this->lang->words['op_dd_enabled']}</option>
				</select>
				<br />
				<span class='desc'>{$this->lang->words['m_choose_fmod_type']}</span>
			</li>
		</ul>
	</fieldset>") : ("")) . "
<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3>{$this->lang->words['profile_information']}</h3>
	<ul>
		<li class='field'>
			<label for='pp_latest_visitors'>{$this->lang->words['ucp_show_x_latest']}</label>
			<select name='pp_setting_count_visitors' id='pp_latest_visitors' class='input_select'>
				<option value='0'" . ((!$this->memberData['pp_setting_count_visitors']) ? (" selected") : ("")) . ">0</option>
				<option value='3'" . (($this->memberData['pp_setting_count_visitors'] == 3) ? (" selected") : ("")) . ">3</option>
				<option value='5'" . (($this->memberData['pp_setting_count_visitors'] == 5) ? (" selected") : ("")) . ">5</option>
				<option value='10'" . (($this->memberData['pp_setting_count_visitors'] == 10) ? (" selected") : ("")) . ">10</option>
			</select>
		</li>
		" . ((($this->settings['post_titlechange']) && ($this->memberData['posts'] > $this->settings['post_titlechange'])) ? ("
			<li class='field'>
				<label for='member_title'>{$this->lang->words['member_title']}</label>
				<input type='text' class='input_text' size='30' id='member_title' name='member_title' value='{$this->memberData['title']}' />
				<br />
				<span class='desc'>{$this->lang->words['member_title_desc']}</span>
			</li>
		") : ("")) . "
		" . (($day AND $mon AND $year) ? ("
			<li class='field'>
				<label for='birthday'>{$this->lang->words['ucp_birthday_select']}</label>
				<select name=\"month\">&nbsp;
					".$this->__f__9f899841ae0bb3df7391032986949808($personal_statement,$required_output,$optional_output,$day,$mon,$year)."				</select>			
				<select name=\"day\">&nbsp;
					".$this->__f__5bc66afb08303ce39a1bbbe9b95116b0($personal_statement,$required_output,$optional_output,$day,$mon,$year)."				</select> 
				<select name=\"year\">&nbsp;
					".$this->__f__d932cc2dbfa5d09c5741f5072d768b79($personal_statement,$required_output,$optional_output,$day,$mon,$year)."				</select> <br />
				<span class='desc'>{$this->lang->words['ucp_birthday_optional']}</span>
			</li>
		") : ("")) . "
	</ul>
</fieldset>

" . (($required_output) ? ("
	<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
		<h3>{$this->lang->words['ucp_required_info']}</h3>
		<ul>
			{$required_output}
		</ul>
	</fieldset>
") : ("")) . "
" . (($optional_output) ? ("
	<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
		<h3>{$this->lang->words['ucp_other_info']}</h3>
		<ul>
			{$optional_output}
		</ul>
	</fieldset>
") : ("")) . "";
return $IPBHTML;
}


function __f__9f899841ae0bb3df7391032986949808($personal_statement='',$required_output='',$optional_output='',$day='',$mon='',$year='')
{
	$_ips___x_retval = '';
	foreach( $mon as $m )
	{
		
		$_ips___x_retval .= "
						<option value='{$m[0]}'" . (($m[0] == $this->memberData['bday_month']) ? (" selected=\"selected\"") : ("")) . ">{$m[1]}</option>
					
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__5bc66afb08303ce39a1bbbe9b95116b0($personal_statement='',$required_output='',$optional_output='',$day='',$mon='',$year='')
{
	$_ips___x_retval = '';
	foreach( $day as $d )
	{
		
		$_ips___x_retval .= "
						<option value='{$d[0]}'" . (($d[0] == $this->memberData['bday_day']) ? (" selected=\"selected\"") : ("")) . ">{$d[1]}</option>
					
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__d932cc2dbfa5d09c5741f5072d768b79($personal_statement='',$required_output='',$optional_output='',$day='',$mon='',$year='')
{
	$_ips___x_retval = '';
	foreach( $year as $y )
	{
		
		$_ips___x_retval .= "
						<option value='{$y[0]}'" . (($y[0] == $this->memberData['bday_year']) ? (" selected=\"selected\"") : ("")) . ">{$y[1]}</option>
					
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- membersSignatureForm --*/
function membersSignatureForm($preview_sig="",$editor_html="",$sig_restrictions=array()) {
$IPBHTML = "";

$this->registry->templateStriping['usercp'] = array( FALSE, "row1","row2");
$IPBHTML .= "<input type='hidden' name='key' value='{$key}' />
<input type='hidden' name='removeattachid' value='0' />" . (($preview_sig) ? ("
	<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
		<h3>{$this->lang->words['cp_current_sig']}</h3>
		<div class='signature'>
			{$preview_sig}
		</div>
	</fieldset>
") : ("")) . "
<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3>{$this->lang->words['cp_edit_sig']}</h3>
	<div>
		{$editor_html}
	</div>
</fieldset>
" . (($this->memberData['g_signature_limits']) ? ("<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
		<h3>{$this->lang->words['sig_restrictions']}s</h3>
		<br />
		<div class='desc'>
			{$this->lang->words['sig_restrictions_contain']}
			<ul class='bullets'>
				" . (($sig_restrictions[1] != 0) ? ("
					<li>" . sprintf( $this->lang->words['sig_max_imagesr'], $sig_restrictions[1] ) . "</li>
				") : ("
					<li>{$this->lang->words['sig_max_imagesr_nl']}</li>
				")) . "" . (($sig_restrictions[2] != 0 || $sig_restrictions[3] != 0) ? ("
					<li>" . sprintf( $this->lang->words['sig_max_imgsize'], $sig_restrictions[2], $sig_restrictions[3] ) . "</li>
				") : ("
					<li>{$this->lang->words['sig_max_imgsize_nl']}</li>
				")) . "" . (($sig_restrictions[4] != 0) ? ("
					<li>" . sprintf( $this->lang->words['sig_max_urls'], $sig_restrictions[4] ) . "</li>
				") : ("
					<li>{$this->lang->words['sig_max_urls_nl']}</li>
				")) . "" . (($sig_restrictions[5] != 0) ? ("
					<li>" . sprintf( $this->lang->words['sig_max_lines'], $sig_restrictions[5] ) . "</li>
				") : ("
					<li>{$this->lang->words['sig_max_lines_nl']}</li>
				")) . "
			</ul>
		</div>
	</fieldset>") : ("")) . "
" . $this->registry->getClass('output')->getTemplate('global')->include_lightbox() . "
" . $this->registry->getClass('output')->getTemplate('global')->include_highlighter(1) . "";
return $IPBHTML;
}

/* -- membersSignatureFormError --*/
function membersSignatureFormError($form) {
$IPBHTML = "";
$IPBHTML .= "<fieldset class='row1'>
	<h3>{$this->lang->words['cp_edit_sig']}</h3>
	<br />
	" . (($form['_noPerm']) ? ("
		<p class='message error'>{$form['_noPerm']}</p>
	") : ("")) . "
</fieldset>";
return $IPBHTML;
}

/* -- modAnnounceForm --*/
function modAnnounceForm($announce="",$button="",$forum_html="",$type="",$editor_html="",$msg="") {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- modAnnouncements --*/
function modAnnouncements($announcements) {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- passwordChangeForm --*/
function passwordChangeForm() {
$IPBHTML = "";
$IPBHTML .= "<fieldset class='row1'>
	<h3>{$this->lang->words['account_pass_title']}</h3>
	<br />
	<p class='message unspecific'>
		" . (($this->memberData['g_access_cp']) ? ("
			{$this->lang->words['admin_emailpassword']}
		") : ("
			{$this->lang->words['pass_change_text']}
		")) . "
	</p>
	
	" . ((!$this->memberData['g_access_cp']) ? ("
		<ul>
			<li class='field'>
				<label for='current_pass'>{$this->lang->words['account_pass_old']}</label>
				<input type=\"password\" name=\"current_pass\" value=\"\" id='current_pass' class='input_text' />
			</li>
			<li class='field'>
				<label for='new_pass_1'>{$this->lang->words['account_pass_new']}</label>
				<input type=\"password\" name=\"new_pass_1\" value=\"\" id='new_pass_1' class='input_text' />
			</li>
			<li class='field'>
				<label for='new_pass_2'>{$this->lang->words['account_pass_new2']}</label>
				<input type=\"password\" name=\"new_pass_2\" value=\"\" id='new_pass_2' class='input_text' />
			</li>
		</ul>
	") : ("")) . "
</fieldset>";
return $IPBHTML;
}

/* -- Show_attachments --*/
function Show_attachments($data="") {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- ucp_message --*/
function ucp_message($title="",$msg="") {
$IPBHTML = "";
$IPBHTML .= "<div class=\"formsubtitle\">{$title}</div>
	<p>$msg</p>";
return $IPBHTML;
}

/* -- userCPTemplate --*/
function userCPTemplate($current_tab, $html, $tabs, $current_area, $errors=array(), $hide_form=0, $maxUpload=0) {
$IPBHTML = "";
$IPBHTML .= "" . (($hide_form == 0) ? ("" . (($maxUpload) ? ("
		<form method='post' enctype=\"multipart/form-data\" action='{$this->settings['base_url']}app=core&amp;module=usercp&amp;tab={$current_tab}&amp;area={$current_area}' id='userCPForm'>
	") : ("
		<form method='post' action='{$this->settings['base_url']}app=core&amp;module=usercp&amp;tab={$current_tab}&amp;area={$current_area}' id='userCPForm'>
	")) . "") : ("")) . "
	<fieldset>
		<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"$maxUpload\" />
		<input type='hidden' name='do' value='save' />
		<input type='hidden' name='secure_hash' value='{$this->member->form_hash}' />
		<input type='hidden' name='s' value='{$this->request['s']}' />
	</fieldset>
<h2>{$this->lang->words['ucp_title']}</h2>
<ul class='tab_bar no_title'>
	".$this->__f__6e6b484fcb6ce2d0923680fea62bfeef($current_tab,$html,$tabs,$current_area,$errors,$hide_form,$maxUpload)."</ul>
<div class='tab_body usercp_body'>
	<ul id='usercp_menu'>
		" . ((is_array( $tabs[ $current_tab ]['_menu'] ) AND count( $tabs[ $current_tab ]['_menu'] )) ? ("
			".$this->__f__afef66de996c6e58bf5411ffbf9769de($current_tab,$html,$tabs,$current_area,$errors,$hide_form,$maxUpload)."		") : ("")) . "
	</ul>
	<div id='usercp_content'>
		" . ((is_array( $errors ) AND count( $errors )) ? ("
			<p class='message error'>
				".$this->__f__56be81a40c7905bccb8cc736cdbeb610($current_tab,$html,$tabs,$current_area,$errors,$hide_form,$maxUpload)."			</p>
		") : ("")) . "
		" . (($this->request['saved'] == 1) ? ("
			<p class='message'>{$this->lang->words['ucp__settings_saved']}</p>
		") : ("")) . "
		$html
		
		" . (($hide_form == 0) ? ("
		<fieldset class='submit'>
			<input type='submit' class='input_submit' name='submit' value='{$this->lang->words['ucp__save_changes']}' /> {$this->lang->words['or']} <a href='{$this->settings['base_url_with_app']}module=usercp&amp;tab={$current_tab}&amp;area={$current_area}' title='{$this->lang->words['cancel_edit']}' class='cancel'>{$this->lang->words['cancel']}</a>
		</fieldset>
		") : ("")) . "
	</div>
</div>
" . (($hide_form == 0) ? ("
</form>
") : ("")) . "";
return $IPBHTML;
}


function __f__6e6b484fcb6ce2d0923680fea62bfeef($current_tab, $html, $tabs, $current_area, $errors=array(), $hide_form=0, $maxUpload=0)
{
	$_ips___x_retval = '';
	foreach( $tabs as $tab_app => $tab )
	{
		
		$_ips___x_retval .= "
		" . (($tab_app == $current_tab) ? ("
			<li class='active'>{$tab['_name']}</li>
		") : ("
			<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=usercp&amp;tab={$tab_app}", 'publicWithApp','' ), "", "" ) . "\" title=\"{$this->lang->words['settings_for_ucp']} {$tab['_name']}\">{$tab['_name']}</a></li>
		")) . "
	
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__afef66de996c6e58bf5411ffbf9769de($current_tab, $html, $tabs, $current_area, $errors=array(), $hide_form=0, $maxUpload=0)
{
	$_ips___x_retval = '';
	foreach( $tabs[ $current_tab ]['_menu'] as $idx => $item )
	{
		
		$_ips___x_retval .= "
				" . (($item['area'] == $current_area) ? ("
					<li class='active'>{$item['title']}</li>
				") : ("
					<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=usercp&amp;tab={$current_tab}&amp;{$item['url']}", 'publicWithApp','' ), "", "" ) . "\">{$item['title']}</a></li>
				")) . "
			
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__56be81a40c7905bccb8cc736cdbeb610($current_tab, $html, $tabs, $current_area, $errors=array(), $hide_form=0, $maxUpload=0)
{
	$_ips___x_retval = '';
	foreach( $errors as $error )
	{
		
		$_ips___x_retval .= "
					$error<br />
				
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- watchChoices --*/
function watchChoices($forum="",$topic="",$method="") {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- watchedForums --*/
function watchedForums($forumArray) {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}

/* -- watchedTopics --*/
function watchedTopics($mainForumArray, $dateCut) {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>
	You cannot use this feature with the LoFi theme
</p>";
return $IPBHTML;
}



}

/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>