<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 2               */
/* CACHE FILE: Generated: Sun, 06 Sep 2009 01:36:56 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_profile_2 {

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	/* Make object */
	$this->registry   =  $registry;
	$this->DB         =  $this->registry->DB();
	$this->settings   =& $this->registry->fetchSettings();
	$this->request    =& $this->registry->fetchRequest();
	$this->lang       =  $this->registry->getClass('class_localization');
	$this->member     =  $this->registry->member();
	$this->memberData =& $this->registry->member()->fetchMemberData();
	$this->cache      =  $this->registry->cache();
	$this->caches     =& $this->registry->cache()->fetchCaches();
}
	/* -- customField__gender --*/
function customField__gender($f) {
$IPBHTML = "";
$IPBHTML .= "<gender>
	<title>{$f->raw_data['pf_title']}</title>	
" . (($f->value) ? ("" . (($f->value == 'm') ? ("
	<icon>{$this->settings['img_url']}/profile/male.png</icon>
	<value>Male</value>
	") : ("")) . "" . (($f->value == 'f') ? ("
	<icon>{$this->settings['img_url']}/profile/female.png</icon>
	<value>Female</value>	
	") : ("")) . "" . (($f->value =='u') ? ("
	<icon>{$this->settings['img_url']}/profile/mystery.png</icon>
	<value>Not Telling</value>	
	") : ("")) . "") : ("
	<icon></icon>
	<value>{$this->lang->words['m_no_gender']}</value>	
")) . "
</gender>";
return $IPBHTML;
}

/* -- customField__generic --*/
function customField__generic($f) {
$IPBHTML = "";
$IPBHTML .= "" . (($f->parsed != '') ? ("<dt>{$f->raw_data['pf_title']}:</dt>
	<dd>
		" . ((is_array($f->parsed)) ? ("
			" . implode( '<br />', $f->parsed ) . "
		") : ("
			{$f->parsed}
		")) . "
	</dd>") : ("")) . "";
return $IPBHTML;
}

/* -- customFieldGroup__contact --*/
function customFieldGroup__contact($f) {
$IPBHTML = "";
$IPBHTML .= "<contact>
	<title>{$f->raw_data['pf_title']}</title>
	<icon>{$this->settings['public_dir']}/{$f->raw_data['pf_icon']}</icon>
	<value>
" . ((is_array( $f->parsed )) ? ("".$this->__f__7f52f0d21e4434fb3941cf3571616c89($f)."") : ("
		{$f->parsed}
")) . "
	</value>
</contact>";
return $IPBHTML;
}


function __f__7f52f0d21e4434fb3941cf3571616c89($f)
{
	$_ips___x_retval = '';
	foreach( $f->parsed as $value )
	{
		
		$_ips___x_retval .= "
		{$value}
	
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- dnameWrapper --*/
function dnameWrapper($member_name="",$records=array()) {
$IPBHTML = "";
$IPBHTML .= "<displaynames>
	<current>{$member_name}</current>
" . ((is_array($records) AND count($records)) ? ("
	<history>
    ".$this->__f__cce93d3e75f32db5c504cd6b302527a5($member_name,$records)."	</history>
") : ("")) . "
</displaynames>";
return $IPBHTML;
}


function __f__cce93d3e75f32db5c504cd6b302527a5($member_name="",$records=array())
{
	$_ips___x_retval = '';
	foreach( $records as $row )
	{
		
		$_ips___x_retval .= "
    	<entry>
    		<from>{$row['dname_previous']}<from>
		 	<to>{$row['dname_current']}</to>
		 	<date>" . $this->registry->getClass('class_localization')->getDate($row['dname_date'],"short", 0) . "</date>
		</entry>
	
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- friendsIframe --*/
function friendsIframe($member, $friends, $showWrapper=false) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- friendsList --*/
function friendsList($friends, $pages) {
$IPBHTML = "";

$this->registry->templateStriping['memberStripe'] = array( FALSE, "row1","row2");
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("friends", "0" ) . "
<h2>{$this->lang->words['m_friends_list']}</h2>
" . (($pages) ? ("
	<div class='topic_controls'>
		$pages
	</div>
") : ("")) . "
<ul class='tab_bar no_title'>
	" . (($this->request['tab'] == 'list' || !$this->request['tab']) ? ("
		<li class='active'><strong>{$this->lang->words['m_friends_list']}</strong></li>
		<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;section=friends&amp;module=profile&amp;do=list&amp;tab=pending", 'public','' ), "", "" ) . "' title='{$this->lang->words['m_friends_pending']}'>{$this->lang->words['m_friends_pending']}</a></li>
	") : ("")) . "" . (($this->request['tab'] == 'pending') ? ("
		<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;section=friends&amp;module=profile&amp;do=list&amp;tab=list", 'public','' ), "", "" ) . "' title='{$this->lang->words['m_friends_list']}'>{$this->lang->words['m_friends_list']}</a></li>
		<li class='active'><strong>{$this->lang->words['m_friends_pending']}</strong></li>
	") : ("")) . "
</ul>
" . ((is_array($friends) and count($friends) && $this->settings['friends_enabled']) ? ("
		<ul class='members'>
	".$this->__f__3fe7d0922db8f43bb91d1ffd71d367ec($friends,$pages)."	</ul>
") : ("<p class='no_messages'>
		" . (($this->request['tab'] == 'pending') ? ("
			No friends awaiting approval
		") : ("
			No friends to display
		")) . "
	</p>")) . "
" . (($pages) ? ("
	<div class='topic_controls'>
		$pages
	</div>
") : ("")) . "";
return $IPBHTML;
}


function __f__3fe7d0922db8f43bb91d1ffd71d367ec($friends, $pages)
{
	$_ips___x_retval = '';
	foreach( $friends as $friend )
	{
		
		$_ips___x_retval .= "
		" . (($this->request['tab'] == 'pending') ? ("<li id='member_id_{$friend['member_id']}' class='general_box member_entry " .  IPSLib::next( $this->registry->templateStriping["memberStripe"] ) . "'>
				<h3 class='bar'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['friends_member_id']}", 'public','' ), "{$friend['members_seo_name']}", "showuser" ) . "' title='View profile'>{$friend['members_display_name']}</a>" . $this->registry->getClass('output')->getTemplate('global')->user_popup($friend['member_id']) . "</h3>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", 'public','' ), "{$friend['members_seo_name']}", "showuser" ) . "' title='View profile'><img src='{$friend['pp_thumb_photo']}' width='{$friend['pp_thumb_width']}' height='{$friend['pp_thumb_height']}' alt=\"{$friend['members_display_name']}'s photo\" class='photo' /></a>	
			
				<dl class='info'>
					<dt class='clear'>Joined:</dt>
					<dd>" . $this->registry->getClass('class_localization')->getDate($friend['joined'],"short", 0) . "</dd>
					<dt class='clear'>Group:</dt>
					<dd>{$friend['_group_formatted']}</dd>
					<dt class='clear'>Posts:</dt>
					<dd>" . $this->registry->getClass('class_localization')->formatNumber( $friend['posts'] ) . "</dd>
					<dt class='clear'>Last Active:</dt>
					<dd>" . $this->registry->getClass('class_localization')->getDate($friend['last_activity'],"short", 0) . "</dd>
				</dl>
				
				<ul class='user_controls'>
					<li class='positive'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=moderate&amp;pp_option=approve&amp;pp_friend_id[{$friend['member_id']}]=1&amp;md5check={$this->member->form_hash}", 'public','' ), "", "" ) . "' title='Approve'>" . $this->registry->getClass('output')->getReplacement("approve") . " Approve Request</a></li>
					<li class='negative'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=moderate&amp;pp_option=delete&amp;pp_friend_id[{$friend['member_id']}]=1&amp;md5check={$this->member->form_hash}", 'public','' ), "", "" ) . "' title='Deny'>" . $this->registry->getClass('output')->getReplacement("deny") . " Deny Request</a></li>
				</ul>
				" . (($this->settings['pp_allow_member_rate']) ? ("<p class='rating'> 
						" . (($friend['pp_rating_real'] >= 1) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 2) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 3) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 4) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 5) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
					</p>") : ("")) . "
				
				" . (($this->settings['reputation_enabled']) ? ("" . (($friend['pp_reputation_points'] > 0) ? ("
						<p class='reputation positive'>
					") : ("")) . "
					" . (($friend['pp_reputation_points'] < 0) ? ("
						<p class='reputation negative'>
					") : ("")) . "
					" . (($friend['pp_reputation_points'] == 0) ? ("
						<p class='reputation zero'>
					") : ("")) . "
							<span class='number'>Reputation: {$friend['pp_reputation_points']}</span>
						</p>") : ("")) . "						
			</li>") : ("<li id='member_id_{$friend['friends_friend_id']}' class='general_box member_entry " .  IPSLib::next( $this->registry->templateStriping["memberStripe"] ) . "'>
				<h3 class='bar'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", 'public','' ), "{$friend['members_seo_name']}", "showuser" ) . "' title='View profile'>{$friend['members_display_name']}</a>" . $this->registry->getClass('output')->getTemplate('global')->user_popup($friend['member_id']) . "</h3>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", 'public','' ), "{$friend['members_seo_name']}", "showuser" ) . "' title='View profile'><img src='{$friend['pp_thumb_photo']}' width='{$friend['pp_thumb_width']}' height='{$friend['pp_thumb_height']}' alt=\"{$friend['members_display_name']}'s photo\" class='photo' /></a>	
			
				<dl class='info'>
					<dt class='clear'>Joined:</dt>
					<dd>" . $this->registry->getClass('class_localization')->getDate($friend['joined'],"short", 0) . "</dd>
					<dt class='clear'>Group:</dt>
					<dd>{$friend['_group_formatted']}</dd>
					<dt class='clear'>Posts:</dt>
					<dd>" . $this->registry->getClass('class_localization')->formatNumber( $friend['posts'] ) . "</dd>
					<dt class='clear'>Last Active:</dt>
					<dd>" . $this->registry->getClass('class_localization')->getDate($friend['last_activity'],"short", 0) . "</dd>
				</dl>
				
				<ul class='user_controls'>
					" . (($this->memberData['member_id'] AND $this->memberData['member_id'] != $friend['friends_friend_id'] && $this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("" . ((IPSMember::checkFriendStatus( $friend['friends_friend_id'] )) ? ("
							<li class='mini_friend_toggle is_friend' id='friend_profile_{$friend['friends_friend_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=remove&amp;member_id={$friend['friends_friend_id']}", 'public','' ), "", "" ) . "' title='Remove Friend'>" . $this->registry->getClass('output')->getReplacement("remove_friend") . "</a></li>
						") : ("
							<li class='mini_friend_toggle is_not_friend' id='friend_profile_{$friend['friends_friend_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=add&amp;member_id={$friend['friends_friend_id']}", 'public','' ), "", "" ) . "' title='Add as friend'>" . $this->registry->getClass('output')->getReplacement("add_friend") . "</a></li>								
						")) . "") : ("")) . "
					" . (($this->memberData['g_use_pm'] AND $this->memberData['members_disable_pm'] == 0 AND IPSLib::moduleIsEnabled( 'messaging', 'members' )) ? ("
						<li class='pm_button'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=send&amp;do=form&amp;fromMemberID={$friend['friends_member_id']}", 'public','' ), "", "" ) . "' title='PM this member' id='pm_xxx_{$friend['friends_friend_id']}'>" . $this->registry->getClass('output')->getReplacement("send_msg") . "</a></li>
					") : ("")) . "
					<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_posts&amp;mid={$friend['friends_friend_id']}&amp;view_by_title=1&amp;search_filter_app[forums]=1", 'public','' ), "", "" ) . "'>" . $this->registry->getClass('output')->getReplacement("find_posts_link") . " Find Topics</a></li>
					<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_posts&amp;mid={$friend['friends_friend_id']}" . ((! in_array( $this->settings['search_method'], array( 'traditional', 'sphinx' ) )) ? ("&amp;search_filter_app[forums]=1") : ("")) . "", 'public','' ), "", "" ) . "'>" . $this->registry->getClass('output')->getReplacement("find_posts_link") . " Find Posts</a></li>
					" . (($friend['has_blog']) ? ("
						<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;mid={$friend['friends_friend_id']}", 'public','' ), "", "" ) . "' title='{$this->lang->txt['view_blog']}'>" . $this->registry->getClass('output')->getReplacement("blog_link") . "</a></li>
					") : ("")) . "
					" . (($friend['has_gallery']) ? ("
						<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;module=user&amp;section=user&amp;user={$friend['friends_friend_id']}", 'public','' ), "", "" ) . "' title='VIew gallery'>" . $this->registry->getClass('output')->getReplacement("gallery_link") . "</a></li>
					") : ("")) . "
				</ul>
				" . (($this->settings['pp_allow_member_rate']) ? ("<p class='rating'> 
						" . (($friend['pp_rating_real'] >= 1) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 2) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 3) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 4) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 5) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
					</p>") : ("")) . "
				
				" . (($this->settings['reputation_enabled']) ? ("" . (($friend['pp_reputation_points'] > 0) ? ("
						<p class='reputation positive'>
					") : ("")) . "
					" . (($friend['pp_reputation_points'] < 0) ? ("
						<p class='reputation negative'>
					") : ("")) . "
					" . (($friend['pp_reputation_points'] == 0) ? ("
						<p class='reputation zero'>
					") : ("")) . "
							<span class='number'>Reputation: {$friend['pp_reputation_points']}</span>
						</p>") : ("")) . "						
			</li>")) . "
		
	
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- profileModern --*/
function profileModern($tabs=array(), $member=array(), $comments="", $friends=array(), $visitors=array(), $default_tab='posts', $default_tab_content='', $fields=null) {
$IPBHTML = "";
$IPBHTML .= "<profile>
		<id>{$member['member_id']}</id>
		<name>{$member['members_display_name']}</name>
		<rating>{$member['pp_rating_real']}</rating>
		<photo>{$member['pp_main_photo']}</photo>
		<reputation>{$member['pp_reputation_points']}</reputation>
		<group>{$member['g_title']}</group>
		<posts>" . $this->registry->getClass('class_localization')->formatNumber( $member['posts'] ) . "</posts>
		<postsperday>{$member['_posts_day']}</postsperday>
		<joined>" . $this->registry->getClass('class_localization')->getDate($member['joined'],"joined", 0) . "</joined>
		<views>" . $this->registry->getClass('class_localization')->formatNumber( $member['members_profile_views'] ) . "</views>
		<lastactive>{$member['_last_active']}></lastactive>
		<location>" . (($member['_online']) ? ("{$member['online_extra']}") : ("{$this->lang->words['online_offline']}")) . "</location>
		<title>{$member['title']}</title>
		<age>" . (($member['_age'] > 0) ? ("{$member['_age']}") : ("{$this->lang->words['m_age_unknown']}")) . "</age>
		<birthday>" . (($member['bday_day']) ? ("{$member['_bday_month']}" . (($member['bday_year']) ? (", {$member['bday_year']}") : ("")) . "") : ("{$this->lang->words['m_bday_unknown']}")) . "</birthday>
		<gender>{$member['custom_fields']['profile_info']['gender']}</gender>
		<contactinformation>
" . ((is_array( $member['custom_fields']['contact'])) ? ("".$this->__f__09a531a9a5971e14d0007c824267d38b($tabs,$member,$comments,$friends,$visitors,$default_tab,$default_tab_content,$fields)."") : ("")) . "
		</contactinformation>
		
" . (($member['pp_setting_count_visitors']) ? ("<latestvisitors>
	" . ((is_array( $visitors ) && count( $visitors )) ? ("".$this->__f__6b98dc64cef70009305c89b4fd00c4c1($tabs,$member,$comments,$friends,$visitors,$default_tab,$default_tab_content,$fields)."	") : ("")) . "
		</latestvisitors>") : ("")) . "
" . (($this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends'] AND $member['pp_setting_count_friends']) ? ("<friends>
	" . ((is_array($friends) and count($friends)) ? ("".$this->__f__9b239c724510bcd4765af726a85a9831($tabs,$member,$comments,$friends,$visitors,$default_tab,$default_tab_content,$fields)."	") : ("")) . "
		</friends>") : ("")) . "
	
" . (($member['pp_setting_count_comments'] > 0) ? ("
		<comments>
			$comments
		</comments>
") : ("")) . "
	</profile>";
return $IPBHTML;
}


function __f__09a531a9a5971e14d0007c824267d38b($tabs=array(), $member=array(), $comments="", $friends=array(), $visitors=array(), $default_tab='posts', $default_tab_content='', $fields=null)
{
	$_ips___x_retval = '';
	foreach( $member['custom_fields']['contact'] as $field )
	{
		
		$_ips___x_retval .= "
			{$field}
	
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__6b98dc64cef70009305c89b4fd00c4c1($tabs=array(), $member=array(), $comments="", $friends=array(), $visitors=array(), $default_tab='posts', $default_tab_content='', $fields=null)
{
	$_ips___x_retval = '';
	foreach( $visitors as $friend )
	{
		
		$_ips___x_retval .= "
			<user>
				<id>{$friend['member_id']}</id>
				<name>{$friend['members_display_name_short']}</name>
				<url>" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", 'public','' ), "{$friend['members_seo_name']}", "showuser" ) . "</url>
				<photo>{$friend['pp_mini_photo']}</photo>
				<visited>{$friend['_visited_date']}</visited>
			</user>
		
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

function __f__9b239c724510bcd4765af726a85a9831($tabs=array(), $member=array(), $comments="", $friends=array(), $visitors=array(), $default_tab='posts', $default_tab_content='', $fields=null)
{
	$_ips___x_retval = '';
	foreach( $friends as $friend )
	{
		
		$_ips___x_retval .= "
			<user>
				<id>{$friend['member_id']}</id>
				<name>{$friend['members_display_name_short']}</name>
				<url>" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", 'public','' ), "", "" ) . "</url>
				<photo>{$friend['pp_thumb_photo']}</photo>
			</user>
		
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- showCard --*/
function showCard($member, $download=0) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- showComments --*/
function showComments($member, $comments=array(), $new_id=0, $return_msg='', $links='') {
$IPBHTML = "";
$IPBHTML .= "" . ((is_array($comments) and count($comments)) ? ("".$this->__f__f945980585d49dfdcf060820ff410c3f($member,$comments,$new_id,$return_msg,$links)."	{$links}
") : ("")) . "";
return $IPBHTML;
}


function __f__f945980585d49dfdcf060820ff410c3f($member, $comments=array(), $new_id=0, $return_msg='', $links='')
{
	$_ips___x_retval = '';
	foreach( $comments as $comment )
	{
		
		$_ips___x_retval .= "
			<comment>
				<id>{$comment['comment_id']}</id>
				<text>{$comment['comment_content']}</text>
				<date>{$comment['_comment_date']}</date>
				<user>
					<id>{$comment['member_id']}</id>
					<name>{$comment['members_display_name_short']}</name>
					<url>" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$comment['member_id']}", 'public','' ), "{$comment['members_seo_name']}", "showuser" ) . "</url>
					<photo>{$comment['pp_thumb_photo']}</photo>
				</user>
			</comment>
	
";
	}
	$_ips___x_retval .= '';
	return $_ips___x_retval;
}

/* -- showIframeComments --*/
function showIframeComments($member, $comments, $pages) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- showPhoto --*/
function showPhoto($member) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- tabAboutMe --*/
function tabAboutMe($member=array()) {
$IPBHTML = "";
$IPBHTML .= "<aboutme>{$member['pp_about_me']}</aboutme>";
return $IPBHTML;
}

/* -- tabNoContent --*/
function tabNoContent($langkey) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- tabPosts --*/
function tabPosts($content) {
$IPBHTML = "";
$IPBHTML .= "<posts>
$content
</posts>";
return $IPBHTML;
}

/* -- tabSingleColumn --*/
function tabSingleColumn($row=array(), $read_more_link='', $url='', $title='') {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- tabTopics --*/
function tabTopics($content) {
$IPBHTML = "";
$IPBHTML .= "$content";
return $IPBHTML;
}



}

/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>