<?xml version="1.0" encoding="UTF-8"?>
<hookexport>
  <hookdata>
    <config>
      <hook_name>Status Updates</hook_name>
      <hook_desc>Displays the last 10 status updates from members</hook_desc>
      <hook_author>Invision Power Services, Inc</hook_author>
      <hook_email/>
      <hook_website>http://www.</hook_website>
      <hook_update_check/>
      <hook_requirements><![CDATA[a:4:{s:20:"hook_ipb_version_min";i:3;s:20:"hook_ipb_version_max";i:0;s:20:"hook_php_version_min";s:0:"";s:20:"hook_php_version_max";s:0:"";}]]></hook_requirements>
      <hook_version_human>1.0.0</hook_version_human>
      <hook_version_long/>
      <hook_extra_data><![CDATA[a:2:{s:7:"display";a:1:{s:9:"templates";s:0:"";}s:9:"templates";a:0:{}}]]></hook_extra_data>
      <hook_key>status_updates</hook_key>
    </config>
  </hookdata>
  <hookfiles>
    <file>
      <hook_file_real>boardIndexStatusUpdates.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>boardIndexStatusUpdates</hook_classname>
      <hook_data><![CDATA[a:6:{s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:11:"skin_boards";s:12:"skinFunction";s:18:"boardIndexTemplate";s:4:"type";s:7:"foreach";s:2:"id";s:11:"side_blocks";s:8:"position";s:9:"outer.pre";}]]></hook_data>
      <hooks_source><![CDATA[<?php

class boardIndexStatusUpdates
{
	public $registry;
	
	public function __construct()
	{
        /* Make registry objects */
		$this->registry		=  ipsRegistry::instance();
		$this->DB			=  $this->registry->DB();
	}
	
	public function getOutput()
	{
		/* Query the last 10 status updates */
		$this->DB->build( array(
								'select' 	=> 'pp.*',
								'from'		=> array( 'profile_portal' => 'pp' ),
								'where'		=> 'pp.pp_status <> ""',
								'order'		=> 'pp.pp_status_update DESC',
								'limit'		=> array( 0, 10 ),
								'add_join'	=> array(
														array(
																'select'	=> 'm.members_display_name, m.members_seo_name',
																'from'		=> array( 'members' => 'm' ),
																'where'		=> 'pp.pp_member_id=m.member_id',
																'type'		=> 'left'
															)
													)
						)	);
		$q = $this->DB->execute();
		
		/* Loop and build output array */
		$rows = array();
		
		while( $r = $this->DB->fetch( $q ) )
		{
			$r = ipsMember::buildProfilePhoto( $r );
			$rows[] = $r;
		}

		/* Return output */
		return $this->registry->output->getTemplate( 'boards' )->hookBoardIndexStatusUpdates( $rows );
	}
}]]></hooks_source>
    </file>
  </hookfiles>
  <hookextras_settings/>
  <hookextras_language/>
  <hookextras_modules/>
  <hookextras_help/>
  <hookextras_templates/>
  <hookextras_tasks/>
  <hookextras_database_create/>
  <hookextras_database_alter/>
  <hookextras_database_update/>
  <hookextras_database_insert/>
</hookexport>
